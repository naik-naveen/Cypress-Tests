let pendingAmount
let billAmount
let payAmount
describe('CampusTrack Tests', () => {
  const un = Cypress.env('USERNAME')
  const pwd = Cypress.env('PASSWORD')

  function randomIntFromInterval(min, max) { // min and max included 
    return Math.floor(Math.random() * (max - min + 1) + min)
  }
  const rndInt = randomIntFromInterval(50, 99)
  const string = rndInt.toString()

  beforeEach(() => { cy.login(un, pwd) })

  // Home Feature Tests

  it(' home page with user id on top right', () => {
    cy.visit('/home')
    cy.url().should('include', '/home')
    cy.contains(Cypress.env('USERNAME')).should('be.visible')
  })
  it('When user click profile should navigate to profile page', () => {
    cy.visit('/home')
    cy.contains(Cypress.env('USERNAME')).click()
    cy.get('a[href="/ctng4/home/userProfile"]').click()
    cy.url().should('include', '/home/userProfile')
    cy.get('label:contains(Name)').should('be.visible').next().children('input[name="Name"]').should('exist')
    cy.get('label:contains(Institute Name)').should('be.visible').next().children('input[name="instName"]').should('exist')
  })

  // Admin Feature Tests

  it('should navigate to admin page successfully ', () => {
    cy.visit('/admin')
    cy.url().should('include', '/admin')
    cy.get('li:contains(Action Links)').should('be.visible').parent().within(() => {
      cy.get('span:contains(Course)').should('be.visible').next().first().find('a[href="/ctng4/admin/course/manage"]').should('exist').parent().next().find('a[href="/ctng4/admin/course/add"]').should('exist')
      cy.get('span:contains(Data)').should('be.visible').next().find('a[href="/ctng4/admin/data/manage"]').should('exist')
      cy.get('span:contains(Institute)').should('be.visible').next().first().find('a[href="/ctng4/admin/inst"]').should('exist').parent().next().find('a[href="/ctng4/admin/inst/add"]').should('exist')
      cy.get('span:contains(Org)').should('be.visible').next().first().find('a[href="/ctng4/admin/org"]').should('exist').parent().next().find('a[href="/ctng4/admin/org/add"]').should('exist')
      cy.get('span:contains(Student)').should('be.visible').next().first().find('a[href="/ctng4/admin/student/manage"]').should('exist').parent().next().find('a[href="/ctng4/admin/student/add"]').should('exist')
      cy.get('span:contains(Report)').should('be.visible').next().first().find('a[href="/ctng4/admin/report/manage"]').should('exist').parent().next().find('a[href="/ctng4/admin/report/add"]').should('exist')
    })
    cy.get('a[href="/ctng4/admin/courseListReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/calendarReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/summaryReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/upcomingEventsAdminReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/receiptConsolidatedReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/usersReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/coursewiseBreakupReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/studentDetailsReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/sectionwiseBreakupReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/basicSectionwiseBreakupReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/sectionwiseParentDetailsReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/newAdmissionsReport"]').should('exist')
    cy.get('a[href="/ctng4/admin/tcStudentsList"').should('exist')
  })
  it('when user click on courses offered link,should navigate to Course List page successfully ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/courseListReport"]').click()
    cy.url().should('include', '/courseListReport')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('when user click on calender link, should navigate to Calendar Report page successfully ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/calendarReport"]').click()
    cy.url().should('include', '/calendarReport')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('when user click on Summary report  link, should navigate to Institutes Summary page successfully ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/summaryReport"]').click()
    cy.url().should('include', '/summaryReport')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('when user click on course add link, should navigate to course add page successfully ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/add"]').click()
    cy.url().should('include', 'course/add')
    cy.get('input[name="courseName"]').should('exist')
    cy.get('input[name="branch"]').should('exist')
    cy.get('select[name="eduLevel"]').should('exist')
    cy.get('input[name="affiliation"]').should('exist')
    cy.get('button[class="btn btn-xs btn-success"]').should('contain', 'Save').should('be.enabled')
  })
  it('When user enter valid details in all textfield of course add page and click on course should display in course manage page ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/add"]').click()
    cy.get('input[name="courseName"]').type(Cypress.env('course_add'))
    cy.get('input[name="branch"]').type(Cypress.env('BRANCH_add'))
    cy.get('select').select('Under gradutate').should('have.value', '20')
    cy.get('input[name="affiliation"]').type(Cypress.env('AFFILIATION_add'))
    cy.get('button[class="btn btn-xs btn-success"]').click()
    cy.get('a[href="/ctng4/admin/course/manage"]').click({ force: true })
    cy.get('input[placeholder="Search"]').type(Cypress.env('course_add'))
    cy.get('i[class="fa fa-search"]').click()
    cy.contains(Cypress.env('course_add')).should('be.visible')
  })
  it('When user click on Terms link, should navigate to Terms page ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('course_Name')).within(() => { cy.contains('a', 'Terms').click() })
    cy.url().should('include', '/admin/course/manageTerms')
    cy.get('a:contains(Add New Term)').should('be.visible')
  })
  it('When user click on Copy As link, should navigate to Copy As page ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('course_Name')).within(() => { cy.contains('a', 'Copy As').click() })
    cy.url().should('include', '/admin/course/manage/copy')
    cy.get('.form-group').contains('label', 'Name').next('div').find('input[name="courseName"]').should('exist')
    cy.get('button:contains(Save)').should('be.disabled')
  })
  it('When user click on Disable,selected course will be should be disabled', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/add"]').click({ force: true })
    cy.get('input[name="courseName"]').type(Cypress.env('courseName'))
    cy.get('input[name="branch"]').type(Cypress.env('BRANCH'))
    cy.get('select').select('Graduate').should('have.value', '30')
    cy.get('input[name="affiliation"]').type(Cypress.env('AFFILIATION'))
    cy.get('button[class="btn btn-xs btn-success"]').click()
    cy.get('a[href="/ctng4/admin/course/manage"]').click({ force: true })
    cy.contains('tr', Cypress.env('courseName')).within(() => { cy.get('a[class="text-danger"]').click() })
    // cy.contains('tr', 'B.Com 2').within(() => { cy.get('a[title="Enable course"]').click() })
    // cy.contains('tr', 'B.Com 2').find('a').contains('Enable').click()
  })
  it('When user click on Enable,selected course will be should be Enabled', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/add"]').click()
    cy.get('input[name="courseName"]').type(Cypress.env('courseName'))
    cy.get('input[name="branch"]').type(Cypress.env('BRANCH'))
    cy.get('select').select('Graduate').should('have.value', '30')
    cy.get('input[name="affiliation"]').type(Cypress.env('AFFILIATION'))
    cy.get('button[class="btn btn-xs btn-success"]').click()
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('courseName')).within(() => { cy.get('a[class="text-danger"]').click() })
    cy.contains('tr', Cypress.env('courseName')).within(() => { cy.get('a[title="Enable course"]').click({ force: true }) })
    // cy.contains('tr', 'B.Com 2').find('a').contains('Enable').click()
  })
  it('When user click on Add New Term link ,should navigate to Add Term page and able to add term', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('course')).within(() => { cy.contains('a', 'Terms').click() })
    cy.get('a:contains(Add New Term)').click()
    cy.url().should('include', '/admin/course/addTerm')
    cy.get('.form-group').contains('label', 'Name').next('div').find('input[name="termName"]').should('exist').type(Cypress.env('TermName'))
    cy.get('.form-group').contains('label', 'From').next('div').find('span').children('i[class="glyphicon glyphicon-calendar"]').next('input[name="from"]').should('exist').type(Cypress.env('DateFrom'))
    cy.get('.form-group').contains('label', 'To').next('div').children('span').find('i[class="glyphicon glyphicon-calendar"]').next('input[name="to"]').should('exist').type(Cypress.env('DateTo'))
    cy.get('button:contains(Save)').should('be.enabled').click()
  })
  it('When user click on Sections,should navigate to Course/term/sections page page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('course')).within(() => { cy.contains('a', 'Terms').click() })
    cy.contains('tr', Cypress.env('TermName')).contains('Sections').click()
    cy.url().should('include', '/manageSections')
    cy.get('a:contains(Add New Section)').should('be.visible')
  })
  it('When user click on Add New Section ,should navigate to section add page page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('course')).within(() => { cy.contains('a', 'Terms').click() })
    cy.contains('tr', Cypress.env('TermName')).contains('Sections').click()
    cy.get('a:contains(Add New Section)').click()
    cy.url().should('include', '/addSection')
    cy.get('div:contains(Section details )').should('be.visible')
    cy.get('button:contains(Save)').should('exist').should('be.disabled')
    cy.get('label:contains(Name)').should('be.visible').next().children('input[name="secName"]').should('exist')
  })
  it('When user click on Delete,User selected term should be deleted', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('course')).within(() => { cy.contains('a', 'Terms').click() })
    cy.contains('tr', Cypress.env('TermName')).contains('Delete').click()
    cy.get('a:contains(Add New Term)').click({ force: true })
    cy.get('input[name="termName"]').type(Cypress.env('TermName'))
    cy.get('input[name="from"]').type(Cypress.env('DateFrom'))
    cy.get('input[name="to"]').type(Cypress.env('DateTo'))
    cy.get('button:contains(Save)').click({ force: true })
    // cy.get('button[ng-reflect-router-link="/admin/course/manageTerms"]').click()
  })
  it('When user click on term name, User  should navigate to term edit page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('course')).within(() => { cy.contains('a', 'Terms').click() })
    cy.get('a:contains(Add New Term)').click({ force: true })
    cy.get('input[name="termName"]').type(Cypress.env('TermName'))
    cy.get('input[name="from"]').type(Cypress.env('DateFrom'))
    cy.get('input[name="to"]').type(Cypress.env('DateTo'))
    cy.get('button:contains(Save)').click({ force: true })
    cy.get('a:contains(Course)').click({ force: true })
    cy.contains('tr', Cypress.env('course')).within(() => { cy.contains('a', 'Terms').click() })
    cy.wait(4000)
    cy.contains('a', Cypress.env('TermName')).click()
    cy.url().should('include', '/course/editTerm')
    cy.get('.form-group').contains('label', 'Name').next('div').find('input[ng-reflect-model="First term"]').should('exist')
    cy.get('button:contains(Rename Term)').should('be.enabled')
    cy.get('.form-group').contains('label', 'From').next('div').children('span').find('i[class="glyphicon glyphicon-calendar"]').next('input[name="from"]').should('exist')
    cy.get('.form-group').contains('label', 'To').next('div').children('span').find('i[class="glyphicon glyphicon-calendar"]').next('input[name="to"]').should('exist')
    cy.get('button:contains(Update Term)').should('be.enabled')
  })
  it('When user edit/change the terms detail and click on Update Term button term details should be updated', () => {
    const now = new Date();
    cy.clock(now)
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('course')).within(() => { cy.contains('a', 'Terms').click() })
    cy.contains('a', Cypress.env('TermName')).click()
    cy.url().should('include', '/course/editTerm')
    cy.get('input[name="from"]').clear().type(Cypress.env('DateFrom'))
    cy.get('input[name="to"]').clear().type(new Date().toLocaleDateString())
    cy.get('button:contains(Update Term)').click()
  })
  it('When user click copy AS link navigte to course/manage/copy and enter valid input in name text field then save copied course on clicking save', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.contains('tr', Cypress.env('course_Name')).within(() => { cy.contains('a', 'Copy As').click() })
    cy.url().should('include', '/course/manage/copy')
    cy.get('input[name="courseName"]').type(Cypress.env('course_Name'))
    cy.get('button:contains(Save)').click()
  })
  it('When user click on course mange link, should navigate to course manage page ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.url().should('include', '/course/manage')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('a:contains(Add New Course)').should('exist')
    cy.get('thead').within(() => {
      cy.get('th').eq(0).should('contain', 'Name')
      cy.get('th').eq(1).should('contain', 'Level')
      cy.get('th').eq(2).should('contain', 'Affiliation')
      cy.get('th').eq(3).should('contain', 'Actions')
    })
  })
  it('When user click on Institutes Add link, should navigate to Institutes Add  page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/inst/add"]').click()
    cy.url().should('include', '/inst/add')
    cy.get('input[name="instName"]').should('exist')
    cy.get('input[name="instShortName"]').should('exist')
    cy.get('input[name="acadFrom"]').should('exist')
    cy.get('i[class="glyphicon glyphicon-calendar"]').should('exist')
    cy.get('input[name="acadTo"]').should('exist')
    cy.get('i[class="glyphicon glyphicon-calendar"]').should('exist')
    cy.get('button[class="btn btn-xs btn-success"]').should('contain', 'Save')
    cy.get('button[class="btn btn-xs btn-success"]').should('be.disabled')
  })
  it('When user enter all valid details in text field of institute add page , save button should get enabled', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/inst/add"]').click()
    cy.get('input[name="instName"]').type(Cypress.env('instName'))
    cy.get('input[name="instShortName"]').type(Cypress.env('instShortName'))
    cy.get('input[name="acadFrom"]').type(Cypress.env('DateFrom'))
    cy.get('input[name="acadTo"]').type(Cypress.env('DateTo'))
    cy.get('input[name="acadTo"]').click()
    cy.get('button[class="btn btn-xs btn-success"]').should('contain', 'Save').click({ force: true })
  })
  it('When user click on admin/inst link, should navigate to admin/inst  page', () => {
    cy.visit('/admin')
    cy.get('[title="Search/Edit Insts"]').click()
    cy.wait(5000)
    cy.url().should('include', '/admin/inst')
    cy.contains('h3 > small > a', 'Admin').siblings('strong').should('have.length', 2).each(($strong, index) => {
      const expectedTexts = ['Institute', 'Manage']
      cy.wrap($strong).should('have.text', expectedTexts[index])
    })
    cy.get('ul.list-group').within(() => {
      cy.contains('Security').should('exist')
      cy.get('a:contains(Manage Personas & Permissions)').should('exist')
      cy.get('a:contains(Manage Users (People who can log into institute))').should('exist')
    })
    cy.get('ul.list-group').first().within(() => {
      cy.contains('Finance').should('be.visible')
      cy.get('a:contains(Manage Finance)').should('exist')
    })
  })
  it('When user click on Manage Personas & Permissions  link, should navigate to persona manage page', () => {
    cy.visit('/admin')
    cy.get('[title="Search/Edit Insts"]').click()
    cy.wait(5000)
    cy.get('a[href="/ctng4/admin/inst/persona"]').click()
    cy.wait(5000)
    cy.url().should('include', '/inst/persona')
    cy.contains('h3 > small > a', 'Admin').siblings('strong').should('have.length', 2).each(($strong, index) => {
      const expectedTexts = ['Personas', 'Manage']
      cy.wrap($strong).should('have.text', expectedTexts[index])
    })
    cy.get('input[type="search"]').should('exist')
    cy.get('a:contains(Add New Persona)').should('exist')
    cy.get('thead tr th').should('have.length', 4).each((th, index) => cy.wrap(th).should('have.text', ['Title', 'Type', 'Manage', 'Actions'][index]))
  })
  it('When user click on Add New Persona link, should navigate to persona add page', () => {
    cy.visit('/admin')
    cy.get('[title="Search/Edit Insts"]').click()
    cy.wait(2000)
    cy.get('a[href="/ctng4/admin/inst/persona"]').click()
    cy.wait(3000)
    cy.get('a:contains(Add New Persona)').click()
    cy.url().should('include', '/persona/add')
    cy.contains('h3 > small > a', 'Admin').siblings('strong').should('have.length', 1).each(($strong, index) => {
      const expectedTexts = ['Add']
      cy.wrap($strong).should('have.text', expectedTexts[index])
    })
    cy.contains('.panel-heading', 'Persona Details').should('be.visible').children('span.pull-right').find('button').should('have.text', 'Save').and('be.disabled').and('be.visible')
    cy.get('label:contains(Title)').should('be.visible').next().find('input[name="personaName"]').should('exist')
    cy.get('label:contains(Type)').should('be.visible').next().find('select[name="persona"]').should('exist').find('option').should('have.length', 7).then((options) => {
      const optiontexts = ['Anon', 'Management', 'Parent', 'Staff', 'Student', 'External', 'Dev']
      options.each((i, option) => {
        expect(option.text).to.equal(optiontexts[i])
      })
    })
  })
  it('When user click on Manage User link, should navigate to Users Manage page', () => {
    cy.visit('/admin')
    cy.get('[title="Search/Edit Insts"]').click()
    cy.wait(2000)
    cy.get('a[href="/ctng4/admin/inst/user"]').click()
    cy.wait(3000)
    cy.url().should('include', '/inst/user')
    cy.contains('h3 > small > a', 'Admin').siblings('strong').should('have.length', 2).each(($strong, index) => {
      const expectedTexts = ['Users', 'Manage']
      cy.wrap($strong).should('have.text', expectedTexts[index])
    })
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('a:contains(Add New User)').should('exist')
    cy.get('thead tr th').should('have.length', 5).each((th, index) => cy.wrap(th).should('have.text', ['NameHandle', 'Email', 'Recovery Details', 'Manage', 'Actions'][index]))
  })
  it('When user click on Add New User link, should navigate to add Users page', () => {
    cy.visit('/admin')
    cy.get('[title="Search/Edit Insts"]').click()
    cy.wait(2000)
    cy.get('a[href="/ctng4/admin/inst/user"]').click()
    cy.wait(3000)
    cy.get('a:contains(Add New User)').click()
    cy.url().should('include', '/user/add')
    cy.contains('h3 > small > a', 'Admin').siblings('strong').should('have.length', 1).each(($strong, index) => {
      const expectedTexts = ['Add']
      cy.wrap($strong).should('have.text', expectedTexts[index])
    })
    cy.contains('.panel-heading', 'User Details ').should('be.visible').children('span.pull-right').find('button').should('have.text', 'Save').and('be.disabled').and('be.visible')
    cy.get('label:contains(Name)').should('be.visible').next().find('input[placeholder="first  middle  last"]').should('exist')
    cy.get('label:contains(Email)').should('be.visible').next().find('input[name="email"]').should('exist')
    cy.get('label:contains(Persona)').should('be.visible').next().find('select[name="persona"]').should('exist').find('option').should('have.length', 2).then((options) => {
      const optiontexts = ['Admin', 'Support']
      options.each((i, option) => {
        expect(option.text).to.equal(optiontexts[i])
      })
    })
  })
  it('When user click on Manage Finance link, should navigate to Finance page', () => {
    cy.visit('/admin')
    cy.get('[title="Search/Edit Insts"]').click()
    cy.wait(3000)
    cy.get('a[href="/ctng4/admin/inst/finance"]').click()
    cy.wait(1500)
    cy.url().should('include', '/inst/finance')
    cy.get('strong:contains(Services)').parent().next().find('thead tr th').should('have.length', 2).each((th, index) => cy.wrap(th).should('have.text', ['Service', 'Price'][index]))
    cy.get('strong:contains(Payment History)').parent().next().find('thead tr th').should('have.length', 4).each((th, index) => cy.wrap(th).should('have.text', ['Service', 'Amount', 'Date', 'Actions'][index]))
  })
  it('When user click on student Add link, should navigate to student Add  page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/student/add"]').click()
    cy.url().should('include', '/student/add')
    cy.get('.form-group').contains('label', 'Name').next('div').find('input[placeholder="first  middle  last"]').should('exist')
    cy.get('.form-group').contains('label', 'Date Of Birth').next('div').find('input[placeholder="Datepicker"]').should('exist')
    cy.get('.form-group').contains('label', 'Gender').next('div').find('select[name="gender"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Course').next('div').find('select[name="course"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Aadhar Number').next('div').find('input[name="aadharNo"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Student ID').next('div').find('input[name="stuId"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Date Of Admission').next('div').find('input[placeholder="Datepicker"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Admission No').next('div').find('input[name="admnNo"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Application No').next('div').find('input[name="appNo"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Email').next('div').find('input[name="email"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Mobile').next('div').find('input[name="mobile"]').should('exist').should('be.enabled')
  })
  it('When user click on Student search link, should navigate to Student manage page  page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/student/manage"]').click()
    cy.url().should('include', '/student/manage')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('a:contains(Enrol New Student)').should('be.visible')
    cy.get('input[type="checkbox"]').next().contains('label', 'Todays Absentees').should('be.visible')
  })
  it('When user click on Enroll new student link, should navigate to student/add page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/student/manage"]').click()
    cy.get('a:contains(Enrol New Student)').click()
    cy.url().should('include', 'student/add')
    cy.get('.form-group').contains('label', 'Name').next('div').find('input[placeholder="first  middle  last"]').should('exist')
    cy.get('.form-group').contains('label', 'Date Of Birth').next('div').find('input[placeholder="Datepicker"]').should('exist')
    cy.get('.form-group').contains('label', 'Gender').next('div').find('select[name="gender"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Course').next('div').find('select[name="course"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Aadhar Number').next('div').find('input[name="aadharNo"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Student ID').next('div').find('input[name="stuId"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Date Of Admission').next('div').find('input[placeholder="Datepicker"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Admission No').next('div').find('input[name="admnNo"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Application No').next('div').find('input[name="appNo"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Email').next('div').find('input[name="email"]').should('exist').should('be.enabled')
    cy.get('.form-group').contains('label', 'Mobile').next('div').find('input[name="mobile"]').should('exist').should('be.enabled')
  })/*
  it('When user click on student name link, should navigate to student/edit page', () => {
    cy.visit('/admin')
    cy.get('a[href="/admin/student/manage"]').click()
    cy.get('input[placeholder="Search"]').clear().type(Cypress.env('id')).parent().next().children('i[class="fa fa-search"]').click()
    cy.get('td').contains(Cypress.env('id')).parents('td').next().find('a').click()
    //cy.get('thead[class="bg-info"]').next().children('tr').find('td:nth-child(4)').find('a').click()
    cy.url().should('include', '/student/manage/edit')
    cy.get('div:contains(Identity )').first().within(() => { cy.get('button:contains(Update)').should('be.disabled') })
    cy.get('.form-group').contains('label', 'Name').next('div').find('input[name="FName"]').should('exist')
    cy.get('label:contains("Student photo")').should('exist')
    cy.get('input[name="DOB"]').should('exist')
    cy.get('select[name="gender"]').should('exist')
    cy.get('input[name="DOA"]').should('exist')
    cy.get('input[name="admnNo"]').should('exist')
    cy.get('input[name="appNo"]').should('exist')
    cy.get('input[name="aadharNo"]').should('exist')
    cy.get('div:contains(Home Phone )').first().within(() => { cy.get('button:contains(Update home phone)').should('be.disabled') })
    cy.get('.form-group').contains('label', 'Home Phone').next('div').find('input[name="homePhone"]').should('exist')
    cy.get('div:contains( Domicile )').first().within(() => { cy.get('button:contains(Update)').should('be.disabled') })
    cy.get('input[name="DomicileCountry"]').should('exist')
    cy.get('select[name="DomicileState"]').should('exist')
    cy.get('input[name="DomicileCaste"]').should('exist')
    cy.get('input[name="DomicileMotherTongue"]').should('exist')
    cy.get('div:contains(Address )').first().within(() => { cy.get('button:contains(Update address)').should('be.disabled') })
    cy.get('.form-group').contains('label', 'Line 1').next('div').find('input[name="line1"]').should('exist')
    cy.get('.form-group').contains('label', 'Line 2').next('div').find('input[name="line2"]').should('exist')
    cy.get('.form-group').contains('label', 'City').next('div').find('input[name="city"]').should('exist')
    cy.get('.form-group').contains('label', 'State').next('div').find('input[name="state"]').should('exist')
    cy.get('.form-group').contains('label', 'Pincode').next('div').find('input[name="pincode"]').should('exist')
    cy.get('.form-group').contains('label', 'Country').next('div').find('input[name="country"]').should('exist')
    cy.get('div:contains(Issue TC )').first().within(() => { cy.get('button:contains(Issue TC)').should('be.disabled') })
    cy.get('.form-group').contains('label', 'TC Number').next('div').find('input[id="TCNo"]').should('exist')
    cy.get('.form-group').contains('label', 'Character').next('div').find('input[name="studCharacter"]').should('exist')
    cy.get('.form-group').contains('label', 'Remarks').next('div').find('input[name="Remarks"]').should('exist')
    cy.get('.form-group').contains('label', 'Applied On').next('div').find('input[name="AppliedOn"]').next().find('i[class="glyphicon glyphicon-calendar"]').should('exist')
    cy.get('.form-group').contains('label', 'Issued On').next('div').find('input[name="IssuedOn"]').should('exist')
  })
  it('When user enter valid input in text field, issue TC button should get enabled and it should be clickable', () => {
    cy.visit('/admin')
    cy.get('a[href="/admin/student/manage"]').click()
    cy.get('input[placeholder="Search"]').clear().type(Cypress.env('id')).parent().next().children('i[class="fa fa-search"]').click()
    cy.get('td').contains(Cypress.env('id')).parents('td').next().find('a').click()
    //cy.get('thead[class="bg-info"]').next().children('tr').find('td:nth-child(4)').find('a').click()
    cy.url().should('include', '/student/manage/edit')
    cy.get('.form-group').contains('label', 'TC Number').next('div').find('input[id="TCNo"]').type('058')
    cy.get('.form-group').contains('label', 'Character').next('div').find('input[name="studCharacter"]').type('good')
    cy.get('.form-group').contains('label', 'Remarks').next('div').find('input[name="Remarks"]').type('behaviour is good')
    cy.get('.form-group').contains('label', 'Applied On').next('div').find('input[name="AppliedOn"]').type('2023-04-03')
    cy.get('.form-group').contains('label', 'Issued On').next('div').find('input[name="IssuedOn"]').type('2023-04-11')
    cy.get('div:contains(Issue TC )').first().within(() => { cy.get('button:contains(Issue TC)').should('be.enabled') })
  })
  it('When user click on disable link, related student details get disabled page', () => {
    cy.visit('/admin')
    cy.get('a[href="/admin/student/manage"]').click()
    cy.get('input[placeholder="Search"]').clear().type(Cypress.env('Student_Id')).parent().next().children('i[class="fa fa-search"]').click()
    cy.get('td').contains(Cypress.env('Student_Id')).parents('tr').last().find('button[type="button"]').click()
  })*/
  it('When user clcik on orgnisation add link, should navigate to org/add page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/org/add"]').click()
    cy.url().should('include', '/org/add')
    cy.get('.panel-heading').should('contain.text', 'Org Details').get('.btn-success').should('be.disabled').should('exist')
    cy.get('.form-group').contains('label', 'Name').next('div').find('input[name="orgName"]').should('exist')
    cy.get('.form-group').contains('label', 'Short Name').next('div').find('input[name="orgShortName"]').next().find('em:contains(6 characters left)').should('exist')
    cy.get('.form-group').contains('label', 'Parent').next('div').find('select[name="parent"]').should('exist')
    cy.get('select[name="owner"]').should('exist')
  })
  it('When user clcik on orgnisation search link, should navigate to Organization manage page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/org"]').click()
    cy.url().should('include', '/org')
    cy.get('a:contains(Add New Organization)').should('exist')
    cy.get('input[placeholder="Search"]').should('exist')
  })
  it('When user clcik on Add New Organization link, should navigate to org/add page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/org"]').click()
    cy.get('a:contains(Add New Organization)').click()
    cy.get('.panel-heading').should('contain.text', 'Org Details').get('.btn-success').should('be.disabled').should('exist')
    cy.get('.form-group').contains('label', 'Name').next('div').find('input[name="orgName"]').should('exist')
    cy.get('.form-group').contains('label', 'Short Name').next('div').find('input[name="orgShortName"]').next().find('em:contains(6 characters left)').should('exist')
    cy.get('.form-group').contains('label', 'Parent').next('div').find('select[name="parent"]').should('exist')
    cy.get('select[name="owner"]').should('exist')
  })
  it('When user clcik on report manager link, should navigate to report/manage page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/manage"]').click()
    cy.url().should('include', '/admin/report/manage')
    cy.get('a:contains(Upload New report)').should('exist')
    cy.get('thead').within(() => {
      cy.get('th').eq(0).should('contain', 'Name')
      cy.get('th').eq(1).should('contain', 'Created On')
      cy.get('th').eq(2).should('contain', 'Meta')
      cy.get('th').eq(3).should('contain', 'Size')
      cy.get('th').eq(4).should('contain', 'Modified On')
      cy.get('th').eq(5).should('contain', 'Actions')
    })
  })
  it('When user clcik on Upload New reportlink, should navigate to Upload New report page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/manage"]').click()
    cy.get('a:contains(Upload New report)').click()
    cy.url().should('include', '/admin/report/add')
    cy.get('input[name="title"]').should('exist')
    cy.get('input[name="description"]').should('exist')
    cy.get('[placeholder="No file extension"]').should('exist')
    cy.get('input[placeholder="key"]').should('exist')
    cy.get('input[placeholder="value"]').should('exist')
  })
  it('When user enter all valid detais in textfield of upload new report page and click on save modal, report should get saved', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/manage"]').click()
    cy.get('a:contains(Upload New report)').click()
    cy.get('input[name="title"]').type(Cypress.env('reportname'))
    cy.get('input[name="description"]').type(Cypress.env('description'))
    cy.get('[placeholder="No file extension"]').type(Cypress.env('file extension'))
    cy.get('button:contains(Save Model)').click()
  })
  it('When user clcik on Download link, selected template should get download', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/manage"]').click()
    // cy.get('a:contains(sectionwise_report.st)').click()
    cy.contains('tr', Cypress.env('REPORT_NAME')).within(() => {
      cy.get('button').click()
      cy.get('ul').within(() => { cy.get('a:contains(Download)').click() })
    })
  })
  it('When user clcik on disable link, selected template should disabled', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/manage"]').click()
    // cy.get('a:contains(sectionwise_report.st)').click()
    cy.contains('tr', Cypress.env('REPORT_NAME')).within(() => {
      cy.get('button').click()
      cy.get('ul').within(() => { cy.get('a:contains(Disable)').click() })
    })
    cy.contains('tr', Cypress.env('REPORT_NAME')).within(() => {
      cy.get('button').click()
      cy.get('ul').within(() => { cy.get('a:contains(Enable)').click() })
    })
  })
  it('When user clcik on name of report link, should navigate to report details page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/manage"]').click()
    cy.contains('tr', 'Test Report.st').within(() => { cy.contains('a', 'Test Report.st').click() })
    cy.url().should('include', '/admin/report/manage/edit')
    cy.get('div:contains(Report Details )').first().within(() => { cy.get('button:contains(Update)').should('exist') })
    cy.get('[name="title"]').should('exist')
    cy.get('[name="description"]').should('exist')
    cy.get('[name="fileName"]').should('exist')
    cy.get('[placeholder="key"]').clear()
  })
  it('When user changes rport details and click on update button , report should get updated', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/manage"]').click()
    cy.contains('tr', 'Test Report.st').within(() => { cy.contains('a', 'Test Report.st').click() })
    cy.get('[placeholder="key"]').type('B')
    cy.get('div:contains(Report Details )').first().within(() => { cy.get('button:contains(Update)').click() })
  })
  it('When user clcik on add reportlink, should navigate to addreport page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/add"]').click()
    cy.url().should('include', '/admin/report/add')
    cy.get('input[name="title"]').should('exist')
    cy.get('input[name="description"]').should('exist')
    cy.get('[placeholder="No file extension"]').should('exist')
    cy.get('input[placeholder="key"]').should('exist')
    cy.get('input[placeholder="value"]').should('exist')
  })/*
  it('When user made changes in student details and click on update button changed details should be saved ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/student/manage"]').click()
    cy.get('input[placeholder="Search"]').type('250').parent().next().children('i[class="fa fa-search"]').click()
    cy.get('tr').contains('Raju H Bhat').click()
    cy.get('input[name="aadharNo"]').clear().type('741258963256')
    cy.get('div:contains(Identity )').first().within(() => { cy.get('button:contains(Update)').should('be.enabled') })
  })*/
  it('When user click on course offered link in admin page , user navigate to courseListReport page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/courseListReport"]').click()
    cy.url().should('include', 'admin/courseListReport')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on calender link in admin page , user navigate to Calendar Report page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/calendarReport"]').click()
    cy.url().should('include', '/admin/calendarReport')
    cy.get("h4 small a").should("have.text", "Admin");
    cy.get("h4 strong").should("have.text", " Calendar Report");
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on Summary report  link in admin page , user navigate to summaryReport page', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/summaryReport"]').click()
    cy.url().should('include', '/admin/summaryReport')
    cy.get("h4 small a").should("have.text", "Admin");
    cy.get("h4 strong").should("have.text", " Institutes Summary ");
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on Upcoming events link in admin page , user navigate to upcomingEventsAdminReport page', () => {
    cy.visit('/admin')
    cy.get('a:contains(Upcoming events )').click()
    cy.url().should('include', '/admin/upcomingEventsAdminReport')
    cy.get("h4 small a").should("have.text", "Admin");
    cy.get("h4 strong").should("have.text", " Upcoming Events");
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user go to report upload page, Model section should be exist', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/add"]').click()
    cy.get('div:contains(Model )').should('be.visible').parent('section').should('exist')
  })
  it('When user go to report upload page, Template section should be exist and it should be clickable', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/add"]').click()
    cy.get('div:contains(Model )').parent('section').parent().next().children('div:contains(Template)').click()
    cy.get('div:contains(Template )').should('be.visible').parent('section').should('exist')
  })
  it('When user go to report upload page, View section should be exist and it should be clickable', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/add"]').click()
    cy.get('div:contains(Model )').parent('section').parent().next().next().children('div:contains(View)').click()
    cy.get('div:contains(View )').should('be.visible').parent('section').should('exist').children().find('i[class="fa fa-refresh"]').should('exist')
  })
  it('When user enter valid inputs/details in report upload page, and click on save report should save', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/add"]').click()
    cy.get('input[name="title"]').type('report_college')
    cy.get('input[name="description"]').type('exam')
    cy.get('input[name="fileName"]').type('college_exam')
    cy.get('button:contains(Save Model)').click()
    cy.get('button:contains(Save Template)').click()
  })
  it('When user click on Courses Offered link, should navigate to courseList Report page and should able to download report', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/courseListReport"]').click()
    cy.url().should('include', '/admin/courseListReport')
    cy.get('h4').should('contain.text', 'Admin Course List')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on Consolidated Report link, should navigate to the Receipts Consolidated Report page and should able to download the report', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/receiptConsolidatedReport"]').click()
    cy.url().should('include', '/admin/receiptConsolidatedReport')
    cy.get('h4').should('contain.text', 'Admin Receipts Consolidated Report')
    cy.get('label:contains(Range : )').should('be.visible').next().children('select').find('option').should('have.length', 3).then((options) => {
      const optionValues = ['monthly', 'quarterly', 'annual']
      options.each((i, option) => {
        expect(option.value).to.equal(optionValues[i])
      })
    })
    cy.get('label:contains(Range : )').should('be.visible').next().children('select').select('Monthly').parent().next().children('select').find('option').should('have.length', 12).then((options) => {
      const optionValues = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
      options.each((i, option) => {
        expect(option.text).to.equal(optionValues[i])
      })
    })
    cy.get('label:contains(Range : )').should('be.visible').next().children('select').select('Quarterly').parent().next().children('select').find('option').should('have.length', 4).then((options) => {
      const optionValues = ['January - March', 'April - June', 'July - September', 'October - December']
      options.each((i, option) => {
        expect(option.text).to.equal(optionValues[i])
      })
    })
    cy.get('label:contains(Range : )').should('be.visible').next().children('select').select('Annual').parent().next().children('select').find('option').should('have.length', 4).then((options) => {
      const optionValues = ['2022-2023', '2021-2022', '2020-2021', '2019-2020']
      options.each((i, option) => {
        expect(option.text).to.equal(optionValues[i])
      })
    })
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on Students Coursewise Breakup link, should navigate to coursewise Breakup Report page and should able to download report', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/coursewiseBreakupReport"]').click()
    cy.url().should('include', '/admin/coursewiseBreakupReport')
    cy.get('h4').should('contain.text', 'Admin Coursewise Students Breakup')
    cy.get('span:contains(Course : )').should('be.visible').next('select').select('PUC I PCMB')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on Student Details link, should navigate to student Details Report page and should able to download report', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/studentDetailsReport"]').click()
    cy.url().should('include', '/admin/studentDetailsReport')
    cy.get('h4').should('contain.text', 'Admin Student Details')
    cy.get('span:contains(Course : )').should('be.visible').next('select').select('PUC I PCMB')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on Students Basic Sectionwise Breakup link, should navigate to basic Sectionwise Breakup Report page and should able to download report', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/basicSectionwiseBreakupReport"]').click()
    cy.url().should('include', '/admin/basicSectionwiseBreakupReport')
    cy.get('h4').should('contain.text', 'Admin Sectionwise Students Breakup')
    cy.get('span:contains(Course : )').should('be.visible').next('select').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('span:contains(New Admissions Only)').prev('input[type="checkbox"]').check()
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on Students Parent Details link, should navigate to sectionwise Parent Details Report page and should able to download report', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/sectionwiseParentDetailsReport"]').click()
    cy.url().should('include', '/admin/sectionwiseParentDetailsReport')
    cy.get('h4').should('contain.text', 'Admin Students Parent Details')
    cy.get('span:contains(Course : )').should('be.visible').next('select').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on New Admissions Report link, should navigate to new Admissions Report page and should able to download report', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/newAdmissionsReport"]').click()
    cy.url().should('include', '/admin/newAdmissionsReport')
    cy.get('h4').should('contain.text', 'Admin New Admissions')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on TC Students List link, should navigate to TC Students List page and should able to download report', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/tcStudentsList"]').click()
    cy.wait(2000)
    cy.url().should('include', '/admin/tcStudentsList')
    cy.get('h4').should('contain.text', 'Admin TC Students List')
    cy.get('span:contains(Course : )').should('be.visible').next('select').should('exist').select('PUC I PCMB')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('When user click on data manage link,should navigate to data mange page ', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/data/manage"]').click()
    cy.url().should('include', '/data/manage')
    cy.get('h3').should('contain.text', 'AdminData')
    cy.get('input[placeholder="Search"]').should('exist').parent().next().children('i[class="fa fa-search"]').should('exist')
    cy.get('thead').within(() => {
      cy.get('th').eq(0).should('contain', 'Title')
      cy.get('th').eq(1).should('contain', 'Description')
      cy.get('th').eq(2).should('contain', 'Download')
    })
  })
  it('Verify back button in course feature', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/course/add"]').click()
    cy.url().should('include', 'course/add')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
    cy.get('a[href="/ctng4/admin/course/manage"]').click()
    cy.get('a:contains(Add New Course)').click()
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/course/manage')
    cy.get('a:contains(Name)').parents('thead').next('tbody').children('tr').first().find('a:contains(PUC I PCMB)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/course/manage/edit')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/course/manage')
    cy.get('a:contains(Name)').parents('thead').next('tbody').children('tr').first().find('a:contains(Terms)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/course/manageTerms')
    cy.get('a:contains(Add New Term)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/course/addTerm')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/course/manageTerms')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/course/manage')
    cy.get('a:contains(Name)').parents('thead').next('tbody').children('tr').first().find('a:contains(Copy As)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/course/manage/copy')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/course/manage')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('Verify back button in Data feature', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/data/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/data/manage')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('Verify back button in Institute feature', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/inst/add"]').click()
    cy.wait(3000)
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/add')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
    cy.get('a[href="/ctng4/admin/inst"]').click()
    cy.wait(3000)
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst')
    cy.wait(2000)
    cy.get('a:contains(Manage Personas & Permissions )').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/persona')
    cy.get('a:contains(Add New Persona)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/persona/add')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/persona')
    cy.get('a:contains(Title)').parents('thead').next('tbody').children('tr').first().next().find('a:contains(Support )').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/persona/edit')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/persona')
    cy.get('a:contains(Title)').parents('thead').next('tbody').children('tr').first().find('a:contains(Permissions)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/persona/permissions')
    cy.contains('Back').should('exist').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/persona')
    cy.contains('Back').should('exist').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst')
    cy.get('a:contains(Manage Users (People who can log into institute) )').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/user')
    cy.get('a:contains(Add New User)').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/user/add')
    cy.contains('Back').should('exist').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/user')
    cy.contains('Back').should('exist').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst')
    cy.get('a:contains(Manage Finance )').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst/finance')
    cy.contains('Back').should('exist').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/inst')
    cy.contains('Back').should('exist').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('Verify back button in Student feature', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/student/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/student/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
    cy.get('a[href="/ctng4/admin/student/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/student/manage')
    cy.get('a:contains(Enrol New Student)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/student/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/student/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('Verify back button in Report feature', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/report/add"]').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/report/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
    cy.get('a[href="/ctng4/admin/report/manage"]').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/report/manage')
    cy.get('a:contains(Upload New report)').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/report/add')
    cy.click_Back_Button()
    cy.contains(Cypress.env('Report')).click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/report/manage/edit')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/report/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })
  it('Verify back button in organisation feature', () => {
    cy.visit('/admin')
    cy.get('a[href="/ctng4/admin/org/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/org/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
    cy.get('a[href="/ctng4/admin/org"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/org')
    cy.get('a:contains(Add New Organization)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin/org/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/admin')
  })

  // Academics Feature Tests

  it('When user click on academics link should navigate to academics page successfully ', () => {
    cy.visit('/academics')
    cy.url().should('include', '/academics')
    cy.contains('Attendance').should('be.visible')
    cy.get('a[href="/ctng4/academics/attendance"]').should('exist')
    cy.contains('Calendar').should('be.visible')
    cy.get('a[href="/ctng4/academics/calendar/events"]').should('exist').parent().prev().find('a[href="/ctng4/academics/calendar/manage"]').should('exist')
    cy.contains('Exam').should('be.visible')
    cy.get('a[href="/ctng4/academics/exam"]').should('exist')
    cy.contains('Timetable').should('be.visible')
    cy.get('a[href="/ctng4/academics/timetable"]').should('exist')
  })
  it('when user click on attendance add link ,should navigate to attendance add  page successfully ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/attendance"]').click()
    cy.url().should('contain', '/attendance')
    cy.contains('Attendance for course : ').should('be.visible')
    cy.get('a[class="dropdown-toggle"]').should('exist')
  })
  it('when user click on calender add link ,should navigate to Calendar Events Add add  page successfully ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/calendar/events"]').click()
    cy.url().should('contain', '/calendar/events')
    cy.get('a:contains(Add New Event)').should('be.visible')
    cy.get('a:contains(Generate calendar)').should('be.visible')
    cy.get('thead tr th').should('have.length', 8).each((th, index) => cy.wrap(th).should('have.text', ['Title', 'Month', 'Date', 'Day of week', 'Category', 'Priority', 'Action', 'Cron expression'][index]))
  })
  it('when user click on Generate calendar link ,should navigate to Calendar Manage page successfully ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/calendar/events"]').click()
    cy.get('a:contains(Generate calendar)').click()
    cy.url().should('contain', '/calendar/manage')
    cy.get('a:contains(Manage events)').should('be.visible')
    cy.contains('Events on').should('be.visible')
    cy.get('table').should('be.visible')
    cy.get('button:contains(today)').should('exist')
  })
  it('when user click on calender manage link ,should navigate to Calendar Manage page successfully ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/calendar/manage"]').click()
    cy.url().should('contain', '/calendar/manage')
    cy.get('a:contains(Manage events)').should('be.visible')
    cy.contains('Events on').should('be.visible')
    cy.get('table').should('be.visible')
    cy.get('button:contains(today)').should('exist')
    cy.get('td span').should('have.text', '2023-24Jul 2023')
    cy.get('td button:first-of-type').should('have.class', 'btn-default').and('have.attr', 'type', 'button').and('have.descendants', 'i.fa.fa-angle-left')
    cy.get('td button:last-of-type').should('have.class', 'btn-default').and('have.attr', 'type', 'button').and('have.descendants', 'i.fa.fa-angle-right')
  })
  it('when user click on Exam manage link ,should navigate to Exams Manage page successfully ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/exam"]').click()
    cy.url().should('contain', 'academics/exam')
    cy.get('h3').should('have.text', 'AcademicsExamsManage').and('contain', 'Academics').and('contain', 'Exams').and('contain', 'Manage')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('a:contains(Add New Exam)').should('exist')
    cy.get('label:contains(Use Grading)').should('be.visible').prev('input[type="checkbox"]').check().should('be.checked')
    cy.get('a:contains(Set Grading System)').should('be.visible')
    cy.get('thead.bg-info').should('contain', 'Name').should('contain', 'Start Date').should('contain', 'Course').should('contain', 'Status').should('contain', 'Actions')
  })
  it('when user click on TimTable manage link ,should navigate to Timetable Manage page successfully ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/timetable"]').click()
    cy.url().should('contain', 'academics/timetable')
    cy.get('h3').should('have.text', 'AcademicsTimetableManage').and('contain', 'Academics').and('contain', 'Timetable').and('contain', 'Manage')
    cy.get('thead').find('th').should('have.length', 2).first().should('have.text', 'Course')
    cy.get('thead').find('th').last().should('have.text', 'Manage');
  })
  it('when user click on Manage events link ,should navigate to Calendar Events add page successfully ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/calendar/manage"]').click()
    cy.get('a:contains(Manage events)').click()
    cy.url().should('contain', '/academics/calendar/events')
    cy.get('h3').should('have.text', 'AcademicsCalendarEventsAdd')
    cy.get('a:contains(Add New Event)').should('be.visible')
    cy.get('a:contains(Generate calendar)').should('be.visible')
    cy.get('thead').find('th').should('have.length', 8).each(($th, index) => expect($th).to.contain(['Title', 'Month', 'Date', 'Day of week', 'Category', 'Priority', 'Action', 'Cron expression'][index]))
  })
  it('when user click on Add New Event link ,new row should display in table', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/calendar/events"]').click()
    cy.wait(5000)
    cy.get('a:contains(Add New Event)').click({ force: true })
    cy.get('a:contains(Cancel)').should('be.visible').parents('td').prev().find('input[type="number"]').should('exist').parent().prev().find('select').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').children('span:contains(Any)').should('be.visible').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').children('span').find('span:contains( Every )').should('be.visible').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('input[type="text"]').should('exist')
  })
  it('when user click on Remove link ,Selected Event should be removed from table', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/calendar/events"]').click()
    cy.wait(5000)
    cy.get('a:contains(Add New Event)').click({ force: true })
    cy.get('a:contains(Cancel)').should('be.visible').parents('td').prev().find('input[type="number"]').type('1').parent().prev().find('select').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').children('span:contains(Any)').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('input[type="text"]').type('Test')
    cy.get('a:contains(Cancel)').prev().find('a:contains(Save)').click()
    cy.contains('tr', 'Test').within(() => { cy.contains('a', 'Remove').click() })
  })
  it('when user try to craete a event with name which is already name of another event then Event already exists error message should display', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/calendar/events"]').click()
    cy.wait(5000)
    cy.get('a:contains(Add New Event)').click()
    cy.get('a:contains(Cancel)').should('be.visible').parents('td').prev().find('input[type="number"]').type('1').parent().prev().find('select').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').children('span:contains(Any)').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('input[type="text"]').type(Cypress.env('title'))
    cy.get('a:contains(Cancel)').prev().find('a:contains(Save)').click()
    cy.get('span:contains(Event already exists)').should('be.visible').next().find('a:contains(x)').should('exist')
  })
  it('when user click on Add New Exam link ,should navigate to Exams Manage page successfully ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/exam"]').click()
    cy.get('a:contains(Add New Exam)').click()
    cy.url().should('contain', 'academics/exam')
    cy.get('h3').should('have.text', 'AcademicsExamsManage').and('contain', 'Academics').and('contain', 'Exams').and('contain', 'Manage')
    cy.get('input[placeholder="Exam Name"]').should('exist')
    cy.get('input[placeholder="Start Date"]').should('exist')
    cy.get('input[name="SplitExam"]').should('be.visible').should('not.be.checked')
    cy.contains('Split Exam').should('be.visible');
    cy.contains('Select All').should('not.be.checked')
    cy.get('input[name="selectAll"]').should('be.visible').should('not.be.checked')
    cy.get('button:contains(Save)').should('exist').should('be.disabled')
    cy.get('a:contains(Cancel)').should('exist')
  })/*
it('when user click on Evalute link ,should navigate to /evaluation page successfully ', () => {
  cy.visit('/academics')
  cy.get('a[href="/ctng4/academics/exam"]').click()
  cy.contains('td', '02-Jul-2020').parent().find('td.text-center:first').contains('Evaluate').click()
  //cy.get('h3').contains('Academics').next('i.fa-angle-right').next('a').contains('Exams').next('i.fa-angle-right').next('a').contains('PUC II PCMB A').next('i.fa-angle-right').next('a').contains('dsxSqvkeubya').next('i.fa-angle-right').next('strong').contains('Evaluation')
  cy.get('label:contains("Studentwise")').siblings('input[type="radio"]').should('be.checked')
  cy.get('label:contains("Subjectwise")').siblings('input[type="radio"]').should('not.be.checked')
  cy.contains('Attendance').prev('input[type="checkbox"]').should('exist').should('not.be.checked')
})
it('when user click on Disable link ,selected exam should get disabled', () => {
  cy.visit('/academics')
  cy.get('a[href="/ctng4/academics/exam"]').click()
  cy.contains('tr', '09-Mar-2021').find('a.text-danger').click()
  cy.contains('tr', '09-Mar-2021').find('a.text-success').click()
})
it('when user click on Lock link ,selected exam should get Locked', () => {
  cy.visit('/academics')
  cy.get('a[href="/ctng4/academics/exam"]').click()
  cy.contains('tr', '08-Mar-2021').within(() => { cy.get('a[title="Lock Exam"]').click() })
  cy.contains('td', 'Reason For Locking:').children('div').children('span').next().find('button').click();
  cy.contains('tr', '08-Mar-2021').within(() => { cy.contains('Unlock').click() })
  cy.contains('td', 'Reason For Unlocking').children('div').children('span').next().find('button').click()
})
it('when user click on exam title ,should navigate to edit page', () => {
  cy.visit('/academics')
  cy.get('a[href="/ctng4/academics/exam"]').click()
  //cy.contains('tr', '01-Sep-2020').contains('a', 'September Monthly Test').click()
  cy.contains('tr', '01-Sep-2020').within(() => { cy.get('span:contains(01-Sep-2020)').prev().children('a:contains(September Monthly Exam)').click() })
  cy.url().should('contain', '/academics/exam/edit')
  cy.get('h3').should('contain', 'Academics').and('contain', 'Exams').and('contain', 'PUC II PCMB A').and('contain', 'September Monthly Exam').and('contain', 'Edit')
  cy.contains('div.panel-heading', 'Exam Details').find('button:contains(Update)').should('exist')
  cy.contains('label', 'Name').next('div').find('input[name="Name"]').should('exist')
  cy.contains('div.panel-heading', 'Total Max Marks').find('button.btn-success').should('exist')
  cy.contains('label', 'Total Max Marks').next('div').find('input[name="TotalMaxMarks"]').should('exist')
  cy.contains('div.panel-heading', 'Days Worked').find('button:contains(Update)').should('exist')
  cy.contains('label', 'Days Worked').next('div').find('input[name="Name"]').should('exist')
  cy.get('thead.bg-info').find('th').should('have.length', 7).should('contain', 'Subjects').should('contain', 'Grading Only').should('contain', 'Max Marks').should('contain', 'Min Marks').should('contain', 'Scheduled On').should('contain', 'Conducted On').should('contain', 'Results')
})
it('when user changes exam details,and click on update button exam details should get updated', () => {
  function getRandomItem(arr) {
      const randomIndex = Math.floor(Math.random() * arr.length)
      const item = arr[randomIndex]
      return item
  }
  const array = ['Final Exam', 'MidTerm Exam', 'Unit Test', 'Board Exam','CET Exam','Lab Exam']
  cy.visit('/academics')
  cy.get('a[href="/ctng4/academics/exam"]').click()
  cy.contains('tr', '02-Jul-2020').within(() => { cy.get('span:contains(02-Jul-2020)').prev().children('a').click() })
  cy.contains('label', 'Name').next('div').find('input[name="Name"]').clear().type(getRandomItem(array))
  cy.contains('div.panel-heading', 'Exam Details').find('button:contains(Update)').click()
})*/
  it('when user click on TimTable manage link ,should navigate to Timetable Manage page successfully ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/timetable"]').click()
    cy.url().should('contain', '/timetable')
    cy.get('thead').find('th').should('have.length', 2).each(($th, index) => expect($th).to.contain(['Course', 'Manage'][index]))
    //next('contain', 'Monday').and('contain', 'Tuesday').and('contain', 'Wednesday').and('contain', 'Thursday').and('contain', 'Friday').and('contain', 'Saturday').and('contain', 'Actions') });
  })/*
it('when user click on course link ,should navigate to Timetable Manage page successfully ', () => {
  cy.visit('/academics')
  cy.get('a[href="/ctng4/academics/timetable"]').click()
  cy.contains('tr', 'PUC II PCMB A (Annual)').within(() => { cy.contains('Timetable').click() })
  cy.url().should('contain', 'academics/timetable/manage')
  cy.get('a:contains(Add New Period)').should('exist')
  cy.get('a:contains(Save)').should('exist')
  cy.get('td').children('span').find('span:contains(Show sunday)').prev('input[type="checkbox"]').should('not.be.checked').should('exist')
  cy.get('thead tr').within(() => { cy.get('th:contains(Period )').next('th:contains(Monday)').next('th:contains(Tuesday)').next('th:contains(Wednesday)').next('th:contains(Thursday)').next('th:contains(Friday)').next('th:contains(Saturday)').next('th:contains(Actions)').should('be.visible') })
  //next('contain', 'Monday').and('contain', 'Tuesday').and('contain', 'Wednesday').and('contain', 'Thursday').and('contain', 'Friday').and('contain', 'Saturday').and('contain', 'Actions') });
})
it('when user click on Add New Period link ,new empty row should get display in Timetable ', () => {
  cy.visit('/academics')
  cy.get('a[href="/ctng4/academics/timetable"]').click()
  cy.contains('tr', 'PUC II PCMB A (Annual)').within(() => { cy.contains('Timetable').click() })
  cy.url().should('contain', 'academics/timetable/manage')
  cy.get('a:contains(Add New Period)').click()
  cy.get('table[class="table"]').children('tbody').within(() => { cy.get('td:contains(1)').siblings('td').children('a:contains(Delete period)').should('be.visible', 'exist') })
})*/
  it('when user click absent report link should navigate to absent report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/absenteesReport"]').click()
    cy.url().should('contain', '/academics/absenteesReport')
    cy.get('input[name="reportFromDate"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click Consolidated Marks link should navigate to Consolidated Marks report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/consolidatedMarksReport"]').click()
    cy.url().should('contain', '/academics/consolidatedMarksReport')
    cy.get('span:contains(Course : )').next().children('button[class="dropdown-toggle"]').click()
    cy.get('span:contains(SortBy : )').should('be.visible').next('select[name="sortBy"]').should('exist').find('option').should('have.length', 2).then((options) => {
      const optionValues = ['Roll No / Name', 'Total']
      options.each((i, option) => {
        expect(option.text).to.equal(optionValues[i]) // Verify that the option values match the expected values
      })
    })
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click Holiday List link should navigate to holidayListReport page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/holidayListReport"]').click()
    cy.url().should('contain', 'academics/holidayListReport')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click todays Events link should navigate to todaysEventsReportt page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/todaysEventsReport"]').click()
    cy.url().should('contain', '/academics/todaysEventsReport')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click upcoming Events link should navigate to upcomingEvents Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/upcomingEventsReport"]').click()
    cy.url().should('contain', 'academics/upcomingEventsReport')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click rank List link should navigate to rank List Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/rankListReport"]').click()
    cy.url().should('contain', '/academics/rankListRepor')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click firstTenToppersReport link should navigate to firstTenToppersReportt page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/firstTenToppersReport"]').click()
    cy.url().should('contain', '/academics/firstTenToppersReport')
    cy.get('span:contains(Course : )').next().children('button[class="dropdown-toggle"]').click()
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click Top Scorers In Each Subject  link should navigate to Consolidated Marks report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/topScorersReport"]').click()
    cy.url().should('contain', '/academics/topScorersReport')
    cy.get('span:contains(Course : )').next().children('button[class="dropdown-toggle"]').click()
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click A+ In All Subjects link should navigate to aPlusInAllSubjects Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/aPlusInAllSubjectsReport"]').click()
    cy.url().should('contain', '/academics/aPlusInAllSubjectsReport')
    cy.get('span:contains(Course : )').next().children('button[class="dropdown-toggle"]').click()
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Student performance link, should navigate to aPlusInAllSubjects Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/studentPerformanceReport"]').click()
    cy.url().should('contain', '/academics/studentPerformanceReport')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Subject Average link, should navigate to subject Average Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/subjectAverageReport"]').click()
    cy.url().should('contain', '/academics/subjectAverageReport')
    cy.get('h4').should('contain.text', 'Academics Subject Average')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Result At A Glance link, should navigate to result At A Glance Repor page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/resultAtAGlanceReport"]').click()
    cy.url().should('contain', '/academics/resultAtAGlanceReport')
    cy.get('h4').should('contain.text', 'Academics Result At A Glance')
    cy.get('span:contains(Course : )').next('div').find('button[class="dropdown-toggle"]').should('exist').click()
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('span:contains(Comprehensive Report)').parent().prev('input[type="checkbox"]').check()
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Result Analysis link, should navigate to result Analysis Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/resultAnalysisReport"]').click()
    cy.url().should('contain', '/academics/resultAnalysisReport')
    cy.get('h4').should('contain.text', 'Academics Result Analysis')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on No Due Certificate link, should navigate to no Due Certificate page and able to download certificate ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/noDueCertificate"]').click()
    cy.url().should('contain', '/academics/noDueCertificate')
    cy.get('h4').should('contain.text', 'Academics No Due Certificate')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Hall Ticket link, should navigate to hallTicket page and able to download hallticket ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/hallTicket"]').click()
    cy.url().should('contain', '/academics/hallTicket')
    cy.get('h4').should('contain.text', 'Academics Hall Ticket')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Exams list link, should navigate to result Analysis Report page and able to download Schedule', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/examListReport"]').click()
    cy.url().should('contain', '/academics/examListRepor')
    cy.get('h4').should('contain.text', 'AcademicsExam Schedule')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Consolidated Report link, should navigate to consolidated Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/consolidatedReport"]').click()
    cy.url().should('contain', '/academics/consolidatedReport')
    cy.get('h4').should('contain.text', 'Academics Consolidated Report')
    cy.get('span:contains(SortBy : )').next('select').find('option').should('have.length', 2).then((options) => {
      const optionValues = ['Roll No', 'Total']
      options.each((i, option) => { expect(option.text).to.equal(optionValues[i]) })
    })
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('span:contains(Show Top Ten )').parent().prev('input[type="checkbox"]').check().should('be.checked')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Coursewise Result Analysis link, should navigate to coursewise Result Analysis Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/coursewiseResultAnalysisReport"]').click()
    cy.url().should('contain', '/academics/coursewiseResultAnalysisReport')
    cy.get('h4').should('contain.text', 'Academics Result Analysis')
    cy.get('span:contains(Exams : )').should('be.visible').next('select').should('exist')
    cy.get('span:contains(Course : )').should('be.visible').next().children('select').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Classwise / Gradewise Statistics  link, should navigate to Classwise / Gradewise Statistics  Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/gradewiseStatisticsReport"]').click()
    cy.url().should('contain', '/gradewiseStatisticsReport')
    cy.get('h4').should('contain.text', 'Academics Classwise / Gradewise Statistics')
    cy.get('span:contains(Exams : )').should('be.visible').next('select').should('exist')
    cy.get('span:contains(Course : )').should('be.visible').next().children('button[class="dropdown-toggle"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click onFull Marks link, should navigate to Full Marks page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/fullMarksReport"]').click()
    cy.url().should('contain', '/fullMarksReport')
    cy.get('h4').should('contain.text', 'AcademicsFull Marks')
    cy.get('span:contains(Exams : )').should('be.visible').next('select').should('exist')
    cy.get('span:contains(Course : )').should('be.visible').next().children('button[class="dropdown-toggle"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Failures Report link, should navigate to Failures Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/failuresReport"]').click()
    cy.url().should('contain', '/failuresReport')
    cy.get('h4').should('contain.text', 'Academics Failures Report')
    cy.get('span:contains(Course : )').should('be.visible').next('div[class="dropdown"]').children('select').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('when user click on Failures Report link, should navigate to Failures Report page and able to download report ', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/examwiseFailuresReport"]').click()
    cy.url().should('contain', '/examwiseFailuresReport')
    cy.get('h4').should('contain.text', 'Academics Failures Report')
    cy.get('span:contains(Course : )').should('be.visible').next().children('button[class="dropdown-toggle"]').should('exist')
    cy.get('span:contains(Exams : )').should('be.visible').next('select').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('Verify back button in Attendance feature', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/attendance"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics/attendance')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('Verify back button in Calender feature', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/calendar/events"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics/calendar/events')
    cy.get('a:contains(Generate calendar)').click()                          // clcik on Generate calendar 
    cy.url().should('eq', Cypress.config().baseUrl + '/academics/calendar/manage')   // verify we are in calender manage page
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
    cy.get('a[href="/ctng4/academics/calendar/events"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics/calendar/events')  //  verify we are in event add page
    cy.click_Back_Button()                                                        // click on back button
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')                 // verify we are on accdemics page
    cy.get('a[href="/ctng4/academics/calendar/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics/calendar/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('Verify back button in Exam feature', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/exam"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics/exam')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })
  it('Verify back button in timetable feature', () => {
    cy.visit('/academics')
    cy.get('a[href="/ctng4/academics/timetable"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics/timetable')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/academics')
  })

  // Admission feature tests

  it('should navigate to admissions page successfully ', () => {
    cy.visit('/admissions')
    cy.url().should('include', '/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').should('exist')
    cy.get('a[href="/ctng4/admissions/seatMatrix/manage"]').should('exist')
    cy.get('a[href="/ctng4/admissions/applications/manage"]').should('exist')
    cy.get('a[href="/ctng4/admissions/shortlists/manage"]').should('exist')
  })
  it(' should navigate to seatmatrix add page successfully', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click({ multiple: true })
    cy.url().should('include', '/seatMatrix/add')
    cy.contains('Course / Degree').should('exist')
    cy.get('select[name="course"]').should('exist')
    cy.contains('Total Seats').should('exist')
    cy.get('input[name="seatsNo"]').should('exist')
  })
  it('When user select course from Course / Degree dropdown ,selected course should show ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click({ multiple: true })
    cy.contains('Course / Degree').should('exist')
    cy.get('select[name="course"]').should('exist')
    cy.get('select').select('B.Com 2').should('have.value', 'B.Com 2') // select option based on value
  })
  it('When click on Shortlists should navigate to Shortlists page successfully ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/shortlists/manage"]').click()
    cy.url().should('include', 'shortlists/manage')
  })
  it('When click on applications should navigate to applications/manage page successfully ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/applications/manage"]').click()
    cy.url().should('include', 'applications/manage')
  })
  it(' should navigate to seatmatrix add page successfully', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.contains('Course / Degree').should('exist')
    cy.get('select').select('B.Com 2').should('have.value', 'B.Com 2')
    cy.contains('Total Seats').should('exist')
    cy.get('input[name="seatsNo"]').should('exist')
  })
  it('user should able to enter Total seat', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.contains('Course / Degree').should('exist')
    cy.contains('Total Seats').should('exist')
    cy.get('input[name="seatsNo"]').type(string)
  })
  it(' Break up text should visible', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('label:contains(Breakup)').should('be.visible')
  })
  it('user should able to enter GM seats', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
  })
  it('user should able to enter OBC seats', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
    cy.get('input[ng-reflect-model="OBC"]').should('exist').parent().next().children('input[type="text"]').type('10')
  })
  it('user should able to enter SC seats', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
    cy.get('input[ng-reflect-model="OBC"]').should('exist').parent().next().children('input[type="text"]').type('10')
    cy.get('input[ng-reflect-model="SC"]').should('exist').parent().next().children('input[type="text"]').type('8')
  })
  it('user should able to enter ST seats', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
    cy.get('input[ng-reflect-model="OBC"]').should('exist').parent().next().children('input[type="text"]').type('10')
    cy.get('input[ng-reflect-model="SC"]').should('exist').parent().next().children('input[type="text"]').type('8')
    cy.get('input[ng-reflect-model="ST"]').should('exist').parent().next().children('input[type="text"]').type('8')
  })
  it('user click on Save seat matrix should get saved', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
    cy.get('input[ng-reflect-model="OBC"]').should('exist').parent().next().children('input[type="text"]').type('10')
    cy.get('input[ng-reflect-model="SC"]').should('exist').parent().next().children('input[type="text"]').type('8')
    cy.get('input[ng-reflect-model="ST"]').should('exist').parent().next().children('input[type="text"]').type('8')
    cy.get('button:contains(Save)').click()
  })
  it('when user click on seatMatrix manage link,user should navigate to seat matrix/manage page', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/manage"]').click()
    cy.url().should('include', '/seatMatrix/manage')
    cy.get('thead tr').should('contain', 'Course / Degree').should('contain', 'Seats available').should('contain', 'Total number of seats').should('contain', 'Beakup')
  })
  it('when the user clicks on course /degree name navigate to seat matrix/manage page and when updates the seat matrix and clicks on the update button seat matrix should get updated', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/manage"]').click()
    cy.contains('a', 'MBA').click()
    cy.url().should('include', '/seatMatrix/edit')
    //cy.get('input[name="seatsNo"]').clear().type('15')
    cy.get('label:contains(Total Seats)').parent().next().children('input[name="seatsNo"]').clear().type('15')
    cy.get('button:contains(Update)').should('exist').should('be.enabled').click()
  })/*
it('User is navigated to admissions- applications -shortlists  page and click on GM,user would be able to see shortlisted seats numbers based on GM', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Name of shortlisted student based on GM', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
  cy.get('th:contains(Name)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Email of shortlisted student based on GM', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
  cy.get('th:contains(Email)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Mobile number of shortlisted student based on GM', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
  cy.get('th:contains(Mobile)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see HSC score of shortlisted student based on GM', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
  cy.get('th:contains(HSC Score)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see SSC score of shortlisted student based on GM', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
  cy.get('th:contains(SSC Score)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page and click on OBC,user would be able to see shortlisted seats numbers based on OBC', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Name of shortlisted student based on OBC', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
  cy.get('th:contains(Name)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Email of shortlisted student based on OBC', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
  cy.get('th:contains(Email)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Mobile number of shortlisted student based on  OBC .', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
  cy.get('th:contains(Mobile)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see HSC score of shortlisted student based on  OBC ', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
  cy.get('th:contains(HSC Score)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see SSC score of shortlisted student based on  OBC ', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
  cy.get('th:contains(SSC Score)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page and click on  SC ,user would be able to see shortlisted seats numbers based on SC ', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Name of shortlisted student based on SC ', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
  cy.get('th:contains(Name)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Email of shortlisted student based on SC ', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
  cy.get('th:contains(Email)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Mobile number of shortlisted student based on SC.', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
  cy.get('th:contains(Mobile)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see HSC score of shortlisted student based on  SC', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
  cy.get('th:contains(HSC Score)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see SSC score of shortlisted student based on SC', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
  cy.get('th:contains(SSC Score)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page and click on ST ,user would be able to see shortlisted seats numbers based on ST ', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Name of shortlisted student based on ST', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
  cy.get('th:contains(Name)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Email of shortlisted student based on  ST', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
  cy.get('th:contains(Email)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see Mobile number of shortlisted student based on  ST', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
  cy.get('th:contains(Mobile)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see HSC score of shortlisted student based on ST ', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
  cy.get('th:contains(HSC Score)').should('exist')
})
it('User is navigated to admissions- applications -shortlists  page,user would be able to see SSC score of shortlisted student based on ST ', () => {
  cy.visit('/admissions')
  cy.get('a[href="/admissions/shortlists/manage"]').click()
  cy.get('td:contains(PUC II)').click()
  cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
  cy.get('th:contains(SSC Score)').should('exist')
})*/
  it('Verify back button in seat matrix feature', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/seatMatrix/add')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/seatMatrix/manage')
    cy.get('th:contains(Course / Degree)').parents('thead').next('tbody').children('tr').first().find('a:contains(MBA)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/seatMatrix/edit')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/seatMatrix/manage')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions')
  })
  it('Verify back button in seat Application feature', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/applications/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/applications/manage')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions')
  })
  it('Verify back button in seat Shortlist feature', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/shortlists/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/shortlists/manage')
    cy.contains('Back').should('exist').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions')
  })

  // Assets feature Tests

  it('should navigate to assets page successfully ', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.url().should('include', '/assets')
    cy.get('i[title="Add checklist"]').should('exist')
    cy.get('i[title="Add asset"]').should('exist')
    cy.get('i[title="Search / Edit asset"]').should('exist')
    cy.get('i[title="Search/Edit checklist"]').should('exist')
    cy.get('a:contains(Location wise assets report )').should('be.visible')
  })
  it('When user click on asset add link, should navigate to assets/add page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('i[title="Add asset"]').click()
    cy.url().should('include', '/add')
    cy.get('.form-group').contains('label', 'Tracking Id').next('div').find('input[placeholder="Tracking Id"]').should('exist')
    cy.get('.form-group').contains('label', 'Location').next('div').find('input[placeholder="Location"]').should('exist')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('exist').and('have.text', 'Save').should('be.enabled')
  })
  it('When user enter all input in textfields of assets/add page and click on save button', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click({ force: true })
    cy.get('i[title="Add asset"]').click({ force: true })
    cy.get('input[placeholder="Tracking Id"]').type(Cypress.env('TRACKING ID'))
    cy.get('input[placeholder="Location"]').type(Cypress.env('LOCATION'))
    cy.get('button[class="btn btn-xs btn-success pull-right"]').click()
    cy.screenshot()
  })
  it('When user click on asset manage link, should navigate to assets/manage page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a[href="/ctng4/assets/manage"]').click()
    cy.url().should('include', '/assets/manage')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('a:contains(Add New Asset)').should('be.visible')
  })
  it('When user click on Add New Asset link, should navigate to assets/add page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a[href="/ctng4/assets/manage"]').click()
    cy.get('a:contains(Add New Asset)').click()
    cy.url().should('include', '/assets/add')
    cy.get('input[placeholder="Tracking Id"]').type(Cypress.env('TRACKING ID'))
    cy.get('input[placeholder="Location"]').type(Cypress.env('LOCATION'))
    cy.get('button[class="btn btn-xs btn-success pull-right"]').click()
  })
  it('When user click on checklist add link, should navigate to /checklist/add page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a[href="/ctng4/checklist/add"]').click()
    cy.url().should('include', '/checklist/add')
    cy.get('.form-group').contains('label', 'Title').next('div').find('input[name="title"]').should('exist')
    cy.get('div.form-group input[type="text"]').should('exist')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('exist').and('have.text', 'Save').should('be.enabled')
  })
  it('When user click on checklist manage link, should navigate to checklist manage page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a[href="/ctng4/checklist/manage"]').click()
    cy.url().should('include', '/checklist/manage')
    cy.get('a:contains(Add New Checklist)').should('be.visible')
  })
  it('When user click on Add new Checklist link, should navigate to checklist add page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a[href="/ctng4/checklist/manage"]').click()
    cy.get('a:contains(Add New Checklist)').click()
    cy.url().should('include', '/checklist/add')
    cy.get('div.form-group input[type="text"]').should('exist')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('exist').and('have.text', 'Save').should('be.enabled')
  })
  it('When user click on Location wise assets report  link, should navigate to locationwiseReport page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a:contains(Location wise assets report )').click()
    cy.url().should('include', '/locationwiseReport')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('button[title="Print"]').should('exist')
    cy.contains('Print Options').should('be.visible')
    cy.contains('Report Header').prev('input[type="checkbox"]').should('exist')
    cy.contains('Page Header').prev('input[type="checkbox"]').should('exist')
    cy.contains('Page Header On Each Page').prev('input[type="checkbox"]').should('exist')
    cy.contains('Report Footer').prev('input[type="checkbox"]').should('exist')
    cy.contains('Page Footer').prev('input[type="checkbox"]').should('exist')
    cy.contains('Page Footer On Each Page').prev('input[type="checkbox"]').should('exist')
    cy.contains('Page Border').prev('input[type="checkbox"]').should('exist')
    cy.contains('span', 'Records Per Page :').siblings('input[name="pagesize"]').should('exist')
  })
  it('When user click on tracking id, should navigate to assets/edit page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a[href="/ctng4/assets/manage"]').click()
    cy.contains('tr', 'room 1').contains('a', '123').click()
    cy.url().should('include', '/assets/edit')
    cy.get('div.panel-heading').contains('TrackingId').should('exist').parent().find('button:contains(Update)').should('exist')
    cy.get('input[name="trackingId"]').should('exist')
    cy.get('div.panel-heading').contains('Location').should('exist').parent().find('button:contains(Update)').should('exist')
    cy.get('input[name="location"]').should('exist')
    cy.get('div.panel-heading').contains('Tags ').should('exist').parent().find('button:contains(Update)').should('exist')
    cy.get('input[placeholder="tags"]').should('exist')
    cy.get('div.panel-heading').contains('Value').should('exist').parent().find('button:contains(Update)').should('exist')
    cy.get('input[name="value"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets')
  })
  it('Maintance link should be visible and enable in checklist/manage page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click({ force: true })
    cy.get('a[href="/ctng4/checklist/manage"]').click({ force: true })
    cy.contains('Maintenance').should('be.visible').should('not.be.disabled')
    // cy.get('a:contains(Maintenance)').should('be.visible')
  })
  it('Delete link should be visible in checklist/manage page', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a[href="/ctng4/checklist/manage"]').click()
    cy.contains('Delete').should('be.visible')
  })
  it('Verify back button in Asset feature', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a[href="/ctng4/assets/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets')
    cy.get('a[href="/ctng4/assets/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets/manage')
    cy.get('a:contains(Add New Asset)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets')
    cy.get('a[href="/ctng4/assets/manage"]').click()
    cy.get('th:contains(Tracking Id)').parents('thead').next('tbody').children('tr').first().find('a:contains(123)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets/edit')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets')
  })
  it('Verify back button in Checklist feature', () => {
    cy.visit('/')
    cy.get('a[href="/ctng4/assets"]').click()
    cy.get('a[href="/ctng4/checklist/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/checklist/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets')
    cy.get('a[href="/ctng4/checklist/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/checklist/manage')
    cy.get('a:contains(Add New Checklist)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/checklist/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets')
    cy.get('a[href="/ctng4/checklist/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/checklist/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/assets')
  })

  // Accounting feature tets 

  it('When user click on accounting tab,should navigate to accounting page successfully ', () => {
    cy.visit('/accounting')
    cy.url().should('include', '/accounting')
    cy.get('li:contains(Action Links)').should('be.visible')
    cy.get('span:contains(Chart of Accounts)').should('be.visible').siblings().children().children('a[href="/ctng4/accounting/coa"]').should('exist')
    cy.get('span:contains(Voucher)').should('be.visible').siblings().children().children('a[href="/ctng4/accounting/manageVoucher"]').should('exist')
    cy.get('span:contains(Voucher)').should('be.visible').siblings().children().next().children('a[href="/ctng4/accounting/addVoucher"]').should('exist')
    cy.get('li:contains(Accounting Report)').should('be.visible').next().children('a:contains(Expense Report )').should('exist')
    cy.get('span:contains(Recent Reports)').should('be.visible')
    cy.get('span:contains(Notifications)').should('be.visible').parent().next().children().children().children().children().children('thead').children().find('th:contains(Date)').should('be.visible').next('th:contains(Description)').should('be.visible').next('th:contains(Action)').should('be.visible')
    cy.get('span:contains( Monthwise Expenses)').should('be.visible')
    cy.get('span:contains( Scheduled Jobs)').should('be.visible').parent().siblings().find('thead').within(() => {
      cy.get('th').eq(0).should('contain', '')
      cy.get('th').eq(1).should('contain', 'Date')
      cy.get('th').eq(2).should('contain', 'Job')
      cy.get('th').eq(3).should('contain', 'Action')
      cy.get('th').eq(4).should('contain', 'Status')
    })
    cy.get('span:contains(Monthwise Expenses Summary Chart across Institutes)').should('be.visible')
    cy.get('span:contains( Yearwise Expenses across Institutes)').should('be.visible')
    cy.get('span:contains(Monthwise  Departmental Expenses of an Institute)').should('be.visible')
    cy.get('span:contains( Status of Submitted and Pending Reports across Institutes )').should('be.visible')
    cy.get('span:contains( Assets and Liabilities of an Institute)').should('be.visible')
    cy.get('span:contains( Assets and Liabilities across Institutes)').should('be.visible')
    cy.get('span:contains( Outstanding Reimbursements across Institutes)').should('be.visible')
  })
  it('when user click on COA manage link should navigate to coa page', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/coa"]').click()
    cy.url().should('include', '/accounting/coa')
    cy.get('i[class="fa fa-angle-double-left"]').should('exist')
    cy.get('i[class="fa fa-close"]').should('exist')
    cy.get('span:contains(Add Title)').should('be.visible').next().children('button[title="Collapse All"]').should('exist').next('button[title="Expand All"]').should('exist')
  })
  it('when user click on Capital should navigate to capital details ', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/coa"]').click()
    cy.get('span:contains(Capital)').prev().children('i[class="fa fa-chevron-right fs-4 btn btn-xs py-7"]').click()
    cy.get('tabset').children('ul').find('span:contains(Capital)').should('exist').parents('ul').siblings().find('i[class="fa fa-print"]').should('exist')
    cy.get('span:contains(Capital)').should('be.visible').prev().children('i[class="fa fa-chevron-down fs-4 btn btn-xs"]').should('exist')
  })
  it('when user click on liabilities should navigate to liabilities details ', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/coa"]').click()
    cy.get('span:contains(Liabilities)').prev().children('i[class="fa fa-chevron-right fs-4 btn btn-xs py-7"]').click()
    cy.get('tabset').children('ul').find('span:contains(Liabilities)').should('exist').parents('ul').siblings().find('i[class="fa fa-print"]').should('exist')
    cy.get('span:contains(Liabilities)').should('be.visible').prev().children('i[class="fa fa-chevron-down fs-4 btn btn-xs"]').should('exist')
  })
  it('when user click on Expenses should navigate to Expenses details ', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/coa"]').click()
    cy.get('span:contains(Expenses)').prev().children('i[class="fa fa-chevron-right fs-4 btn btn-xs py-7"]').click()
    cy.get('tabset').children('ul').find('span:contains(Expenses)').should('exist').parents('ul').siblings().find('i[class="fa fa-print"]').should('exist')
    cy.get('span:contains(Expenses)').should('be.visible').prev().children('i[class="fa fa-chevron-down fs-4 btn btn-xs"]').should('exist')
  })
  it('when user click on Assets should navigate to Assetss details ', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/coa"]').click()
    cy.get('span:contains(Assets)').prev().children('i[class="fa fa-chevron-right fs-4 btn btn-xs py-7"]').click()
    cy.get('tabset').children('ul').find('span:contains(Assets)').should('exist').parents('ul').siblings().find('i[class="fa fa-print"]').should('exist')
    cy.get('span:contains(Assets)').should('be.visible').prev().children('i[class="fa fa-chevron-down fs-4 btn btn-xs"]').should('exist')
  })
  it('when user click on Revenue should navigate to Revenue details ', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/coa"]').click()
    cy.get('span:contains(Revenue)').prev().children('i[class="fa fa-chevron-right fs-4 btn btn-xs py-7"]').click()
    cy.get('tabset').children('ul').find('span:contains(Revenue)').should('exist').parents('ul').siblings().find('i[class="fa fa-print"]').should('exist')
    cy.get('span:contains(Revenue)').should('be.visible').prev().children('i[class="fa fa-chevron-down fs-4 btn btn-xs"]').should('exist')
  })
  it('when user click on Add folder icon in Chart Of Accounts, new folder should get added ', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/coa"]').click()
    cy.get('span:contains(Revenue)').next().find('button[title="Add Folder"]').click({ force: true })
    cy.get('span:contains(Revenue)').prev().children('i[class="fa fa-chevron-right fs-4 btn btn-xs py-7"]').click()
    cy.get('span:contains(New Node)').should('exist').prev().children('i[class="fa fa-chevron-right fs-4 btn btn-xs py-7"]').should('exist')
    cy.get('span:contains(New Node)').next().find('i[class="fa fa-trash-o"]').click({ force: true })
  })
  it('when user click on manage Voucher link should navigate to manage Voucher page', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/manageVoucher"]').click()
    cy.url().should('include', '/accounting/manageVoucher')
    cy.get('h3').should('have.length', 1).should('contain.text', 'Accounting').should('contain.text', 'Voucher').should('contain.text', 'Manage')
    cy.get('thead tr th').should('have.length', 8).each((th, index) => cy.wrap(th).should('have.text', ['', 'Date', 'Voucher No', 'Ref No', 'Type', 'Amount', 'Description', 'Actions'][index]))
    cy.get('input[placeholder="Search"]').should('exist').parent().next().children('i[class="fa fa-search"]').should('exist')
  })
  it('when user click on add Voucher link should navigate to voucher add page', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/addVoucher"]').click()
    cy.url().should('include', '/accounting/addVoucher')
    cy.get('h3').should('have.length', 1).should('contain.text', 'Accounting').should('contain.text', 'Voucher').should('contain.text', 'Add')
    cy.get('span:contains(Voucher)').should('be.visible')
    cy.get('select[name="voucherType"]').should('exist').find('option').should('have.length', 2).then((options) => {
      const optionValues = ['--Select--', 'Expense']
      options.each((i, option) => {
        expect(option.text).to.equal(optionValues[i])
      })
    })
    cy.get('input[placeholder="Ref No(optional)"]').should('exist')
    cy.get('button:contains(Generate)').should('exist')
    cy.get('i[class="glyphicon glyphicon-minus"]').should('exist').parents('span').next('input[name="receiptDate"]').should('exist').next().find('i[class="glyphicon glyphicon-plus"]').should('exist')
    // cy.get('input[placeholder="Amount"]').should('exist')
    cy.get('input[placeholder="Description"]').should('exist')
    cy.get('td:contains(To)').should('be.visible').next('td:contains(By)').should('be.visible')
    cy.get('table[class="table table-bordered"]').children('tbody').find('tr').eq(1).last().find('input[placeholder="ledger"]').should('exist').parent().prev().find('i[class="fa fa-minus-circle pull-left"]').should('exist').parents('td').next().next().children('input[placeholder="amount"]').should('exist').parent().next().find('i[class="fa fa-plus-circle"]').should('exist')
    cy.get('table[class="table table-bordered"]').children('tbody').find('tr').eq(1).first().find('input[placeholder="ledger"]').should('exist').parent().prev().find('i[class="fa fa-minus-circle pull-left"]').should('exist').parents('td').next().next().children('input[placeholder="amount"]').should('exist').parent().next().find('i[class="fa fa-plus-circle"]').should('exist')
    //cy.get('input[ng-reflect-typeahead="cash,cheque"]').should('exist').parent().prev().find('i[class="fa fa-minus-circle pull-left"]').should('exist').parents('td').next().next().children('input[placeholder="amount"]').should('exist').parent().next().find('i[class="fa fa-plus-circle"]').should('exist')
    //cy.get('input[ng-reflect-typeahead="bsnl,water,electricity,station"]').should('exist').parent().prev().find('i[class="fa fa-minus-circle pull-left"]').should('exist').parents('td').next().next().children('input[placeholder="amount"]').should('exist').parent().next().find('i[class="fa fa-plus-circle"]').should('exist')
    //cy.get('input[ng-reflect-typeahead="bsnl,water,electricity,station"]').should('exist').parents('td').next().children('input[placeholder="value"]').should('exist').next().children('i[class="fa fa-plus-circle"]').should('exist')
    cy.get('textarea[class="ace_text-input"]').should('exist')
    cy.get('textarea[class="ace_text-input"]').parent().parents('div').children('div[class="btn-group"]').should('exist')
    cy.get('button:contains(Clear)').should('be.enabled').should('exist')
  })
  it('verify the plus and minus circle icon in the To section', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/addVoucher"]').click()
    cy.get('table[class="table table-bordered"]').children('tbody').children('tr').eq(1).children('td').eq(0).find('input[placeholder="ledger"]').parent().next().next().find('i[class="fa fa-plus-circle"]').click().screenshot().parent().parent().parent().first().find('i[class="fa fa-minus-circle pull-left"]').click()
    cy.screenshot()
  })
  it('verify the plus and minus circle icon in the By section', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/addVoucher"]').click()
    cy.get('table[class="table table-bordered"]').children('tbody').children('tr').eq(1).children('td').eq(1).find('input[placeholder="ledger"]').parent().next().next().find('i[class="fa fa-plus-circle"]').click({ multiple: true }).screenshot().parent().parent().parent().first().find('i[class="fa fa-minus-circle pull-left"]').click({ multiple: true })
    cy.screenshot()
  })
  it('When the user click on the insert image button ,insert media popup should open', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/addVoucher"]').click()
    cy.get('button[title="Insert Image"]').click()
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('h4:contains(Insert Media)').should('be.visible')
    cy.get('ul').find('span:contains(Upload)').click()
    cy.get('p:contains(File size should not exceed 500KB)').should('be.visible').next('input[id="file"]').should('exist').next().children('button:contains(Upload To Vault)').should('be.enabled').should('exist')
    cy.get('input[placeholder="Search"]').should('exist').parent().next().children('i[class="fa fa-search"]').should('exist')
    cy.get('ul').find('span:contains(Draw)').click()
    cy.get('span:contains(Size : )').should('be.visible').prev().children('select').should('exist').find('option').should('have.length', 3).then((options) => {
      const optionValues = ['Small', 'Default', 'Large']
      options.each((i, option) => {
        expect(option.text).to.equal(optionValues[i]) // Verify that the option values match the expected values
      })
    })
    cy.get('button:contains(Save To Vault)').should('be.enabled').should('exist')
  })
  it('When the user click on the insert image button ,insert media popup should open', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/addVoucher"]').click()
    cy.get('button[title="Insert Formula"]').click()
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('h4:contains(Insert Formula)').should('be.visible')
    cy.get('button:contains(Insert)').should('be.enabled').should('exist')
    cy.get('span:contains(×)').should('exist')
  })/*
it('When the user enter all valid inputs in all fields of voucher, Generate button get enabled', () => {
  cy.visit('/accounting')
  cy.get('a[href="/ctng4/accounting/addVoucher"]').click()
  cy.get('input[placeholder="Ref No(optional)"]').type(Cypress.env('Ref_No'))
  //cy.get('input[placeholder="Amount"]').type(Cypress.env('amount'))
  cy.get('input[placeholder="Description"]').type(Cypress.env('Description'))
  cy.get('table[class="table table-bordered"]').children('tbody').children('tr').eq(1).children('td').eq(1).find('input[placeholder="ledger"]').type(Cypress.env('By')).parent().next().children('input[placeholder="amount"]').clear().type(Cypress.env('amount'))
  cy.get('table[class="table table-bordered"]').children('tbody').children('tr').eq(1).children('td').eq(0).find('input[placeholder="ledger"]').type(Cypress.env('To')).parent().next().children('input[placeholder="amount"]').clear().type(Cypress.env('amount'))
  //cy.get('div:contains( Voucher )').click()
  cy.get('i[class="glyphicon glyphicon-plus"]').click()
  cy.get('button:contains(Generate)').should('be.enabled').should('exist')
})
it('verify Generate button is enabled only when total amount in To section is equal to total amount in By section', () => {
  cy.visit('/accounting')
  cy.get('a[href="/ctng4/accounting/addVoucher"]').click()
  cy.get('input[placeholder="Ref No(optional)"]').type(Cypress.env('Ref_No'))
  //cy.get('input[placeholder="Amount"]').type(Cypress.env('amount'))
  cy.get('input[placeholder="Description"]').type(Cypress.env('Description'))
  cy.get('table[class="table table-bordered"]').children('tbody').children('tr').eq(1).children('td').eq(1).find('input[placeholder="ledger"]').type(Cypress.env('By')).parent().next().children('input[placeholder="amount"]').should('be.enabled').type(Cypress.env('amount'))
  cy.get('table[class="table table-bordered"]').children('tbody').children('tr').eq(1).children('td').eq(0).find('input[placeholder="ledger"]').type(Cypress.env('To')).parent().next().children('input[placeholder="amount"]').should('be.enabled').clear().type(Cypress.env('amount'))
  cy.get('table[class="table table-bordered"]').children('tbody').children('tr').eq(1).children('td').eq(0).find('input[placeholder="ledger"]').parents('tr').next().last().invoke('text').then(total => {
    billAmount = total.replace(/[₹,]|Total/g, '')
  })
  cy.get('table[class="table table-bordered"]').children('tbody').children('tr').eq(1).children('td').eq(1).find('input[placeholder="ledger"]').parents('tr').next().last().invoke('text').then(total => {
    payAmount = total.replace(/[₹,]|Total:/g, '')
  })
  expect(billAmount).to.equal(payAmount)
  cy.log('both total are equal')
  //cy.get('div:contains( Voucher )').click()
  cy.get('i[class="glyphicon glyphicon-plus"]').click()
  cy.get('button:contains(Generate)').should('be.enabled').click()
})*/
  it('When user click on category wise Expense Report ,should navigate to category wise Expense Report page and should able to download report', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/categorywiseExpenseReport"]').click()
    cy.url().should('include', '/categorywiseExpenseReport')
    cy.get('h4').should('contain.text', 'AccountingCategorywise Expense Report')
    cy.get('i[class="fa fa-print"]').click()
    //cy.get('i[class="fa fa-file-pdf-o"]').click()
    // cy.verifyDownload('Students Coursewise Breakup.pdf', { contains: true })
  })
  it('When user click on Datewise Expense Report  ,should navigate to Datewise Expense Report  page and should able to download report', () => {
    cy.visit('/accounting')
    cy.url().should('include', '/accounting')
    cy.get('a[href="/ctng4/accounting/datewiseExpenseReport"]').click()
    cy.url().should('include', '/datewiseExpenseReport')
    cy.get('h4').should('contain.text', 'Accounting Datewise Expense Report')
    cy.get('span[class="dropdown-down"]').click()
    cy.get('ul[class="item2"]').within(() => {
      cy.get('div:contains(Monthly)').prev('input[type="checkbox"]').check({ force: true })
    })
    cy.get('span:contains(--- Select Month ---)').next().children('span[class="dropdown-down"]').click({ force: true })
    cy.get('div:contains(May 2023)').prev('input[type="checkbox"]').check({ force: true })
    cy.get('i[class="fa fa-print"]').click()
    cy.get('i[class="fa fa-file-pdf-o"]').click()
    //cy.verifyDownload('Datewise expense report.pdf', { contains: true })
  })
  it('When user click on Yearwise Expense Report ,should navigate to Yearwise Expense Report page and should able to download report', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/yearwiseExpenseReport"]').click()
    cy.url().should('include', '/yearwiseExpenseReport')
    cy.get('h4').should('contain.text', 'AccountingYearwise Expense Report')
    cy.get('i[class="fa fa-print"]').click()
    //cy.get('i[class="fa fa-file-pdf-o"]').click()
    // cy.verifyDownload('Students Coursewise Breakup.pdf', { contains: true })
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/accounting')
  })
  it('When user click on Tally / XML , voucher should download in xml format', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/manageVoucher"]').click()
    cy.get('td:contains(21/PPEC)').parent().last().find('button[type="button"]').click().next().find('li').contains('Tally / XML').click()
    cy.verifyDownload('Voucher', { contains: true })
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/accounting')
  })
  it('When user click on Prime Tally / XML , voucher should download in Tally format', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/manageVoucher"]').click()
    cy.get('td:contains(21/PPEC)').parent().last().find('button[type="button"]').click().next().find('li:contains(Prime Tally / XML)').click()
    cy.verifyDownload('Voucher-TallyPrime', { contains: true })
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/accounting')
  })
  it('when user click on schedule reminder icon, schedule reminder pop should open', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/coa"]').click()
    cy.get('span:contains(Expenses)').prev().children('i[class="fa fa-chevron-right fs-4 btn btn-xs py-7"]').click()
    cy.get('span:contains(Utils)').click().parent().next().children().children().children('ul').first().find('span:contains(Tel and Internet - BSNL)').click()
    cy.get('i[class="fa fa-clock-o"]').click()
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('strong:contains(Schedule Reminder)').should('be.visible')
    cy.get('label:contains(Title / Description)').should('be.visible').next('input[placeholder="Pay Reminder"]').should('exist')
    cy.get('label:contains(Schedule)').should('be.visible')
    cy.contains('label', 'Now').find('input[type="radio"]').should('exist')
    cy.contains('label', ' Later ').find('input[type="radio"]').should('exist')
    cy.get('label:contains(Publish to)').should('be.visible').next('input[placeholder="Topic Name: North-East"]').should('exist')
    cy.get('button:contains(Cancel)').should('exist').next('button:contains(Submit)').should('exist')
  })
  /* it('When the user click on clear button all inputs in textfield of add voucher page should get cleared', () => {
     cy.visit('/accounting')
     cy.get('a[href="/ctng4/accounting/addVoucher"]').click()
     cy.get('input[placeholder="Ref No(optional)"]').type(Cypress.env('Ref_No'))
     //cy.get('input[placeholder="Amount"]').type(Cypress.env('amount'))
     cy.get('input[placeholder="Description"]').type(Cypress.env('Description'))
     cy.get('table[class="table table-bordered"]').children('tbody').find('tr').eq(1).last().find('input[placeholder="ledger"]').type(Cypress.env('By')).parent().next().children('input[placeholder="amount"]').clear().type(Cypress.env('amount'))
     cy.get('table[class="table table-bordered"]').children('tbody').find('tr').eq(1).first().find('input[placeholder="ledger"]').type(Cypress.env('To')).parent().next().children('input[placeholder="amount"]').clear().type(Cypress.env('amount'))
     //cy.get('div:contains( Voucher )').click()
     cy.get('i[class="glyphicon glyphicon-plus"]').click()
     cy.get('button:contains(Clear)').should('be.enabled').should('exist').click()
   })*/
  it('Verify back button in Voucher feature', () => {
    cy.visit('/accounting')
    cy.get('a[href="/ctng4/accounting/addVoucher"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/accounting/addVoucher')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/accounting')
    cy.get('a[href="/ctng4/accounting/manageVoucher"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/accounting/manageVoucher')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/accounting')
  })

  // Connect feature Tests

  it('should navigate to connect page successfully ', () => {
    cy.visit('/connect')
    cy.url().should('include', '/connect')
    cy.get('a[href="/ctng4/connect/contactLookup"]').should('exist')
    cy.get('a[href="/ctng4/connect/notifications"]').should('exist')
  })
  it('When user click on contact add link , should navigate to contactLookup page', () => {
    cy.visit('/connect')
    cy.get('i[title="Lookup Contacts"]').click()
    cy.url().should('include', '/contactLookup')
    cy.contains('Contact Lookup').should('be.visible')
    cy.contains('Enter Mobiles / Emails :').should('be.visible')
    cy.get('textarea[placeholder="Can enter multiple values separated by comma / line"]').should('exist')
    cy.get('button[class="btn btn-xs btn-success"]').should('contain', 'Lookup')
    cy.get('button[class="btn btn-xs btn-danger"]').should('contain', 'Block Contacts')
    cy.get('button[class="btn btn-xs btn-success"]').should('be.disabled')
    cy.get('button[class="btn btn-xs btn-danger"]').should('be.disabled')
  })
  it('When user enter input in textarea field Lookup and Block Contact button Should be enabled', () => {
    cy.visit('/connect')
    cy.get('i[title="Lookup Contacts"]').click()
    cy.get('textarea[placeholder="Can enter multiple values separated by comma / line"]').type(Cypress.env('USERNAME'))
    cy.get('button[class="btn btn-xs btn-success"]').should('be.enabled')
    cy.get('button[class="btn btn-xs btn-danger"]').should('be.enabled')
  })
  it('When user click on Email/manage link, should navigate to manageEmail page', () => {
    cy.visit('/connect')
    cy.get('a[href="/ctng4/connect/manageEmail"]').click()
    cy.url().should('include', '/manageEmail')
    cy.get('input[placeholder="Search by: subject or date (yyyy-mm-dd)"]').should('exist')
    cy.get('a[href="/connect/newEmail"]').should('exist')
    cy.get('div[class="input-group pager shadow"]').should('exist')
  })
  it('When user enter subject of Email and click on search, related email details should display', () => {
    cy.visit('/connect')
    cy.get('a[href="/ctng4/connect/manageEmail"]').click()
    cy.get('input[placeholder="Search by: subject or date (yyyy-mm-dd)"]').type('from btl')
    cy.get('i[class="fa fa-search"]').click()
  })
  it('When user enter date of Email in textfield and click on search, related email details should display', () => {
    cy.visit('/connect')
    cy.get('a[href="/ctng4/connect/manageEmail"]').click()
    cy.get('input[placeholder="Search by: subject or date (yyyy-mm-dd)"]').type('2023-03-30')
    cy.get('i[class="fa fa-search"]').click()
  })
  it('When user click on New Message link, should navigate to newEmail page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageEmail"]').click()
    cy.get('a[href="/connect/newEmail"]').click()
    cy.url().should('include', '/newEmail')
  })
  it('When user click on Resend link, should navigate to newEmail page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageEmail"]').click()
    // cy.contains('td', 'Test email').parent('tr').within(() => { cy.get('a:contains(Resend)').click() })
    cy.get('th:contains(Date Sent)').parent().parent().siblings().get('tr').first().get('td').last().find('a:contains(Resend)').click()
    cy.url().should('include', '/connect/newEmail')
  })
  it('When user click on Email/add link, should navigate to newEmail page', () => {
    cy.visit('/connect')
    cy.get('i[title="Send new Email"]').click()
    cy.url().should('include', '/newEmail')
    cy.get('div.col-md-3 strong').should('contain.text', 'Type');
    cy.get('div.col-md-3 strong').should('contain.text', 'From');
    cy.get('div.col-md-3 strong').should('contain.text', 'Subject');
    cy.get('div.col-md-4 strong').should('contain.text', 'Attachments(Optional)');
    cy.get('div.col-md-3 strong').should('contain.text', 'Body');
    cy.get('div.col-md-3 strong').should('contain.text', 'To');
    cy.get('div.col-md-3 strong').should('contain.text', 'SMS(Optional)');
    cy.get('div.col-md-3 strong').should('contain.text', 'Send');
    cy.screenshot()
  })
  it('When user click on Type , dropdown should visible and user should able to select option', () => {
    cy.visit('/connect')
    cy.get('i[title="Send new Email"]').click()
    cy.contains('div', 'Type').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.get('select').should('have.value', 'Generic')
  })
  it('When user click on From , textfield which have value support@campustrack.net should be visible and it should be disabled ', () => {
    cy.visit('/connect')
    cy.get('i[title="Send new Email"]').click()
    cy.contains('div', 'From').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.get('input[name="from"]').should('be.disabled').and('have.value', 'support@campustrack.net')
  })
  it('When user click on Subject , Subject text field should be exist and it should be enabled', () => {
    cy.visit('/connect')
    cy.get('i[title="Send new Email"]').click()
    cy.contains('div', 'Subject').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.get('input[placeholder="Subject"]').should('exist')
  })
  it('When user click on Body , Textarea field should be exist and mail header shold be visble', () => {
    cy.visit('/connect')
    cy.get('i[title="Send new Email"]').click()
    cy.contains('div', 'Body ').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.get('textarea[class="ace_text-input"]').should('exist')
    cy.contains('div', 'Body ').within(() => { cy.get('input[type="checkbox"]').should('be.checked') })
    cy.contains('Dear Parent / Guardian,')
    cy.contains('Thank You.')
    cy.contains('Principal.')
    cy.contains('BTL College')
    cy.contains('BSK II Stage')
    cy.contains('Bangalore')
    cy.get('img[alt="BTL Logo"]').should('be.visible')
  })
  it('When user click on To , Textarea field and search text field should exist', () => {
    cy.visit('/connect')
    cy.get('i[title="Send new Email"]').click()
    cy.contains('div', 'To').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.get('input[placeholder="search"]').should('exist')
    cy.get('div.col-md-4.pull-right input[type="checkbox"]').next('span').should('have.text', 'Send a Copy to myself')
    cy.get('textarea').should('exist')
  })
  it('When user click on Attachments , Choose file input should be visible', () => {
    cy.visit('/connect')
    cy.get('i[title="Send new Email"]').click()
    cy.contains('div', 'Attachments(Optional)').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.contains('p', 'Select file(s) to attach (500Kb limit). If it\'s new file then upload & then select').should('be.visible')
    cy.get('div.col-md-6').should('contain.text', 'Only PDF allowed for upload').should('contain.text', 'File size should not exceed 500KB').find('input[type="file"]').should('exist')
  })
  it('When user click on SMS , Message Textarea field should exist', () => {
    cy.visit('/connect')
    cy.get('i[title="Send new Email"]').click()
    cy.contains('div', 'SMS(Optional)').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.get('div[style*="background-color: orange"] strong').should('contain', 'Message')
    cy.get('textarea').should('exist')
    cy.get('form[name="form"] textarea[name="smsMsg"]').should('be.visible')
    cy.get('form[name="form"] span:first-of-type em').should('have.text', '0 characters used')
    cy.get('form[name="form"] span:last-of-type em').should('have.text', '0 SMS Credit')
  })
  it('When user enter all valid input in all fields and click on Send Email button , Email should sent to Recipients and user should navigate to email manage page', () => {
    cy.visit('/connect')
    cy.get('i[title="Send new Email"]').click()
    cy.contains('div', 'Type').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.get('select').should('have.value', 'Generic')
    cy.contains('div', 'Subject').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.get('input[placeholder="Subject"]').type('REPORT')
    cy.contains('div', 'To').parent().find('i.fa.fa-chevron-down').should('be.visible').click()
    cy.get('textarea').type(Cypress.env('USERNAME'))
    cy.contains('div', 'To').parent().find('i.fa.fa-chevron-up').should('be.visible').click()
    cy.contains('div', 'Send').parent('div').find('i.fa.fa-chevron-down').should('be.visible').click()
    //cy.contains('Send').parent('div').find('.fa-chevron-down').click()
    cy.get('button:contains(Send Email)').click()
    cy.url().should('include', '/connect/manageEmail')
  })
  it('When user click on SMS/manage link, should navigate to manageSMS page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMS"]').click()
    cy.url().should('include', '/manageSMS')
    cy.get('a:contains(New Message)').should('exist').should('be.visible')
    cy.get('input[type="search"]').should('exist').parent().next().children('i[class="fa fa-search"]').should('be.visible').should('exist')
    cy.get('table[class="table table-bordered table-condensed"]').children('thead').children('tr').each((index, element) => {
      const expectedHeader = ['Date', 'Message', 'Total Credits', 'Recipients ', 'SMS Credits', 'Actions']
      expect(element.textContent).to.equal(expectedHeader[index])
    })
  })
  it('When user click on Show selected receipts link, selected receipts should dispaly ', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMS"]').click()
    cy.get('a:contains(New Message)').click()
    cy.get('strong:contains(Recipients (Manual))').should('be.visible').parents('div').siblings().find('textarea').type('9743271351')
    cy.get('tree-node-content').contains('Parent').parent('tree-node-content').parent('div').siblings('tree-node-checkbox').find('input[type="checkbox"]').check()
    cy.get('a:contains(Show Selected Recipients)').click({ multiple: true })
    cy.contains('Recipients (Auto) :').should('be.visible')
    cy.get('span:contains("Parent : All")').should('be.visible')
  })
  it('When user click on Review & Send button, user should navigate to reviewSendSMS page  ', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMS"]').click()
    cy.get('a:contains(New Message)').click()
    cy.get('strong:contains(Recipients (Manual))').should('be.visible').parents('div').siblings().find('textarea').type('9743271351')
    cy.get('tree-node-content').contains('Parent').parent('tree-node-content').parent('div').siblings('tree-node-checkbox').find('input[type="checkbox"]').check()
    cy.get('a:contains(Show Selected Recipients)').click({ multiple: true })
    cy.get('button:contains(Review & Send)').click()
    cy.url().should('include', '/connect/reviewSendSMS')
  })
  it('When user click on Resend link, Sms Should resend', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMS"]').click()
    cy.contains('tr', Cypress.env('message')).contains('Resend').click()
  })
  it('When user click on Send new SMS link, Should navigate to newSMS page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/newSMS"]').click()
    cy.get('.orange-bg').should('exist')
    cy.contains('Message').should('exist')
    cy.contains('SMS Credits Table').should('exist')
    cy.get('textarea[name="smsMsg"]').should('exist')
    cy.get('textarea[name="smsMsg"]').should('have.attr', 'maxlength', '459')
    cy.get('span.pull-right').contains('1 SMS Credit').should('exist')
    cy.get('div.bg-info').should('exist')
  })
  it('When user click on Show selected receipts link, selected receipts should dispaly ', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/newSMS"]').click()
    cy.get('strong:contains(Recipients (Manual))').should('be.visible').parents('div').siblings().find('textarea').type('9743271351')
    cy.get('tree-node-content').contains('Parent').parent('tree-node-content').parent('div').siblings('tree-node-checkbox').find('input[type="checkbox"]').check()
    cy.get('a:contains(Show Selected Recipients)').click({ multiple: true })
    cy.contains('Recipients (Auto) :').should('be.visible')
    cy.get('span:contains("Parent : All")').should('be.visible')
  })
  it('When user click on Review & Send button, user should navigate to reviewSendSMS page  ', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/newSMS"]').click()
    cy.get('strong:contains(Recipients (Manual))').should('be.visible').parents('div').siblings().find('textarea').type('9743271351')
    cy.get('tree-node-content').contains('Parent').parent('tree-node-content').parent('div').siblings('tree-node-checkbox').find('input[type="checkbox"]').check()
    cy.get('a:contains(Show Selected Recipients)').click({ multiple: true })
    cy.get('button:contains(Review & Send)').click()
    cy.url().should('include', '/connect/reviewSendSMS')
  })
  it('When user click on view Report link, SMS Delivery Report pop shoud display', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMS"]').click()
    cy.contains('tr', Cypress.env('message')).contains('View Report').click()
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('h4:contains(SMS Delivery Report)').should('be.visible')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('div[class="modal-body"]').children('table').children('thead').children('tr').within(() => {
      cy.contains('td', 'Sl No').should('be.visible')
      cy.contains('td', 'Student Name').should('be.visible')
      cy.contains('td', 'Course').should('be.visible')
      cy.contains('td', 'Mobile (S)').should('be.visible')
      cy.contains('td', 'Mobile (F)').should('be.visible')
      cy.contains('td', 'Mobile (M)').should('be.visible')
      cy.contains('td', 'Mobile (G)').should('exist')
    })
    cy.get('span:contains(×)').click()
  })
  it('When user click on Send button, SMS should sent to selectrd recipient', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/newSMS"]').click()
    cy.get('strong:contains(Recipients (Manual))').should('be.visible').parents('div').siblings().find('textarea').type('9743271351')
    cy.get('tree-node-content').contains('Parent').parent('tree-node-content').parent('div').siblings('tree-node-checkbox').find('input[type="checkbox"]').check()
    cy.get('a:contains(Show Selected Recipients)').click({ multiple: true })
    cy.get('button:contains(Review & Send)').click()
    cy.get('a:contains(Show Recipients :)').should('be.visible').click()
    cy.get('a:contains(Hide Recipients)').should('be.visible')
    cy.get('button:contains(Send)').click()
  })
  it('When user click on notification link, should navigate to notifications page', () => {
    cy.visit('/connect')
    cy.get('span:contains(Notification)').next().find('span').first().find('a[href="/connect/notifications"]').click()
    cy.url().should('include', '/connect/notifications')
    cy.get('h3').should('contain.text', 'ConnectNotifications')
    cy.get('table[class="table table-bordered table-striped"]').children('thead').children('tr').each((index, element) => {
      const expectedHeader = ['Date', 'From', 'Type', 'Title', 'Expiry', 'Status']
      expect(element.textContent).to.equal(expectedHeader[index])
    })
  })
  it('When user click on Schedule Meeting link, should navigate to ScheduleMeeting page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/msTeams/scheduleMeeting"]').click()
    cy.get('h3').should('contain.text', 'ConnectMeetingsSchedule')
    cy.url().should('include', '/connect/msTeams/scheduleMeeting')
    cy.get('span:contains(Subject)').should('be.visible')
    const toDate = new Date();
    const month = toDate.getMonth() - 3;
    const newDate = new Date(toDate.setMonth(month))
    const date = newDate.toString()
    cy.get('td:contains(Meeting On)').should('be.visible').next().children('input[name="reportFromDate"]').should('exist').clear().type(date)
  })
  it('When user click on New Message link, should navigate to Should navigate to newSMS page page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMS"]').click()
    cy.url().should('include', '/manageSMS')
    cy.get('a:contains(New Message)').click()
    cy.get('.orange-bg').should('exist')
    cy.contains('Message').should('exist')
    cy.contains('SMS Credits Table').should('exist')
    cy.get('textarea[name="smsMsg"]').should('exist')
    cy.get('textarea[name="smsMsg"]').should('have.attr', 'maxlength', '459')
    //cy.get('textarea[name="smsMsg"]').should('be.required')
    cy.get('span.pull-right').contains('1 SMS Credit').should('exist')
    cy.get('div.bg-info').should('exist')
  })
  it('When user click on Manage SMS Templates link, Should navigate to manageSMSTemplate page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMSTemplate"]').click()
    cy.url().should('include', 'connect/manageSMSTemplate')
    cy.get('h3').should('contain.text', 'ConnectSMS Template')
    cy.get('a:contains(New SMS Template)').should('be.visible').should('exist')
    cy.get('a:contains(New SMS Template)').next().children('label').get('span:contains(Approved)').should('be.visible').parent().prev('input[type="radio"]').should('be.checked')
    cy.get('a:contains(New SMS Template)').next().next().children('label').get('span:contains(Pending)').should('be.visible').parent().prev('input[type="radio"]').should('not.be.checked')
    cy.get('a:contains(New SMS Template)').next().next().next().children('label').get('span:contains(Disapproved)').should('be.visible').parent().prev('input[type="radio"]').should('not.be.checked')
    cy.get('table[class="table table-bordered table-condensed"]').children('thead').children('tr').each((index, element) => {
      const expectedHeader = ['Length', 'Total Credits', 'Status', 'Actions']
      expect(element.textContent).to.equal(expectedHeader[index])
    })
  })
  it('When user click on New SMS Template link,Message textarea should display', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMSTemplate"]').click()
    cy.url().should('include', 'connect/manageSMSTemplate')
    cy.get('a:contains(New SMS Template)').click()
    cy.get('.orange-bg').should('exist')
    cy.contains('Message').should('exist')
    cy.contains('SMS Credits Table').should('exist')
    cy.get('textarea[name="smsMsg"]').should('exist')
    cy.get('textarea[name="smsMsg"]').should('have.attr', 'maxlength', '459')
    cy.get('span').contains('0 characters used').should('exist')
    cy.get('span.pull-right').contains('0 SMS Credit').should('exist')
    cy.get('div.bg-info').should('exist')
    cy.get('button:contains(Cancel)').should('be.enabled').should('exist')
    cy.get('button:contains(Request Approval)').should('be.disabled').should('exist')
  })
  it('When user type message template in textarea,Request Approval button should get enabled and template should forward to aproval', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMSTemplate"]').click()
    cy.url().should('include', 'connect/manageSMSTemplate')
    cy.get('a:contains(New SMS Template)').click()
    cy.get('textarea[name="smsMsg"]').type(Cypress.env('Template'))
    cy.get('button:contains(Request Approval)').click()
    cy.get('a:contains(New SMS Template)').next().next().children('label').get('span:contains(Pending)').should('be.visible').parent().prev('input[type="radio"]').should('be.checked')
  })
  it('When user click on Approve / Disapprove ,Approval / Disapproval pop should dispaly and when user click on approve button template should added', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMSTemplate"]').click()
    cy.url().should('include', 'connect/manageSMSTemplate')
    cy.get('a:contains(New SMS Template)').next().next().children('label').get('span:contains(Pending)').should('be.visible').parent().prev('input[type="radio"]').check()
    cy.get('table[class="table table-bordered table-condensed"]').children('tbody').get('tr').first().get('td').last().find('i[class="fa fa-edit"]').click().parent().next().find('a:contains(Approve / Disapprove)').click()
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('label:contains(Promotional)').prev('input[type="radio"]').should('exist')
    cy.get('button:contains(Disapprove)').should('exist')
    cy.get('label:contains(Transactional)').prev('input[type="radio"]').check()
    cy.get('label:contains(No Typos)').should('be.visible').prev('input[type="checkbox"]')
    cy.get('label:contains(Gramatically Correct)').should('be.visible').prev('input[type="checkbox"]')
    cy.get('label:contains(Politically Correct)').should('be.visible').prev('input[type="checkbox"]')
    cy.get('button:contains(Approve)').click()
  })
  it('When use click on disable link, selected Template should get disabled', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMSTemplate"]').click()
    cy.url().should('include', 'connect/manageSMSTemplate')
    cy.contains('td', 'Hello').parent().last().find('i[class="fa fa-edit"]').click()
    cy.contains('td', 'Hello').parent().last().find('a:contains(Disable)').should('be.visible').click()
  })
  it('When use click on Enable link, selected Template should get Enabled', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSMSTemplate"]').click()
    cy.url().should('include', 'connect/manageSMSTemplate')
    cy.contains('td', 'Hello').parent().last().find('i[class="fa fa-edit"]').click()
    cy.contains('td', 'Hello').parent().last().find('a:contains(Enable)').click()
    cy.contains('td', 'Hello').parent().find('td:contains(Active)').should('be.visible')
  })
  it('When use click on Subcription manage link, should navigate to subcription manage page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageSubscriptions"]').click()
    cy.url().should('include', '/manageSubscriptions')
    cy.get('h3').should('contain.text', 'ConnectSubscriptionsManage')
    cy.get('thead th').each((header, index) => {
      cy.wrap(header).invoke('text').then(text => {
        expect(text.trim()).to.equal(getExpectedHeading(index))
      })
    })
    function getExpectedHeading(index) {
      switch (index) {
        case 0: return 'Base'
        case 1: return 'Topic'
        case 2: return 'Friendly Name'
        case 3: return 'Description'
        case 4: return 'Actions'
        default: return ''
      }
    }
  })
  it('When use click on topic manage link, should navigate to topic manage page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/manageTopics"]').click()
    cy.url().should('include', '/manageTopics')
    cy.get('h3').should('contain.text', 'ConnectTopicManage')
    cy.get('span:contains(btlcol / 2023 / )').should('be.visible').next('input[placeholder="Add New Topic"]').should('exist')
    cy.get('thead tr th').should('have.length', 8).each((th, index) => cy.wrap(th).should('have.text', ['Base', 'Topic', 'Handle', 'Friendly Name', 'Description', 'Role', 'Subscriptions', 'Actions'][index]))
  })
  it('When use click on websitelink, should navigate to website page', () => {
    cy.visit('/connect')
    cy.get('a[href="/connect/website"]').click()
    cy.url().should('include', '/website')
    cy.get('h3').should('contain.text', 'Website')
    cy.get('span:contains(Thoughts For The Day)').should('be.visible')
    cy.get('a:contains(Add Quote)').should('exist')
    cy.get('span:contains(News)').should('be.visible')
  })

  // Fee Feature Tests

  it('When user click on fee link user should navigate to fee page', () => {
    cy.visit('/fees')
    cy.url().should('include', '/fees')
    cy.get('a[href="/ctng4/fees/manage"]').should('exist')
    cy.get('a[href="/ctng4/fees/add"]').should('exist')
    cy.get('a[href="/ctng4/fees/transactions"').should('exist')
    cy.get('a[href="/ctng4/fees/transactions/add"]').should('exist')
    cy.get('a[href="/ctng4/fees/feesStructureReport"]').should('exist')
    cy.get('a[href="/ctng4/fees/coursewiseFeesStructureReport"]').should('exist')
    cy.get('a[href="/ctng4/fees/feesExpectedReport"]').should('exist')
  })
  it('When user click on fees add link user should navigate to fees/add page', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/add"]').click()
    cy.url().should('include', '/add')
    cy.get('input[placeholder="Name"]').should('exist')
    cy.get('input[placeholder="Display Text"]').should('exist')
    cy.get('select[name="collect"]').should('exist')
    cy.get('input[placeholder="Tags"]').should('exist')
  })
  it('When user click on Payment Schedule, should exist description, Amount and due date textfield', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/add"]').click()
    cy.get('strong:contains(Payment Schedule)').click()
    cy.get('input[placeholder="Description"]').should('exist')
    cy.get('input[placeholder="Amount"]').should('exist')
    cy.get('input[placeholder="Due Date"]').should('exist')
  })
  it('When user click on Fine, should exist description and Amounttextfield', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/add"]').click()
    cy.get('strong:contains(Fine)').click()
    cy.get('input[placeholder="Description"]').should('exist')
    cy.get('input[placeholder="Amount"]').should('exist')
  })
  it('When user click on transact add link, should navigate to transactions/add page', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/transactions/add"]').click()
    cy.url().should('include', '/fees/transactions/add')
    cy.get('input[placeholder="search"]').should('exist')
  })
  it('When user click on transact manage link, should navigate to transactions page', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/transactions"]').click()
    cy.url().should('include', '/fees/transactions')
    cy.get('input[type="search"]').should('exist')
    cy.get('a:contains(New Transaction)').should('exist')
  })
  it('When user click on New Transaction link, should navigate to transactions/add page', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/transactions"]').click()
    cy.get('a:contains(New Transaction)').click()
    cy.url().should('include', 'transactions/add')
    cy.get('input[type="search"]').should('exist')
  })/*
it('When user click on disable link, selected transaction should get disabled', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/transactions"]').click()
    cy.get('input[placeholder="Search"]').type(Cypress.env('Recepiet')).parent().next().children('i[class="fa fa-search"]').click()
    //cy.get('i[class="fa fa-search"]').click()
    cy.get('thead[class="bg-info"]').next().find('tr').last().find('a[class="text-danger"]').click()
    //cy.contains('tr', 'Aadya Rao').contains('a', 'Disable').click()
    cy.get('thead[class="bg-info"]').next().find('tr').last().find('a[class="text-success"]').click()
    //cy.contains('tr', 'Aadya Rao').contains('a', 'Enable').click()
})*/
  it('when user enter all valid details in all field fee add page and click on save button , fee details should get added and navigate to fee amnage', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/add"]').click()
    function getRandomItem(arr) {
      const randomIndex = Math.floor(Math.random() * arr.length);
      const item = arr[randomIndex];
      return item;
    }
    const array = ['Admission fee', 'Computer Fees', 'New Admission', 'Tuition Fees', 'Exam Fee', 'Lab Fee', 'Sports Fee', 'miscellaneous', 'term Fee', 'Exam registration fee']
    const string = getRandomItem(array)
    cy.get('input[placeholder="Name"]').type(string)
    const str = getRandomItem(array)
    cy.get('input[placeholder="Display Text"]').type(str)
    //cy.get('strong:contains(Paid By Students)').click()
    cy.get('span:contains(FInance)').parent().siblings('input[type="checkbox"]').check()
    cy.get('strong:contains(Payment Schedule)').click()
    cy.get('input[placeholder="Description"]').type(string)
    cy.get('input[placeholder="Amount"]').type('500')
    cy.get('button:contains(Save)').click()
    // cy.url().should('include', '/fees/manage')
    // cy.contains('tr',str).within(() => {cy.contains('button',string) .should('exist') })
    //cy.get('th:contains( Display Text )').parent().parent().siblings().find('tr').contains(string).should('exist')
    //cy.get('tr').contains(string).should('exist')
    //cy.contains('tr', string).should('exist')
  })
  it('When user click on fees Manage link user should navigate to fees/manage page', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/manage"]').click()
    cy.url().should('include', '/fees/manage')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('button:contains(Add Fee)').should('be.visible')
  })
  it('When user click on Add Fee button, user should navigate to fees/add page', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/manage"]').click()
    cy.get('button:contains(Add Fee)').click()
    cy.url().should('include', '/add')
    cy.get('input[placeholder="Name"]').should('exist')
    cy.get('input[placeholder="Display Text"]').should('exist')
    cy.get('select[name="collect"]').should('exist')
    cy.get('input[placeholder="Tags"]').should('exist')
  })/*
it('When user click on fee name, user should navigate to fees/edit page', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/manage"]').click()
    cy.contains('tr', 'fees').within(() => { cy.contains('button', 'admission pcmb').click() })
    cy.get('input[placeholder="Name"]').should('exist')
    cy.get('input[placeholder="Display Text"]').should('exist')
    cy.get('select[name="collect"]').should('exist')
    cy.get('input[placeholder="Tags"]').should('exist')
    cy.get('button:contains(Save)').should('be.enabled').should('exist')
    cy.get('strong:contains(Payment Schedule)').should('exist')
    cy.get('strong:contains(Fine)').should('exist')
})
it('When user click on Disable link, selected fee should get disable', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/manage"]').click()
    cy.contains('tr', 'fees').within(() => { cy.get('a[title="Disable Fee"]').click() })
    cy.contains('tr', 'fees').within(() => { cy.get('a[title="Enable Fee"]').click() })
})
it('When user click Receipt number, should navigate to transactions/edit page', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions"]').click()
    cy.get('input[placeholder="Search"]').clear().type(Cypress.env('Recepiet'))
    cy.get('i[class="fa fa-search"]').click()
    cy.get('tr').contains('1/BTLCOL').click()
    cy.url().should('include', '/fees/transactions/edit')
    cy.get('div:contains(Fee transactions cannot be edited. If this feature is required please contact )').should('be.visible')
    cy.get('a:contains(support@campustrack.net)').should('exist')
    cy.get('strong').should('contain', Cypress.env('Recepiet')).should('be.visible')
})

it('When user enter student details in textfield and search, resepected student Tranctions details should display', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions/add"]').click()
    cy.url().should('include', 'transactions/add')
    cy.get('input[type="search"]').type(Cypress.env('studentName')).next().children('ul').click()
    cy.get('strong:contains(Receipt No : #)').should('be.visible').parent().next().children().find('input[name="date"]').should('exist')
    cy.get('strong:contains(Receipt No : #)').should('be.visible').parent().next().next('button:contains(Save)').should('be.disabled').should('exist')
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').parents('td').next().children('select').should('exist').find('option').should('have.length', 4)
        .then((options) => {
            const optionValues = ['- Select Mode -', 'cash', 'cheque', 'online']
            options.each((i, option) => {
                expect(option.text).to.equal(optionValues[i]) // Verify that the option values match the expected values
            })
        })
    cy.get('label:contains(Adjustment Amt )').should('be.visible').prev('input[type="checkbox"]').should('exist')
    cy.get('strong:contains(Total)').should('be.visible')
    cy.get('button:contains(Save)').should('be.disabled')
})
it('When user enter amount in Amount received Textfield and select payment mode and select pending fees if amount recived and total amount is equal ,then only save button should get enabled', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions/add"]').click()
    cy.url().should('include', 'transactions/add')
    cy.get('input[type="search"]').type(Cypress.env('studentName')).next().children('ul').click()
    const recived_amount = Cypress.env('value').toString()
    // const recived_amount = amount.toString()
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').type(recived_amount)
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').parents('td').next().children('select').select('Cash')
    cy.get('div[class="tab-content"]').children().next().children().find('tbody tr').first().as('firstRow')
    cy.get('@firstRow').find('input[type="checkbox"]').check()
    // cy.get('div[class="tab-content"]').children().next().children().find('tbody').children().find('input[type="checkbox"]').click()
   // cy.get('td:contains(Tuition Fee July 2020 )').next().next().children('input[type="checkbox"]').check()
    cy.get('td.text-right strong').invoke('text').then(total => {
        const totalAmount = total.replace(/₹|,/g, '') // remove the ₹ symbol and comma
        expect(totalAmount).to.equal(Cypress.env('value')) // assert that the total amount is equal to recived amount
        cy.log('Recived amount and Total amount are equal')
    })
    cy.get('button:contains(Save)').should('be.enabled').should('exist').and('be.visible')
})
it('check weather  Adjustment Amt checkbox is get enabled if the amount received is greater than the total pending fees', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions/add"]').click()
    cy.get('input[type="search"]').type(Cypress.env('studentName')).next().children('ul').click()
    cy.get('div[class="tab-content"]').children().next().children().find('tbody').last().find('strong').invoke('text').then(total => {
        pendingAmount = total.replace(/[₹,]|Total/g, '')
    })
    const recived_amount = parseInt(pendingAmount) + parseInt(Cypress.env('value'))
    const amount = recived_amount.toString()
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').type(amount)
    cy.get('label:contains(Adjustment Amt )').should('be.visible').prev('input[type="checkbox"]').should('be.enabled').should('exist').check().should('be.checked')
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').parents('td').next().children('select').select('Cash')
    cy.get('div[class="tab-content"]').children().next().children().find('tbody tr').first().as('firstRow')
    cy.get('@firstRow').find('input[type="checkbox"]').check()
    //cy.get('div[class="tab-content"]').children().next().children().find('tbody').first().find('input[type="checkbox"]').check()
    //cy.get('td:contains(Tuition Fee July 2020 )').next().next().children('input[type="checkbox"]').check()
    cy.get('button:contains(Save)').should('be.enabled').should('exist').and('be.visible')
})
it('check weather Adjustment Amt checkbox is disabled if the amount received is less than the total pending fees', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions/add"]').click()
    cy.get('input[type="search"]').type(Cypress.env('studentName')).next().children('ul').click()
    cy.get('div[class="tab-content"]').children().next().children().find('tbody').last().find('strong').invoke('text').then(total => {
        pendingAmount = total.replace(/[₹,]|Total/g, '')
    })
    var recived_amount
    var amount
    if (parseInt(pendingAmount) > parseInt(Cypress.env('value'))) {
        amount = Cypress.env('value')
    } else if (parseInt(pendingAmount) < parseInt(Cypress.env('value'))) {
        recived_amount = parseInt(Cypress.env('value')) - parseInt(pendingAmount)
        amount = recived_amount.toString()
    } else {
        amount = Cypress.env('value')
    }
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').type(amount)
    cy.get('label:contains(Adjustment Amt )').should('be.visible').prev('input[type="checkbox"]').should('be.disabled').should('exist').should('not.be.checked')
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').parents('td').next().children('select').select('Cash')
    cy.get('div[class="tab-content"]').children().next().children().find('tbody tr').first().as('firstRow')
    cy.get('@firstRow').find('input[type="checkbox"]').check()
    //cy.get('div[class="tab-content"]').children().next().children().find('tbody').first().find('input[type="checkbox"]').check()
    //cy.get('td:contains(Tuition Fee July 2020 )').next().next().children('input[type="checkbox"]').check()
    cy.get('button:contains(Save)').should('be.enabled').should('exist').and('be.visible')
})
it('When user enter recived amount and select required option and click on save button,should redirected to the search text field in the TransactionsAdd page', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions/add"]').click()
    cy.get('input[type="search"]').type(Cypress.env('studentName')).next().children('ul').click()
    cy.get('div[class="tab-content"]').children().next().children().find('tbody').last().find('strong').invoke('text').then(total => {
        pendingAmount = total.replace(/[₹,]|Total/g, '')
    })
    var recived_amount
    var amount
    if (parseInt(pendingAmount) > parseInt(Cypress.env('value'))) {
        amount = Cypress.env('value')
    } else if (parseInt(pendingAmount) < parseInt(Cypress.env('value'))) {
        amount = Cypress.env('value')
        cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').type(amount)
        cy.get('label:contains(Adjustment Amt )').should('be.visible').prev('input[type="checkbox"]').check()
    } else {
        amount = Cypress.env('value')
    }
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').type(amount)
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').parents('td').next().children('select').select('Cash')
    cy.get('div[class="tab-content"]').children().next().children().find('tbody tr').first().as('firstRow')
    cy.get('@firstRow').find('input[type="checkbox"]').check()
    //cy.get('div[class="tab-content"]').children().next().children().find('tbody').first().find('input[type="checkbox"]').check()
    //cy.get('td:contains(Tuition Fee July 2020 )').next().next().children('input[type="checkbox"]').check()
    cy.get('button:contains(Save)').click()
    cy.url().should('include', '/fees/transactions/add')
})
it('When recived amount is more than total pending fee, if user not select Adjustment Amt then save should not be enabled', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions/add"]').click()
    cy.get('input[type="search"]').type(Cypress.env('studentName')).next().children('ul').click()
    cy.get('div[class="tab-content"]').children().next().children().find('tbody').last().find('strong').invoke('text').then(total => {
        pendingAmount = total.replace(/[₹,]|Total/g, '')
    })
    var recived_amount
    var amount
    if (parseInt(pendingAmount) > parseInt(Cypress.env('value'))) {
        recived_amount = parseInt(pendingAmount) + parseInt(Cypress.env('value'))
        amount = recived_amount.toString()
    } else if (parseInt(pendingAmount) < parseInt(Cypress.env('value'))) {
        amount = Cypress.env('value')
    } else {
        amount = Cypress.env('value')
    }
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').type(amount)
    cy.get('label:contains(Adjustment Amt )').should('be.visible').prev('input[type="checkbox"]').should('be.enabled').should('not.be.checked')
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').parents('td').next().children('select').select('Cash')
    cy.get('div[class="tab-content"]').children().next().children().find('tbody tr').first().as('firstRow')
    cy.get('@firstRow').find('input[type="checkbox"]').check()
   // cy.get('div[class="tab-content"]').children().next().children().find('tbody').first().find('input[type="checkbox"]').check()
   // cy.get('td:contains(Tuition Fee July 2020 )').next().next().children('input[type="checkbox"]').check()
    cy.get('button:contains(Save)').should('be.disabled').should('be.visible')
})
it('When user enter amount recived ,if not selected any of pending fees from avilable option then Save button should not enabled', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions/add"]').click()
    cy.url().should('include', 'transactions/add')
    cy.get('input[type="search"]').type(Cypress.env('studentName')).next().children('ul').click()
    const recived_amount = Cypress.env('value').toString()
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').type(recived_amount)
    cy.get('span:contains(Amount received)').parent().next().find('input[type="text"]').parents('td').next().children('select').select('Cash')
    cy.get('button:contains(Save)').should('be.disabled').should('exist').and('be.visible')
})
it('When user click on Fees paid tab ,paid fees reciept details should display', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions/add"]').click()
    cy.url().should('include', 'transactions/add')
    cy.get('input[type="search"]').type(Cypress.env('studentName')).next().children('ul').click()
    cy.get('tabset[class="tab-container"]').children('ul[class="nav nav-tabs"]').first().find('span:contains(Fees Paid)').click()
    cy.get('label:contains(Summary)').should('be.visible').prev('input[type="radio"]').should('be.checked').should('exist')
    cy.get('label:contains(Detail)').should('be.visible').prev('input[type="radio"]').should('not.be.checked').should('exist')
    cy.get('label:contains(Adj Fees)').should('be.visible').prev('input[type="radio"]').should('not.be.checked').should('exist')
})
it('When user click on datepicker, calender should dispaly', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/transactions/add"]').click()
    cy.url().should('include', 'transactions/add')
    cy.get('input[type="search"]').type(Cypress.env('studentName')).next().children('ul').click()
    cy.get('[name="date"]').click()
    cy.get('div[class="bs-calendar-container"]').should('be.visible')
})
it('when user click on Adjustment Balance link, should navigate to Adjustment Balance Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/fees/adjustmentBalanceReport"]').click()
    cy.url().should('contain', '/fees/adjustmentBalanceReport')
    cy.get('h3').should('contain.text', 'FeesAdjustment Balance Report')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('span:contains(Course : )').should('be.visible').next('select').select('PUC I PCME')
    cy.get('i[class="fa fa-print"]').click()
})*/
  it('when user click on Adjustment Balance link, should navigate to Adjustment Balance Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/adjustmentBalanceReport"]').click()
    cy.url().should('contain', '/fees/adjustmentBalanceReport')
    cy.get('h3').should('contain.text', 'FeesAdjustment Balance Report')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('span:contains(Course : )').should('be.visible').next('select').select('PUC I PCMB')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').click()
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Fees Structure link, should navigate to Fees Structure Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/feesStructureReport"]').click()
    cy.url().should('contain', '/feesStructureReport')
    cy.get('h3').should('contain.text', 'Fees Fees Structure Report')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').click()
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Fees Structure Coursewise link, should navigate to Fees Structure Coursewise  Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/coursewiseFeesStructureReport"]').click({ force: true })
    cy.url().should('contain', '/coursewiseFeesStructureReport')
    cy.get('h3').should('contain.text', 'FeesCoursewise Fees Structure Report')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Fees Fees Expected link, should navigate to Fees Expected Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/feesExpectedReport"]').click()
    cy.url().should('contain', '/feesExpectedReport')
    cy.get('h3').should('contain.text', 'Fees Fees Expected')
    cy.get('span:contains( Default (no date check) )').next().children('span[class="dropdown-down"]').click()
    cy.get('div:contains(Monthly)').prev('input[type="checkbox"]').check({ force: true })
    cy.get('span:contains(--- Select Month ---)').next().find('span[class="dropdown-down"]').click({ force: true })
    cy.get('div:contains(Jan 2023)').prev('input[type="checkbox"]').check({ force: true })
    cy.get('span:contains(--- Select Fees ---)').next().find('span[class="dropdown-down"]').should('exist')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').click()
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Defaulters List link, should navigate to Defaulters List Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/feesDefaultersListReport"]').click()
    cy.url().should('contain', '/feesDefaultersListReport')
    cy.get('h3').should('contain.text', 'Fees Defaulters List Report')
    cy.get('span:contains(Course : )').should('be.visible').next('select').should('exist').select('PUC I PCMB')
    cy.get('span:contains(As on :)').should('be.visible').next().children('input[name="reportFromDate"]').should('exist')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').click()
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Adjustment Transaction link, should navigate to Adjustment Transaction Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/adjustmentTransactionReport"]').click()
    cy.wait(2000)
    cy.url().should('contain', '/adjustmentTransactionReport')
    cy.get('h3').should('contain.text', 'Fees Adjustment Transaction Report')
    cy.get('span:contains(Course : )').should('be.visible').next('select').should('exist').select('PUC I PCMB')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').click()
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Advance Balance link, should navigate to Advance Balance Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/advanceBalanceReport"]').click()
    cy.wait(2000)
    cy.url().should('contain', '/advanceBalanceReport')
    cy.get('h3').should('contain.text', 'Fees Advance Balance Report')
    cy.get('span[class="dropdown-btn"]').should('exist')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').click()
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Fee Collection Datewise / Monthwise link, should navigate to Fee Collection Datewise / Monthwise page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/feesCollectedReport"]').click()
    cy.wait(2000)
    cy.url().should('contain', '/feesCollectedReport')
    cy.get('h3').should('contain.text', 'Fees Fee Collection Datewise / Monthwise')
    cy.get('span:contains(From Date :)').should('be.visible').next().children('input[name="reportFromDate"]').clear().type(Cypress.env('DateFrom'))
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Fees Paid After Academic Year link, should navigate to Fees Paid After Academic Year page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/feesPaidAfterAcadYearReport"]').click()
    cy.wait(2000)
    cy.url().should('contain', '/feesPaidAfterAcadYearReport')
    cy.get('h3').should('contain.text', 'Fees Fees Paid After Academic Year')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Fees Paid By TC Students link, should navigate to Fees Paid By TC Students report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/feesPaidByTCStudentsReport"]').click()
    cy.wait(2000)
    cy.url().should('contain', '/feesPaidByTCStudentsReport')
    cy.get('h3').should('contain.text', 'Fees Fees Paid By TC Students')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Fees Paid List link, should navigate to Fees Paid List Report Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/feesPaidReport"]').click()
    cy.url().should('contain', 'feesPaidReport')
    cy.get('h3').should('contain.text', 'Fees Fees Paid List Report')
    cy.get('span:contains( Default (no date check) )').next().children('span[class="dropdown-down"]').click()
    cy.get('div:contains(Monthly)').prev('input[type="checkbox"]').check({ force: true })
    cy.get('span:contains(--- Select Month ---)').next().find('span[class="dropdown-down"]').click({ force: true })
    cy.get('div:contains(Jan 2023)').prev('input[type="checkbox"]').check({ force: true })
    cy.get('span:contains(Course : )').should('be.visible').next('select').should('exist').select('PUC I PCMB')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Receipt Transaction link, should navigate to Receipt Transaction Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/feesReceiptTransactionReport"]').click()
    cy.url().should('contain', '/feesReceiptTransactionReport')
    cy.get('h3').should('contain.text', 'Fees Receipt Transaction Report')
    cy.get('span:contains( Default (no date check) )').next().children('span[class="dropdown-down"]').click()
    cy.get('div:contains(Monthly)').prev('input[type="checkbox"]').check({ force: true })
    cy.get('span:contains(--- Select Month ---)').next().find('span[class="dropdown-down"]').click({ force: true })
    cy.get('div:contains(Jan 2023)').prev('input[type="checkbox"]').check({ force: true })
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('when user click on Transaction History link, should navigate to Receipt Transaction History Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/transactionHistoryReport"]').click()
    cy.url().should('contain', '/transactionHistoryReport')
    cy.get('h3').should('contain.text', 'Fees Transaction History Report')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
    // cy.get('i[class="fa fa-print"]').click()
  })
  it('when user click on Student Transaction link, should navigate to Student Transaction History Report page and able to download report ', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/studentTransactionReport"]').click()
    cy.url().should('contain', '/fees/studentTransactionReport')
    cy.get('h3').should('contain.text', 'Fees Studentwise Transaction Report')
    cy.get('input[placeholder="search"]').should('exist').prev('i[class="fa fa-search"]').should('exist')
    cy.get('span:contains(Fees : )').should('be.visible').next('select').should('exist')
    cy.get('i[class="fa fa-print"]').should('exist').screenshot()
    cy.get('button[title="Download As PDF"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('Verify back button in Fees feature', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
    cy.get('a[href="/ctng4/fees/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees/manage')
    cy.get('button:contains(Add Fee)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })
  it('Verify back button in Transact feature', () => {
    cy.visit('/fees')
    cy.get('a[href="/ctng4/fees/transactions/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees/transactions/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
    cy.get('a[href="/ctng4/fees/transactions"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees/transactions')
    cy.get('a:contains(New Transaction)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees/transactions/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees/transactions')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/fees')
  })

  // Hr feature Tests

  it('should navigate to Hr page successfully ', () => {
    cy.visit('/hr')
    cy.url().should('include', '/hr')
    cy.get('i[title="Add HR"]').should('exist')
  })
  it('When user click on hr/add link,should navigate to staff/add page ', () => {
    cy.visit('/hr')
    cy.get('a[href="/ctng4/hr/staff/add"]').click()
    cy.url().should('include', 'staff/add')
    cy.get('input[placeholder="first  middle  last"]').should('exist')
    cy.get('select[name="gender"]').should('exist')
    cy.get('input[placeholder="Datepicker"]').should('exist')
    cy.get('select[name="staffType"]').should('exist')
    cy.get('input[type="email"]').should('exist')
    cy.get('input[type="text"]').should('exist')
  })
  it('When user click on hr/manage link,should navigate to staff/manage page ', () => {
    cy.visit('/hr')
    cy.get('a[href="/ctng4/hr/staff/manage"]').click()
    cy.url().should('include', '/hr/staff/manage')
    cy.get('a:contains(Add New Person)').should('exist')
    cy.get('thead').within(() => {
      cy.get('th').eq(0).should('have.text', '#')
      cy.get('th').eq(1).should('have.text', 'Profile')
      cy.get('th').eq(2).should('have.text', 'Gender')
      cy.get('th').eq(3).within(() => {
        cy.get('span').eq(0).within(() => { cy.get('a').should('have.text', 'Name') })
        cy.get('span').eq(1).should('have.text', 'Alias')
      })
      cy.get('th').eq(4).within(() => { cy.get('a').should('have.text', 'DOJ') })
      cy.get('th').eq(5).should('have.text', 'Staff Id')
      cy.get('th').eq(6).should('have.text', 'Designation')
      cy.get('th').eq(7).should('have.text', 'Role')
      cy.get('th').eq(9).should('have.text', 'Contact')
      cy.get('th').eq(10).should('have.text', 'Actions')
    })
  })
  it('When user click on Add New Person link in staff manage page,should navigate to staff/add  page ', () => {
    cy.visit('/hr')
    cy.get('a[href="/ctng4/hr/staff/manage"]').click()
    cy.get('a:contains(Add New Person)').click()
    cy.url().should('include', 'staff/add')
    cy.get('input[placeholder="first  middle  last"]').should('exist')
    cy.get('select[name="gender"]').should('exist')
    cy.get('input[placeholder="Datepicker"]').should('exist')
    cy.get('select[name="staffType"]').should('exist')
    cy.get('input[type="email"]').should('exist')
    cy.get('input[type="text"]').should('exist')
  })
  it('when user enter all valid details in all field in staff add page, and click on save button staff should get added', () => {
    cy.visit('/hr')
    cy.get('a[href="/ctng4/hr/staff/manage"]').click()
    cy.get('a:contains(Add New Person)').click()
    cy.get('input[placeholder="first  middle  last"]').type(Cypress.env('Name'))
    cy.get('select[name="gender"]').select(Cypress.env('Gender'))
    cy.get('input[placeholder="Datepicker"]').type(Cypress.env('DateFrom'))
    cy.get('select[name="staffType"]').select('NonTeaching')
    cy.get('input[type="email"]').type(Cypress.env('USERNAME'))
    cy.get('input[name="mobile"]').type(Cypress.env('Number'))
    cy.get('button:contains(Save)').click()
  })
  it('when user click on name of staff, should navigate to staff edit page', () => {
    cy.visit('/hr')
    cy.get('a[href="/ctng4/hr/staff/manage"]').click()
    // cy.contains('table tr', 'vinay vinay').click()
    cy.contains('a', 'vinay vinay').click()
    cy.url().should('include', '/hr/staff/edit')
    cy.get('div:contains(Identity )').children().children('button:contains(Update)').should('be.enabled').should('exist')
  })
  it('when user make changes, and click on update staff details should get updated', () => {
    cy.visit('/hr')
    cy.get('a[href="/ctng4/hr/staff/manage"]').click()
    // cy.contains('table tr', 'vinay vinay').click()
    cy.contains('a', 'vinay vinay').click()
    function randomIntFromInterval(min, max) { // min and max included 
      return Math.floor(Math.random() * (max - min + 1) + min)
    }
    const rndInt = randomIntFromInterval(0, 99)
    const id = rndInt.toString()
    cy.get('input[name="staffId"]').type(id)
    cy.get('div:contains(Staff Id )').children().children('button:contains(Update)').should('be.enabled').should('exist').click()
  })
  it('when user click on edit icon ,user should navigate to profile page', () => {
    cy.visit('/hr')
    cy.get('a[href="/ctng4/hr/staff/manage"]').click()
    // cy.contains('table tr', 'vinay vinay').click()
    cy.contains('table tr', 'vinay vinay').find('i[class="fa fa-pencil-square-o"]').click()
    cy.url().should('include', '/hr/staff/manage/profile')
  })
  it('when user click on disable link ,selected staff should get deleted', () => {
    cy.visit('/hr')
    cy.get('a[href="/ctng4/hr/staff/manage"]').click()
    cy.contains('table tr', 'vinay vinay').find('td:last-child a').click()
    cy.get('a:contains(Add New Person)').click()
    cy.get('input[placeholder="first  middle  last"]').type(Cypress.env('Name'))
    cy.get('select[name="gender"]').select(Cypress.env('Gender'))
    cy.get('input[placeholder="Datepicker"]').type(Cypress.env('DateFrom'))
    cy.get('select[name="staffType"]').select('NonTeaching')
    cy.get('input[type="email"]').type(Cypress.env('USERNAME'))
    cy.get('input[name="mobile"]').type(Cypress.env('Number'))
    cy.get('button:contains(Save)').click()
    cy.get('a:contains(HR)').click()
    cy.contains('table tr', 'vinay vinay').find('td:last-child a').click({ multiple: true })
  })
  it('Verify back button in HR feature', () => {
    cy.visit('/hr')
    cy.get('a[href="/ctng4/hr/staff/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/manage')
    cy.get('a:contains(Add New Person)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/manage')
    cy.get('a:contains(Name)').parents('thead').next('tbody').children('tr').first().find('a:contains(vijay vijay)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/edit')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr')
    cy.get('a[href="/ctng4/hr/staff/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr')
  })

  // Library feature Tests

  it('When user click on library link,should navigate to library page successfully', () => {
    cy.visit('/library')
    cy.url().should('include', '/library')
    cy.contains('Reports').should('be.visible')
    cy.contains('Circulation').should('be.visible')
    cy.get('a:contains(Materials under circulation report )').should('exist')
    cy.get('a:contains(Over-due report )').should('exist')
    cy.get('a:contains(Age analysis )').should('exist')
    cy.get('a:contains(Valuation report )').should('exist')
    cy.get('a:contains(Late fees report )').should('exist')
    cy.get('a:contains(Books without ISBN )').should('exist')
    cy.get('a:contains(Books without synopsis )').should('exist')
    cy.get('a:contains(Books without cover photo )').should('exist')
    cy.get('a:contains(Unverified stock )').should('exist')
  })
  it('When user click on Catalog/Manage link,should navigate to manage successfully', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/manage"]').click({ multiple: true })
    cy.url().should('include', '/manage')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.contains('Add New Library Material').should('be.visible')
    cy.get('a[href="/ctng4/library/add"]').should('exist')
  })
  it('When user click on Catalog/add link,should navigate to catlog/add page successfully', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/add"]').click()
    cy.url().should('include', '/add')
    cy.contains('Library').should('be.visible')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('exist')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('contain', 'Save')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('be.disabled')
    cy.get('input[placeholder="Tracking Id"]').should('exist')
    cy.get('input[placeholder="Title"]').should('exist')
    cy.get('input[placeholder="Author"]').should('exist')
    cy.get('input[placeholder="Publisher"]').should('exist')
    cy.get('input[placeholder="ISBN"]').should('exist')
    cy.get('input[placeholder="Location"]').should('exist')
  })
  it('When user enter valid inputs in textfield of catlog/add , save button should get enable and user should perform click action', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/add"]').click()
    cy.url().should('include', '/add')
    cy.contains('Library').should('be.visible')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('be.disabled')
    cy.get('input[placeholder="Tracking Id"]').type(Cypress.env('TRACKING ID'))
    cy.get('input[placeholder="Title"]').type(Cypress.env('TITLE'))
    cy.get('input[placeholder="Author"]').type(Cypress.env('AUTHOR'))
    cy.get('input[placeholder="Publisher"]').type(Cypress.env('PUBLISHER'))
    cy.get('input[placeholder="ISBN"]').type(Cypress.env('ISBN'))
    cy.get('input[placeholder="Location"]').type(Cypress.env('LOCATION'))
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('be.enabled')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').click()
  })/*
it('user should able to see details of added material by entering tracking id in textfield of Catalog/Manage page', () => {
  cy.visit('/library')
  cy.get('a[href="/ctng4/library/manage"]').click()
  cy.get('input[placeholder="Search"]').type(Cypress.env('TRACKING ID')).parent().next().children('i[class="fa fa-search"]').click()
  cy.get('thead').next().children('tr').first().find('a').parent().next().next('td').should('have.text', Cypress.env('AUTHOR')).should('be.visible').should('exist')
})
it('When user click on trackin id, user should navigate to edit page', () => {
  cy.visit('/library')
  cy.get('a[href="/ctng4/library/manage"]').click()
  cy.get('input[placeholder="Search"]').type(Cypress.env('TRACKING ID')).parent().next().children('i[class="fa fa-search"]').click()
  cy.get('thead').next().children('tr').first().find('a').click()
  cy.url().should('include','/library/manage/edit')
  cy.get('div:contains(Info )').should('exist').find('button:contains(Update)').should('exist').should('be.disabled')
  cy.get('input[placeholder="Title"]').should('exist')
  cy.get('input[placeholder="Author"]').should('exist')
  cy.get('input[placeholder="Publisher"]').should('exist')
  cy.get('input[placeholder="ISBN"]').should('exist')
  cy.get('input[placeholder="Location"]').should('exist')
})*/
  it('user click on circulation link , should navigate to Issue / Return page ', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/circulation"]').click()
    cy.url().should('include', '/library/circulation')
    cy.get('input[placeholder="Search by Tracking Id or Student Id or Staff Id"]').should('exist')
    cy.get('button:contains(Reset)').should('be.enabled').should('exist')
  })
  it('user click on  stockVerification link , should navigate to stockVerification page ', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/stockVerification"]').click()
    cy.url().should('include', '/library/stockVerification')
    cy.get('input[placeholder="Search by Tracking Id"]').should('exist')
    cy.get('h3:contains("Stock Verification")').should('be.visible')
    cy.get('input[placeholder="Search by Tracking Id"]').should('exist')
    cy.get('thead tr th').should(($th) => expect($th).to.have.length(8).and.to.contain('Tracking Id').and.to.contain('Title').and.to.contain('Author').and.to.contain('Publisher').and.to.contain('Details').and.to.contain('Tags').and.to.contain('Value').and.to.contain('Status'));
  })
  it('When user click on Add New Library Material, user should navigate to library/add page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/add"]').click()
    cy.url().should('include', '/add')
    cy.contains('Library').should('be.visible')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('be.disabled')
    cy.get('input[placeholder="Tracking Id"]').should('exist')
    cy.get('input[placeholder="Title"]').should('exist')
    cy.get('input[placeholder="Author"]').should('exist')
    cy.get('input[placeholder="Publisher"]').should('exist')
    cy.get('input[placeholder="ISBN"]').should('exist')
    cy.get('input[placeholder="Location"]').should('exist')
    cy.get('button[class="btn btn-xs btn-success pull-right"]').should('be.visible').should('be.disabled')
  })
  it('When user click on Print Barcodes,should navigate to Print Barcodes page  ', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/barcode"]').click()
    cy.url().should('include', '/library/barcode')
    cy.get('strong:contains(Customize)').parent().next().children().find('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('label[for="barcodeRange"]').should("have.text", "Tracking Id(s) to print barcodes").get('label[for="barcodeRange"] p').should("have.text", "print barcodes")
    cy.get('textarea[name="barcodeRange"]').should('exist')
    cy.get('span:contains(Add comma separated tracking ids for which barcodes have to be printed. Ex: 15,18 )').should('be.visible')
    cy.get('span:contains(Add the range of tracking ids for which barcodes have to be printed. Ex: 1-10, 20-25)').should('be.visible')
    cy.get('label:contains(Barcode position)').should('be.visible').next().children('input[name="position"]').should('exist')
    cy.get('label:contains(No. of barcode prints)').should('be.visible').next().children('input[name="printNo"').should('exist')
    cy.get('label:contains(Margin)').should('be.visible').next().children('input[name="marginTop"]').should('exist')
  })
  it('When user click on Summary report ,should navigate to summaryReport page  ', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/summaryReport"]').click()
    cy.url().should('include', '/library/summaryReport')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
  })
  it('When user click on Materials under circulation report  link, should navigate to Materials under circulation report page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/circulationReport"]').click()
    cy.url().should('include', '/library/circulationReport')
    cy.get('h4').should('contain.text', 'Library Material Under Circulation Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('When user click on Over-due reportlink, should navigate to Over-duereport page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/overDueReport"]').click()
    cy.url().should('include', '/library/overDueReport')
    cy.get('h4').should('contain.text', 'LibraryOver Due Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('When user click on Materials under maintenance report link, should navigate toMaterials under maintenance report page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/maintenanceReport"]').click()
    cy.url().should('include', '/library/maintenanceReport')
    cy.get('h4').should('contain.text', 'Library Material Under Maintenance Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('When user click on Age analysis report link, should navigate to Age analysis report page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/ageAnalysisReport"]').click()
    cy.url().should('include', '/library/ageAnalysisReport')
    cy.get('h4').should('contain.text', 'Library Age Analysis Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('When user click on Valuation report link, should navigate to Valuation report page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/valuationReport"]').click()
    cy.url().should('include', '/library/valuationReport')
    cy.get('h4').should('contain.text', 'LibraryValuation Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('When user click on Late fees report link, should navigate to Late fees report page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/lateFeesReport"]').click()
    cy.url().should('include', '/library/lateFeesReport')
    cy.get('h4').should('contain.text', 'Library Fees Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('When user click on Books without ISBN link, should navigate to Books without ISBN report page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/booksWithoutISBNReport"]').click()
    cy.url().should('include', '/library/booksWithoutISBNReport')
    cy.get('h4').should('contain.text', 'Library Books Without ISBN Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('When user click on Books without synopsis link, should navigate to Books without synopsis report page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/booksWithoutSynopsisReport"]').click()
    cy.url().should('include', '/library/booksWithoutSynopsisReport')
    cy.get('h4').should('contain.text', 'Library Books Without Synopsis Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('When user click on Books without cover photo link, should navigate to Books without cover photo report page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/booksWithoutCoverPhotoReport"]').click()
    cy.url().should('include', '/library/booksWithoutCoverPhotoReport')
    cy.get('h4').should('contain.text', 'Library Books Without Cover Photo Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('When user click on Unverified stock link, should navigate to Unverified stock report page', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/unverifiedStockReport"]').click()
    cy.url().should('include', '/library/unverifiedStockReport')
    cy.get('h4').should('contain.text', 'Library Unverified Stock Report')
    cy.get('button[title="Download As PDF"]').should('be.enabled')
    cy.get('button[title="Print"]').should('be.enabled')
    cy.contains('Report Header').should('be.visible')
    cy.contains('Page Header').should('be.visible')
    cy.contains('Page Header On Each Page').should('be.visible')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('Verify back button in catlog feature', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/library/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
    cy.get('a[href="/ctng4/library/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/library/manage')
    cy.get('a:contains(Add New Library Material)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/library/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
    cy.get('a[href="/ctng4/library/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/library/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('Verify back button in circulation feature', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/circulation"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/library/circulation')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })
  it('Verify back button in stock Verification feature', () => {
    cy.visit('/library')
    cy.get('a[href="/ctng4/library/stockVerification"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/library/stockVerification')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/library')
  })

  // LMS feature Tests

  it('should navigate to lms page successfully ', () => {
    cy.visit('/lms')
    cy.url().should('include', '/lms')
    cy.get('a[href="/ctng4/lms/curriculum/add"]').should('exist')
    cy.get('a[href="/ctng4/lms/qa/add"]').should('exist')
    cy.get('a[href="/ctng4/lms/assessment/add"]').should('exist')
    cy.get('a[href="/ctng4/lms/assessment/taking"]').should('exist')
    cy.get('a[href="/ctng4/lms/curriculum/study"]').should('exist')
  })
  it('when user click on content manage link,should navigate to curriculum page successfully ', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/curriculum"]').click()
    cy.url().should('include', '/curriculum')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('a:contains(Add New Content)').should('be.visible')
  })
  it('when user click on Add New Content link,should navigate to curriculum/add page successfully ', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/curriculum/add"]').click()
    cy.url().should('include', '/curriculum/add')
  })
  it('when user click on QA manage link,should navigate to QA manage page successfully ', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/qa"]').click()
    cy.url().should('include', '/lms/qa')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('button:contains(Add Question)').should('be.visible').should('exist')
  })
  it('when user click on Add Question button,should navigate to QA add page successfully ', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/qa"]').click()
    cy.get('button:contains(Add Question)').click()
    cy.url().should('include', '/lms/qa/add')
    cy.get('h3').children().find('a:contains(LMS)').should('be.visible').next().siblings('a:contains(QA)').should('be.visible').next().siblings('strong:contains(Add)').should('be.visible')
    cy.get('button:contains(Save)').should('exist')
    cy.contains('label', 'Bulk').siblings('input[type="checkbox"]').should('not.be.checked')
    cy.get('div[class="panel-heading"]').should('exist')
  })
  it('when user click on QA add link,should navigate to QA add page successfully ', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/qa/add"]').click()
    cy.url().should('include', '/lms/qa/add')
    cy.get('h3').children().find('a:contains(LMS)').should('be.visible').next().siblings('a:contains(QA)').should('be.visible').next().siblings('strong:contains(Add)').should('be.visible')
    cy.get('button:contains(Save)').should('exist')
    cy.contains('label', 'Bulk').siblings('input[type="checkbox"]').should('not.be.checked')
    cy.get('div[class="panel-heading"]').should('exist')
  })
  it('when user click on Question tag,User is navigated to Add Questions page on click over Questions tags ,user can add and create tags with respect to questions', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/qa/add"]').click()
    cy.url().should('include', '/lms/qa/add')
    cy.get('h3').children().find('a:contains(LMS)').should('be.visible').next().siblings('a:contains(QA)').should('be.visible').next().siblings('strong:contains(Add)').should('be.visible')
    cy.get('button:contains(Save)').should('exist')
    cy.get('i[class="fa fa-tags"]').click()
    cy.get('input[placeholder="search"]').should('exist')
    cy.get('i[class="fa fa-plus"]').should('exist')
    //cy.get('a:contains(biology)').parents('label').parent().children('input(type="checkbox")').should('exist')
    cy.contains('label', 'biochemistry').siblings('input[type="checkbox"]').should('exist')
    // cy.get('i[class="fa fa-tags"]').click()
    // cy.get('div(class="label label-info")').should('be.visible')
  })
  it('On completely adding the question the user on clicking on add the question is displayed on QA Manage ', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/qa/add"]').click({ force: true })
    cy.get('label:contains(Answer Type)').siblings().children().find('label:contains(Text)').should('be.visible').prev('input[value="Text"]').should('exist').parent().siblings().find('label:contains(MCQ)').should('be.visible').prev('input[value="ManyOf"]').should('exist')
    function getRandomItem(arr) {
      const randomIndex = Math.floor(Math.random() * arr.length);
      const item = arr[randomIndex];
      return item;
    }
    const array = ['What was the real name of Mumtaz Mahal?', 'Name the only President to have been elected for two consecutive terms?',
      'The Gandhi - Irwin pact was signed in the year.',
      'The name of the first bank established in India was.',
      ' Who served as the first Deputy Prime Minister of independent India ?',
      'The first Governor-General of India was?'];
    const result = getRandomItem(array);
    console.log(result)
    cy.get('div[class="ace_line"]').click({ force: true })
    const string = getRandomItem(array)
    cy.get('textarea[class="ace_text-input"').type(string, { force: true })
    cy.contains('label', 'indian_history').siblings('input[type="checkbox"]').click({ force: true })
    cy.get('button[class="btn btn-sm btn-success"]').click({ force: true })
    cy.url().should('include', 'lms/qa')
  })
  it('when user click on assement add link, User is navigated to Assessment add page', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/assessment/add"]').click()
    cy.url().should('include', '/lms/assessment/add')
    cy.contains('LMS').should('exist')
    cy.contains('Assessment').should('exist')
    cy.contains('Add').should('exist')
    cy.get('button:contains(Save)').should('be.disabled').should('exist')
  })/*
it('when user click on name of Assessment  link, User is navigated to LMS-Assessment edit page', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/assessment/manage"]').click()
    cy.contains('td', 'ABC').siblings('td').contains('Unit test').click()
    cy.url().should('include', '/lms/assessment/edit')
    cy.contains('LMS').should('exist')
    cy.contains('Assessment').should('exist')
    cy.contains('Edit').should('exist')
    cy.get('button:contains(Update)').should('exist')
})
it('User is navigated on QA-Assessment edit should drage the questions published on workspace', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/assessment/manage"]').click()
    cy.contains('td', 'ABC').siblings('td').contains('Unit test').click()
    cy.get('input[placeholder="Search"]').type('what is your name?')
    cy.get('input[placeholder="Search"]').parent().siblings().children('i[class="fa fa-search"]').click()
    //cy.get('i[class="fa fa-search"]').click({ multiple: true })
    cy.contains('what is your name?').parents('.list-group-item').find('.fa.fa-exchange').click();
})
it('User should drage the questions published on LMS-Manage page preview the questions dragged', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/assessment/manage"]').click()
    cy.contains('td', 'ABC').siblings('td').contains('Unit test').click()
    cy.get('input[placeholder="Search"]').type('what is your name?')
    cy.get('input[placeholder="Search"]').parent().siblings().children('i[class="fa fa-search"]').click()
    //cy.get('i[class="fa fa-search"]').click({ multiple: true })
    cy.contains('what is your name?').parents('.list-group-item').find('.fa.fa-exchange').click();
    cy.get('a:contains(Preview)').click()
})
it('User click on assement manage page,User is navigated to Assessment Manage page ', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/assessment/manage"]').click()
    cy.get('h3').children().find('a:contains(LMS)').should('be.visible').next().siblings('strong:contains(Assessment)').should('be.visible').next().siblings('strong:contains(Manage)').should('be.visible')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('a:contains(Add New Assessment)').should('be.visible')
    cy.get('thead tr').should('contain', 'Description').and('contain', 'Subject').and('contain', 'Duration (mins)').and('contain', 'Date').and('contain', 'Tags').and('contain', 'Actions');
})*/
  it('User click on Add New Assessment ,User is navigated to Assessment add page ', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/assessment/manage"]').click()
    cy.get('a:contains(Add New Assessment)').click()
    cy.contains('LMS').should('exist')
    cy.contains('Assessment').should('exist')
    cy.contains('Add').should('exist')
    cy.get('button:contains(Save)').should('be.disabled').should('exist')
    cy.get('div[class="panel-heading"]').children('span:contains(Assessment)').should('be.visible').next().find('input[type="checkbox"]').should('exist').parent().next().children('label:contains(Tags)').should('be.visible').next().find('button[class="dropdown-toggle"]').should('exist')
  })/*
it('User should drage the questions published on LMS-Manage page preview the questions dragged', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/assessment/manage"]').click()
    cy.contains('td', 'ABC').siblings('td').contains('Unit test').click()
    cy.get('input[placeholder="Search"]').type('what is your name?')
    cy.get('input[placeholder="Search"]').parent().siblings().children('i[class="fa fa-search"]').click()
    //cy.get('i[class="fa fa-search"]').click({ multiple: true })
    cy.contains('what is your name?').parents('.list-group-item').find('.fa.fa-exchange').click();
    cy.get('a:contains(Preview)').click()
})*/
  it('Verify back button in content feature', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/curriculum"]').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/curriculum')
    cy.click_Back_Button({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/lms')
  })
  it('Verify back button in QA feature', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/qa/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/qa/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/qa')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms')
    cy.get('a[href="/ctng4/lms/qa"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/qa')
    cy.get('button:contains(Add Question)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/qa/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/qa')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms')
  })
  it('Verify back button in Assessment Setup feature', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/assessment/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/assessment/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms')
    cy.get('a[href="/ctng4/lms/assessment/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/assessment/manage')
    cy.get('a:contains(Add New Assessment)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/assessment/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms')
    cy.get('a[href="/ctng4/lms/assessment/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/assessment/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms')
  })
  it('Verify back button in Assessment feature', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/assessment/taking"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/assessment/taking')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms')
  })
  it('Verify back button in Study feature', () => {
    cy.visit('/lms')
    cy.get('a[href="/ctng4/lms/curriculum/study"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms/curriculum/study')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/lms')
  })

  // Receipt feature Tests

  it('when user click on receipts link,should navigate to receipts page successfully ', () => {
    cy.visit('/receipts')
    cy.url().should('include', '/receipts')
    cy.contains('Monthwise Receipt Collection').should('be.visible')
    cy.get('a[href="/ctng4/receipts/detailedReport"]').should('exist')
    cy.get('a[href="/ctng4/receipts/revenueSharingReport"]').should('exist')
    cy.get('a[href="/ctng4/receipts/receiptsSummaryReport"]').should('exist')
  })
  it('when user click on receipts add should navigate to receipts/add page successfully ', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/add"]').click()
    cy.url().should('include', '/receipts/add')
    cy.get('div.col-md-4').should('exist').contains('Receipt Type : ').siblings('span').should('contain', 'Regular').should('contain', 'Donation').find('input[value="Regular"]').should('exist').should('be.checked').next().should('exist').should('not.be.checked').check().should('be.checked')
    cy.get('div.col-md-4').should('exist').contains('Customer Type : ').siblings('span').should('contain', 'Regular').should('contain', ' Student ').find('input[value="Regular"]').should('exist').should('be.checked').next().should('exist').should('not.be.checked').check().should('be.checked')
    cy.get('div.col-md-4').find('input[value="Regular"]').check()
    cy.get('label[for="receiptDate"]').should('be.visible') // verify that it's visible
    cy.get('input[name="receiptDate"]').should('be.visible').click() // click on the element
    cy.get('.bs-datepicker-container').should('be.visible')
    cy.get('input[name="custName"]').should('exist')
    cy.get('textarea[name="custAddress"]').should('exist')
    cy.get('textarea[name="custContact"]').should('exist')
    cy.get('input[type="checkbox"]').should('be.visible')
    cy.get('span').contains('Revenue Sharing').should('be.visible')
  })
  it('when user click on Receipt search should navigate to Receipt manage page successfully ', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/manage"]').click()
    cy.url().should('include', 'receipts/manage')
    cy.get('input[placeholder="Search by: name, receipt number or date (yyyy-mm-dd)"]').should('exist')
    cy.get('a:contains(Add New Receipt)').should('exist')
    cy.get('table[class="table table-bordered table-striped"]').children('thead').children('tr').each((index, element) => {
      const expectedHeader = ['Date', 'Receipt No', 'Issued To', 'Amount', 'Payment Mode', 'Actions']
      expect(element.textContent).to.equal(expectedHeader[index])
    })
  })
  it('when user click on Add New Receipt, should navigate to receipts/add page successfully ', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/manage"]').click()
    cy.get('a:contains(Add New Receipt)').click()
    cy.url().should('include', '/receipts/add')
    cy.get('div.col-md-4').should('exist').contains('Receipt Type : ').siblings('span').should('contain', 'Regular').should('contain', 'Donation').find('input[value="Regular"]').should('exist').should('be.checked').next().should('exist').should('not.be.checked').check().should('be.checked')
    cy.get('div.col-md-4').should('exist').contains('Customer Type : ').siblings('span').should('contain', 'Regular').should('contain', ' Student ').find('input[value="Regular"]').should('exist').should('be.checked').next().should('exist').should('not.be.checked').check().should('be.checked')
    cy.get('div.col-md-4').find('input[value="Regular"]').check()
    cy.get('label[for="receiptDate"]').should('be.visible')
    cy.get('input[name="receiptDate"]').should('be.visible').click()
    cy.get('.bs-datepicker-container').should('be.visible')
    cy.get('input[name="custName"]').should('exist')
    cy.get('textarea[name="custAddress"]').should('exist')
    cy.get('textarea[name="custContact"]').should('exist')
    cy.get('input[type="checkbox"]').should('be.visible')
    cy.get('span').contains('Revenue Sharing').should('be.visible')
  })
  it('when user click on print icon,user should be dircted to print page', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/manage"]').click()
    cy.url().should('include', 'receipts/manage')
    cy.contains('tr td', Cypress.env('Recepiet')).parent().find('td.text-center:first-of-type span[title="Print"] a').should('be.visible')
  })
  it('when user click on Cancel Receipt icon, selected receipt should get disabled', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/manage"]').click()
    cy.url().should('include', 'receipts/manage')
    cy.get('input[type="search"]').type(Cypress.env('Recepiet')).parent().next().children('i[class="fa fa-search"]').click()
    cy.contains('tr td', Cypress.env('Recepiet')).parent().find('span[title="Cancel Receipt"]').click()
    cy.contains('tr td', Cypress.env('Recepiet')).parent().find('span[title="Enable Receipt"]').click()
  })
  it('when user enter all valid details in textfield Generate button should get enabled and when click on it, Recipt should display with details ', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/add"]').click()
    cy.get('input[name="custName"]').type(Cypress.env('custName'))
    cy.get('textarea[name="custAddress"]').type(Cypress.env('custAddress'))
    cy.get('textarea[name="custContact"]').type(Cypress.env('custContact'))
    cy.get('a[style="cursor:pointer"]').click()
    cy.get('input[name="particular"]').type('Exam Fee')
    cy.get('input[name="amount"]').type('1500')
    cy.get('button:contains(Save)').click()
    cy.get('button:contains(Generate)').click()
    cy.contains('div.panel-heading', 'Receipt').should('be.visible')
    cy.get('a:contains(Print)').should('be.visible')
  })
  it('when user select  Donation ,  Donation option should get selected', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/add"]').click()
    cy.get('input[value="Donation"]').check()
    cy.get('label[for="receiptDate"]').should('be.visible')
    cy.get('input[name="receiptDate"]').should('be.visible').click()
    cy.get('.bs-datepicker-container').should('be.visible')
    cy.get('input[name="custName"]').should('exist')
    cy.get('textarea[name="custAddress"]').should('exist')
    cy.get('textarea[name="custContact"]').should('exist')
    cy.get('input[type="checkbox"]').should('be.visible')
    cy.get('span').contains('80G Exemption').should('be.visible')
  })
  it('when user select Student,Student option should get selected', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/add"]').click()
    //cy.get('div.col-md-4').find('input[value=" Student "]').check()
    cy.get('input[value="Student"]').check()
    cy.get('label[for="receiptDate"]').should('be.visible')
    cy.get('input[name="receiptDate"]').should('be.visible').click()
    cy.get('.bs-datepicker-container').should('be.visible')
    cy.get('input[name="custName"]').should('exist')
    cy.get('textarea[name="custAddress"]').should('exist')
    cy.get('textarea[name="custContact"]').should('exist')
    cy.get('input[type="checkbox"]').should('be.visible')
    cy.get('span').contains('Revenue Sharing').should('be.visible')
    cy.get('input[placeholder="Class"]').should('exist')
    cy.get('input[placeholder="Section"]').should('exist')
  })
  it('When user click on receipt number,should navigate to edit page', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/manage"]').click()
    cy.get('input[type="search"]').type(Cypress.env('Recepiet')).parent().next().children('i[class="fa fa-search"]').click()
    cy.contains('tr td', Cypress.env('Recepiet')).click()
    cy.url().should('include', '/receipts/edit')
    cy.get('a:contains(Receipts)').next().next('a').should('have.text', Cypress.env('Recepiet')).should('be.visible')
    cy.get('div:contains(Receipt )').should('be.visible').children().children('button:contains(Update)').should('be.visible').should('exist')
    cy.get('label:contains(Receipt Type : )').parent().siblings('span').should('contain', 'Regular').should('contain', 'Donation').find('input[value="Regular"]').should('exist').next().should('exist').should('not.be.checked')
    cy.get('label[for="receiptDate"]').should('be.visible')
    cy.get('input[name="receiptDate"]').should('be.visible').click()
    cy.get('.bs-datepicker-container').should('be.visible')
    cy.get('input[name="custName"]').should('exist')
    cy.get('textarea[name="custAddress"]').should('exist')
    cy.get('textarea[name="custContact"]').should('exist')
    cy.get('input[type="checkbox"]').should('be.visible')
    cy.get('span').contains('Revenue Sharing').should('be.visible')
    cy.get('div:contains(Payment Details )').should('be.visible').children().children('button:contains(Update)').should('be.visible').should('exist')
    cy.get('strong:contains(Payment Mode)').should('be.visible').parents('td').siblings().children('span').within(() => {
      cy.get('span:contains(Cash)').should('be.visible').prev('input[type="radio"]').should('exist')
      cy.get('span:contains(Cheque)').should('be.visible').prev('input[type="radio"]').should('exist')
      cy.get('span:contains(DD)').should('be.visible').prev('input[type="radio"]').should('exist')
      cy.get('span:contains(Netbanking)').should('be.visible').prev('input[type="radio"]').should('exist')
    })
  })
  it('when user click on Detailed report link should navigate to detailedReport page', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/detailedReport"]').click({ force: true })
    cy.url().should('include', '/receipts/detailedReport')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('span:contains(Include Order Items)').should('be.visible').prev('input[type="checkbox"]').should('exist')
    cy.get('span:contains(Include Customer Address)').should('be.visible').prev('input[type="checkbox"]').should('exist')
    cy.get('label:contains(Range : )').next().children('select').should('be.visible').find('option').should('have.length', 5)
      .then((options) => {
        const optionValues = ['Daily', 'Monthly', 'Quarterly', 'Annual', 'Custom']
        options.each((i, option) => {
          expect(option.text).to.equal(optionValues[i])
        })
      })
    cy.get('span:contains(Date :)').should('be.visible').next().children('input[name="reportDailyDate"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts')
  })
  it('when user click on Revenue Sharing Report link should navigate to revenueSharingReport page', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/revenueSharingReport"]').click({ force: true })
    cy.url().should('include', '/receipts/revenueSharingReport')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('label:contains(Range : )').should('be.visible').next().children('select').should('be.visible').find('option').should('have.length', 2)
      .then((options) => {
        const optionValues = ['Monthly', 'Annual']
        options.each((i, option) => {
          expect(option.text).to.equal(optionValues[i])
        })
      })
    cy.get('label:contains(Grouping : )').should('be.visible').next().children('select[name="grouping"]').should('be.visible').find('option').should('have.length', 2)
      .then((options) => {
        const optionValues = ['person', 'class']
        options.each((i, option) => {
          expect(option.value).to.equal(optionValues[i])
        })
      })
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts')
  })
  it('When user select monthly option Revenue Sharing Report page, dropdown containing month options should dispaly', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/revenueSharingReport"]').click({ force: true })
    cy.url().should('include', '/receipts/revenueSharingReport')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('label:contains(Range : )').should('be.visible').next().siblings().children('select').should('be.visible').find('option').should('have.length', 12)
      .then((options) => {
        const optionValues = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
        options.each((i, option) => {
          expect(option.text).to.equal(optionValues[i])
        })
      })
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts')
  })
  it('when user click on Summary Report link should navigate to receiptsSummaryReport page', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/receiptsSummaryReport"]').click({ force: true })
    cy.url().should('include', '/receipts/receiptsSummaryReport')
    cy.get('strong:contains(Customize)').parent().next().children().children('button[title="Download As PDF"]').should('exist').should('be.visible').next('button[title="Print"]').should('exist').should('be.visible').should('be.enabled')
    cy.get('label:contains(Range : )').should('be.visible').next().children('select').should('be.visible').find('option').should('have.length', 5)
      .then((options) => {
        const optionValues = ['Daily', 'Monthly', 'Quarterly', 'Annual', 'Custom']
        options.each((i, option) => {
          expect(option.text).to.equal(optionValues[i])
        })
      })
    cy.get('span:contains(Date :)').should('be.visible').next().children('input[name="reportDailyDate"]').should('exist')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts')
  })
  it('Verify back button in Recipts feature', () => {
    cy.visit('/receipts')
    cy.get('a[href="/ctng4/receipts/add"]').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts')
    cy.get('a[href="/receipts/manage"]').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts/manage')
    cy.get('a:contains(Add New Receipt)').click({ force: true })
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts/manage')
    cy.get('th:contains(Receipt No)').parents('thead').next('tbody').children('tr').first().find('a:contains(126/BTLCOL)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts/edit')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/receipts')
  })

  // Timetable feature Tests

  it('should navigate to ttPlannerpage successfully ', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.get('span').children('a:contains(Help)').should('be.visible')
    cy.get('span').children('a:contains(Reset)').should('be.visible')
    cy.get('span').children('button:contains( Export )').should('exist')
    cy.get('div[class="column2"]').children('tt-input').find('table').children('tbody').children('tr').within(() => { cy.get('td:contains( Weekly pattern )').find('i[class="fa fa-question-circle"]').parents('td').find('label:contains(8 - 5)').prev('input[value="85"]').should('be.checked').should('be.visible') })
    cy.get('div[class="column2"]').children('tt-input').find('table').children('tbody').children('tr').within(() => { cy.get('td:contains( Weekly pattern )').next().find('a:contains(Sections :)').should('be.visible').parent().siblings().find('input[name="sectionsCount"]').should('exist') })
    cy.get('div[class="column2"]').children('tt-input').find('table').children('tbody').children('tr').within(() => { cy.get('td:contains( Weekly pattern )').next().next().find('a:contains(Subjects :)').should('be.visible').parent().siblings().find('input[name="subjectCount"]').should('exist') })
    cy.get('div[class="column2"]').children('tt-input').find('table').children('tbody').children('tr').within(() => { cy.get('td:contains( Weekly pattern )').next().siblings().next().find('a:contains(Staff :)').should('be.visible').parent().siblings().find('input[name="staffCount"]').should('exist').parent().next().find('i[title="additional staff"]').should('exist').next('input[name="additionalStaffCount"]').should('exist') })
  })
  it('When user click on Help link, Instruction pop should dispaly', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.get('span').children('a:contains(Help)').click()
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('h2:contains(Instructions)').should('be.visible')
    cy.screenshot()
    cy.get('button').children('span:contains(×)').click()
  })
  it('When user click on Reset link, Reset pop should dispaly', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.get('span').children('a:contains(Reset)').click()
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('h3:contains(Reset)').should('be.visible')
    cy.get('h4').should('contain.text', 'Clicking on Yes would clear all the data entered. Would you like to continue ?')
    cy.screenshot()
    cy.get('button:contains(No)').should('exist')
    cy.get('button:contains(Yes)').should('exist')
    cy.get('button:contains(No)').click()
  })
  it('When user click on Export button, Time table should get download ', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.get('span').children('button:contains( Export )').click()
    cy.verifyDownload('.csv', { contains: true })
  })
  it('When user click on Sample data link, Sample titable should dispaly ', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.get('span:contains(Section-Staff-Subject (upload))').click()
    cy.get('a:contains(Sample data)').click()
    cy.screenshot()
  })
  it('When user click on Policy , list of Rules should display ', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.get('span:contains(Policy)').click()
    cy.get('thead').children('tr').children('th:contains(Rules)').should('be.visible')
  })
  it('When user click on TT , list avilable staff and subject ,section should dispaly', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.get('.col-md-8 span').contains('TT').click()
    cy.get('thead').children('tr').get('td:contains(Period)').should('exist').prev().children('a:contains(Section)').should('exist').parent().prev().children('a:contains(Subject)').should('exist').parent().prev().children('a:contains(Staff)').should('exist')
  })
  it('When user click on chose file and select the file , selected time table should displayy', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.get('span:contains(Section-Staff-Subject (upload))').click()
    cy.get('input[type="file"]').selectFile('./cypress/fixtures/btlcol_tt_2023Apr28.csv')
  })
  it('When user click on assign , list of days should dispaly', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.get('span:contains(Section-Staff-Subject (upload))').click()
    cy.get('a:contains(Sample data)').click()
    cy.get('.col-md-8 span').contains('TT').click()
    cy.get('div[class="tt-pool"]').children('table').get('tbody').children('tr').children('td:contains(SOU)').next('td:contains(DC)').next('td:contains(5A)').next('td').children('a:contains(Assign)').click({ force: true })
    cy.get('div[class="popover-class"]').should('be.visible')
  })
  it('When user click on Section link, section pop should display ', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.wait(10000)
    cy.get('div[class="column2"]').children('tt-input').find('table').children('tbody').children('tr').within(() => { cy.get('td:contains( Weekly pattern )').next().find('a:contains(Sections :)').click() })
    cy.wait(10000)
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('h2:contains(Sections)').should('be.visible')
    cy.get('thead tr th').should('have.length', 2).each((th, index) => cy.wrap(th).should('have.text', ['Id', 'Name'][index]))
    cy.get('button:contains(Save)').should('exist')
    cy.get('button[class="close"]').should('exist').click()
  })
  it('When user click on Subject link, subject pop should display ', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.wait(10000)
    cy.get('div[class="column2"]').children('tt-input').find('table').children('tbody').children('tr').within(() => { cy.get('td:contains( Weekly pattern )').next().next().find('a:contains(Subjects :)').click() })
    cy.wait(10000)
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('h2:contains(Subjects)').should('be.visible')
    cy.get('thead tr th').should('have.length', 2).each((th, index) => cy.wrap(th).should('have.text', ['Id', 'Name'][index]))
    cy.get('button:contains(Save)').should('exist')
    cy.get('button[class="close"]').should('exist').click()
  })
  it('When user click on Staff link, staff pop should display ', () => {
    cy.visit('/ttPlanner')
    cy.url().should('include', '/ttPlanner')
    cy.wait(10000)
    cy.get('div[class="column2"]').children('tt-input').find('table').children('tbody').children('tr').within(() => { cy.get('td:contains( Weekly pattern )').next().siblings().next().find('a:contains(Staff :)').click() })
    cy.wait(10000)
    cy.window().then((win) => { cy.stub(win, 'alert').as('popup') })
    cy.get('h2:contains(Staff)').should('be.visible')
    cy.get('thead tr th').should('have.length', 2).each((th, index) => cy.wrap(th).should('have.text', ['Id', 'Name'][index]))
    cy.get('button:contains(Save)').should('exist')
    cy.get('button[class="close"]').should('exist').click()
  })

  // Vault feature Tests

  it('When user click on Vault link,should navigate to vault page successfully ', () => {
    cy.visit('/vault')
    cy.url().should('include', '/vault')
    cy.get('a:contains(Artefact list )').should('be.visible')
    cy.get('.list-group').contains('li', 'Report').next('li').children('a:contains(Artefact list )').should('exist')
    cy.get('a[href="/ctng4/vault/artefact/download"]').should('exist')
    cy.get('a[href="/ctng4/vault/artefact/add"]').should('exist')
    cy.get('a[href="/ctng4/vault/artefact/manage"]').should('exist')
  })
  it('When user click on  Artefact search link,should navigate to Artefact Manage page successfully ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/manage"]').click()
    cy.url().should('include', '/artefact/manage')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('a:contains(Upload New Artefact)').should('be.visible')
    cy.get('table[class="table table-bordered table-condensed table-hover"]').children('thead').children('tr').each((index, element) => {
      const expectedHeader = [' Title ', 'Description', 'Tags', 'FileName', 'Created On', 'Status', 'Actions']
      expect(element.textContent).to.equal(expectedHeader[index])
    })
  })
  it('When user click on  Upload New Artefact link,should navigate to artefact/add page successfully ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/manage"]').click()
    cy.get('a:contains(Upload New Artefact)').click()
    cy.url().should('include', '/artefact/add')
    cy.get('.form-group').contains('label', 'Title').next('div').find('input[name="title"]').should('exist')
    cy.get('.form-group').contains('label', 'Description').next('div').find('input[name="description"]').should('exist')
  })
  it('When user click on Download Published link,should navigate to  Download Published Templates page successfully ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/download"]').click()
    cy.url().should('include', '/artefact/download')
    cy.contains('Download published artefacts from CampusTrack that can be used for bulk data uploads.').should('be.visible')
    cy.get('input[placeholder="Search"]').should('exist')
    cy.get('a:contains(Upload New Template)').should('exist')
    cy.get('table[class="table table-bordered table-condensed table-hover"]').children('thead').children('tr').each((index, element) => {
      const expectedHeader = ['Title', 'Description', 'Download']
      expect(element.textContent).to.equal(expectedHeader[index])
    })
  })
  it('When user click on Upload New Template link,should navigate to artefact/download/add page successfully ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/download"]').click()
    cy.get('a:contains(Upload New Template)').click()
    cy.url().should('include', '/artefact/download/add')
    cy.get('.form-group').contains('label', 'Title').next('div').find('input[name="title"]').should('exist')
    cy.get('.form-group').contains('label', 'Description').next('div').find('input[name="description"]').should('exist')
  })
  it('When user click on Upload artefact link,should navigate to artefact/download/add page successfully ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/download"]').click()
    cy.get('a:contains(Upload New Template)').click()
    cy.url().should('include', '/artefact/download/add')
    cy.get('.form-group').contains('label', 'Title').next('div').find('input[name="title"]').should('exist')
    cy.get('.form-group').contains('label', 'Description').next('div').find('input[name="description"]').should('exist')
  })
  it('When user enter all valid details in textfield and upload a file , artefact should get added ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/manage"]').click()
    cy.get('a:contains(Upload New Artefact)').click()
    cy.get('.form-group').contains('label', 'Title').next('div').find('input[name="title"]').type('college report')
    cy.get('.form-group').contains('label', 'Description').next('div').find('input[name="description"]').type('college details report')
    cy.get('input[id="file"]').selectFile('./cypress/fixtures/college.png')
    cy.get('button[class="btn btn-success btn-s"]').click()
  })
  it('When user click on download ,Selected artefact should get download ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/manage"]').click()
    cy.contains('td', ' adjustment transaction ').parent('tr').within(() => {
      cy.get('div').children('button[type="button"]').click()
      cy.get('ul').get('a:contains(Download)').click()
    })
    cy.verifyDownload('.st', { contains: true })
  })
  it('When user click on disable ,Selected artefact should get disable ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/manage"]').click()
    cy.contains('td', ' college report ').parent('tr').within(() => {
      cy.get('div').children('button[type="button"]').click()
      cy.get('ul').get('a:contains(Disable)').click()
    })
    cy.contains('td', ' college report ').parent('tr').within(() => {
      cy.get('div').children('button[type="button"]').click()
      cy.get('ul').get('a:contains(Enable)').should('exist')
    })
  })
  it('When user click on Enable ,Selected artefact should get Enable ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/manage"]').click()
    cy.contains('td', ' college report ').parent('tr').within(() => {
      cy.get('div').children('button[type="button"]').click()
      cy.get('ul').get('a:contains(Enable)').click()
    })
    cy.contains('td', ' college report ').parent('tr').within(() => {
      cy.get('div').children('button[type="button"]').click()
      cy.get('ul').get('a:contains(Disable)').should('exist')
    })
  })
  it('When user click on Upload artefact link,should navigate to artefact/download/add and it should contain Artefact Details', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/add"]').click()
    cy.url().should('include', '/vault/artefact/add')
    cy.get('.form-group').contains('label', 'Title').next('div').find('input[name="title"]').should('exist')
    cy.get('.form-group').contains('label', 'Description').next('div').find('input[name="description"]').should('exist')
    cy.get('label:contains(Meta)').should('be.visible')
    cy.get('input[placeholder="key"]').should('exist')
  })
  it('When user click on  Upload Artefact link,should navigate to artefact/add page successfully ', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/add"]').click()
    cy.url().should('include', '/artefact/add')
    cy.get('.form-group').contains('label', 'Title').next('div').find('input[name="title"]').should('exist')
    cy.get('.form-group').contains('label', 'Description').next('div').find('input[name="description"]').should('exist')
  })
  it('Verify back button in Artefact feature', () => {
    cy.visit('/vault')
    cy.get('a[href="/ctng4/vault/artefact/add"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault/artefact/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault')
    cy.get('a[href="/ctng4/vault/artefact/manage"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault/artefact/manage')
    cy.get('a:contains(Upload New Artefact)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault/artefact/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault/artefact/manage')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault')
    cy.get('a[href="/ctng4/vault/artefact/download"]').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault/artefact/download')
    cy.get('a:contains(Upload New Template)').click()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault/artefact/download/add')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault/artefact/download')
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/vault')
  })

})