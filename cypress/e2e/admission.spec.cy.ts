describe('Admission feature Test', () => {
  const un = Cypress.env('USERNAME')
  const pwd = Cypress.env('PASSWORD')
  function randomIntFromInterval(min, max) { // min and max included 
    return Math.floor(Math.random() * (max - min + 1) + min)
  }
  const rndInt = randomIntFromInterval(50, 99)
  const string = rndInt.toString()
  beforeEach(() => {
    cy.admission_login(un, pwd)
  })
  it('should navigate to admissions page successfully ', () => {
    cy.visit('/admissions')
    cy.url().should('include', '/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').should('exist')
    cy.get('a[href="/ctng4/admissions/seatMatrix/manage"]').should('exist')
    cy.get('a[href="/ctng4/admissions/applications/manage"]').should('exist')
    cy.get('a[href="/ctng4/admissions/shortlists/manage"]').should('exist')
  })
  it(' should navigate to seatmatrix add page successfully', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click({multiple:true})
    cy.url().should('include', '/seatMatrix/add')
    cy.contains('Course / Degree').should('exist')
    cy.get('select[name="course"]').should('exist')
    cy.contains('Total Seats').should('exist')
    cy.get('input[name="seatsNo"]').should('exist')
  })
  it('When user select course from Course / Degree dropdown ,selected course should show ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click({multiple:true})
    cy.contains('Course / Degree').should('exist')
    cy.get('select[name="course"]').should('exist')
    cy.get('select').select('B.Com 2').should('have.value', 'B.Com 2') // select option based on value
  })
  it('When click on Shortlists should navigate to Shortlists page successfully ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/shortlists/manage"]').click()
    cy.url().should('include', 'shortlists/manage')
  })
  it('When click on applications should navigate to applications/manage page successfully ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/applications/manage"]').click()
    cy.url().should('include', 'applications/manage')
  })
  it(' should navigate to seatmatrix add page successfully', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.contains('Course / Degree').should('exist')
    cy.get('select').select('B.Com 2').should('have.value', 'B.Com 2')
    cy.contains('Total Seats').should('exist')
    cy.get('input[name="seatsNo"]').should('exist')
  })
  it('user should able to enter Total seat', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.contains('Course / Degree').should('exist')
    cy.contains('Total Seats').should('exist')
    cy.get('input[name="seatsNo"]').type(string)
  })
  it(' Break up text should visible', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('label:contains(Breakup)').should('be.visible')
  })
  it('user should able to enter GM seats', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
  })
  it('user should able to enter OBC seats', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
    cy.get('input[ng-reflect-model="OBC"]').should('exist').parent().next().children('input[type="text"]').type('10')
  })
  it('user should able to enter SC seats', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
    cy.get('input[ng-reflect-model="OBC"]').should('exist').parent().next().children('input[type="text"]').type('10')
    cy.get('input[ng-reflect-model="SC"]').should('exist').parent().next().children('input[type="text"]').type('8')
  })
  it('user should able to enter ST seats', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
    cy.get('input[ng-reflect-model="OBC"]').should('exist').parent().next().children('input[type="text"]').type('10')
    cy.get('input[ng-reflect-model="SC"]').should('exist').parent().next().children('input[type="text"]').type('8')
    cy.get('input[ng-reflect-model="ST"]').should('exist').parent().next().children('input[type="text"]').type('8')
  })
  it('user click on Save seat matrix should get saved', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()
    cy.get('input[name="seatsNo"]').type(string)
    cy.get('input[ng-reflect-model="GM"]').should('exist').parent().next().children('input[type="text"]').type('15')
    cy.get('input[ng-reflect-model="OBC"]').should('exist').parent().next().children('input[type="text"]').type('10')
    cy.get('input[ng-reflect-model="SC"]').should('exist').parent().next().children('input[type="text"]').type('8')
    cy.get('input[ng-reflect-model="ST"]').should('exist').parent().next().children('input[type="text"]').type('8')
    cy.get('button:contains(Save)').click()
  })
  it('when user click on seatMatrix manage link,user should navigate to seat matrix/manage page', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/manage"]').click()
    cy.url().should('include', '/seatMatrix/manage')
    cy.get('thead tr').should('contain', 'Course / Degree').should('contain', 'Seats available').should('contain', 'Total number of seats').should('contain', 'Beakup')
  })
  it('when the user clicks on course /degree name navigate to seat matrix/manage page and when updates the seat matrix and clicks on the update button seat matrix should get updated', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/manage"]').click()
    cy.contains('a', 'MBA').click()
    cy.url().should('include', '/seatMatrix/edit')
    //cy.get('input[name="seatsNo"]').clear().type('15')
    cy.get('label:contains(Total Seats)').parent().next().children('input[name="seatsNo"]').clear().type('15')
    cy.get('button:contains(Update)').should('exist').should('be.enabled').click()
  })/*
  it('User is navigated to admissions- applications -shortlists  page and click on GM,user would be able to see shortlisted seats numbers based on GM', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Name of shortlisted student based on GM', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
    cy.get('th:contains(Name)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Email of shortlisted student based on GM', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
    cy.get('th:contains(Email)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Mobile number of shortlisted student based on GM', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
    cy.get('th:contains(Mobile)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see HSC score of shortlisted student based on GM', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
    cy.get('th:contains(HSC Score)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see SSC score of shortlisted student based on GM', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().find('td:contains( GM )').next().next().next().children('a').click()
    cy.get('th:contains(SSC Score)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page and click on OBC,user would be able to see shortlisted seats numbers based on OBC', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Name of shortlisted student based on OBC', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
    cy.get('th:contains(Name)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Email of shortlisted student based on OBC', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
    cy.get('th:contains(Email)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Mobile number of shortlisted student based on  OBC .', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
    cy.get('th:contains(Mobile)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see HSC score of shortlisted student based on  OBC ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
    cy.get('th:contains(HSC Score)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see SSC score of shortlisted student based on  OBC ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().find('td:contains( OBC )').next().next().next().children('a').click()
    cy.get('th:contains(SSC Score)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page and click on  SC ,user would be able to see shortlisted seats numbers based on SC ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Name of shortlisted student based on SC ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
    cy.get('th:contains(Name)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Email of shortlisted student based on SC ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
    cy.get('th:contains(Email)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Mobile number of shortlisted student based on SC.', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
    cy.get('th:contains(Mobile)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see HSC score of shortlisted student based on  SC', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
    cy.get('th:contains(HSC Score)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see SSC score of shortlisted student based on SC', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().find('td:contains( SC )').next().next().next().children('a').click()
    cy.get('th:contains(SSC Score)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page and click on ST ,user would be able to see shortlisted seats numbers based on ST ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Name of shortlisted student based on ST', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
    cy.get('th:contains(Name)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Email of shortlisted student based on  ST', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
    cy.get('th:contains(Email)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see Mobile number of shortlisted student based on  ST', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
    cy.get('th:contains(Mobile)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see HSC score of shortlisted student based on ST ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
    cy.get('th:contains(HSC Score)').should('exist')
  })
  it('User is navigated to admissions- applications -shortlists  page,user would be able to see SSC score of shortlisted student based on ST ', () => {
    cy.visit('/admissions')
    cy.get('a[href="/admissions/shortlists/manage"]').click()
    cy.get('td:contains(PUC II)').click()
    cy.get('tr:contains(Shortlist 1)').next().next().next().next().siblings().find('td:contains( ST )').next().next().next().children('a').click()
    cy.get('th:contains(SSC Score)').should('exist')
  })*/
  it('Verify back button in seat matrix feature', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/add"]').click()    
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/seatMatrix/add')
    cy.contains('Back').should('exist').click()    
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions')
    cy.get('a[href="/ctng4/admissions/seatMatrix/manage"]').click()    
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/seatMatrix/manage')  
    cy.get('th:contains(Course / Degree)').parents('thead').next('tbody').children('tr').first().find('a:contains(MBA)').click() 
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/seatMatrix/edit') 
    cy.contains('Back').should('exist').click()    
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/seatMatrix/manage') 
    cy.contains('Back').should('exist').click()   
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions')  
  })
  it('Verify back button in seat Application feature', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/applications/manage"]').click()    
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/applications/manage')
    cy.contains('Back').should('exist').click()   
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions')   
  })
  it('Verify back button in seat Shortlist feature', () => {
    cy.visit('/admissions')
    cy.get('a[href="/ctng4/admissions/shortlists/manage"]').click()    
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions/shortlists/manage')
    cy.contains('Back').should('exist').click()  
    cy.url().should('eq', Cypress.config().baseUrl + '/admissions')     
  })
})