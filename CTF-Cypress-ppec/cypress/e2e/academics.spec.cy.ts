describe('Academics feature Test', () => {
    const un = Cypress.env('USERNAME')
    const pwd = Cypress.env('PASSWORD')
    beforeEach(() => {
        cy.accdamic_login(un, pwd)
    })
    it('When user click on academics link should navigate to academics page successfully ', () => {
        cy.visit('/academics')
        cy.url().should('include', '/academics')
        cy.contains('Attendance').should('be.visible')
        cy.get('a[href="/academics/attendance"]').should('exist')
        cy.contains('Calendar').should('be.visible')
        cy.get('a[href="/academics/calendar/manage"]').should('exist')
        cy.get('a[href="/academics/calendar/events"]').should('exist')
        cy.contains('Exam').should('be.visible')
        cy.get('a[href="/academics/exam"]').should('exist')
        cy.contains('Timetable').should('be.visible')
        cy.get('a[href="/academics/absenteesReport"]').should('exist')
        cy.get('a[href="/academics/holidayListReport"]').should('exist')
        cy.get('a[href="/academics/todaysEventsReport"]').should('exist')
        cy.get('a[href="/academics/upcomingEventsReport"').should('exist')
        cy.get('a:contains(Consolidated Marks )').should('exist')
        cy.get('a:contains(Rank List )').should('exist')
        cy.get('a:contains(Result At A Glance )').should('exist')
        cy.get('a:contains(Top Scorers In Each Subject )').should('exist')
        cy.get('a:contains(First Ten Toppers )').should('exist')
        cy.get('a:contains(A+ In All Subjects )').should('exist')
        cy.get('a:contains(Attendance report )').should('exist')
        cy.get('a:contains(Coursewise Result Analysis )').should('exist')
        cy.get('a:contains(Consolidated Report )').should('exist')
        cy.get('a:contains(Exams list )').should('exist')
        cy.get('a:contains(Examwise Failures )').should('exist')
        cy.get('a:contains(Failures Report )').should('exist')
        cy.get('a:contains(Full Marks )').should('exist')
        cy.get('a:contains(Classwise / Gradewise Statistics )').should('exist')
        cy.get('a:contains(Hall Ticket )').should('exist')
        cy.get('a:contains(No Due Certificate )').should('exist')
        cy.get('a:contains(Result Analysis )').should('exist')
        cy.get('a:contains(Result At A Glance )').should('exist')
        cy.get('a:contains(Subject Average )').should('exist')
        cy.get('a:contains(Student performance )').should('exist')
    })
    it('when user click on attendance add link ,should navigate to attendance add  page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/attendance"]').click()
        cy.url().should('contain', '/attendance')
        cy.contains('Attendance for course : ').should('be.visible')
        cy.get('a[class="dropdown-toggle"]').should('exist')
    })
    it('when user select course from Attendance for course ,Attendance details of selected course should display', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/attendance"]').click()
        cy.get('a[class="dropdown-toggle"]').click()
        cy.get('label:contains(Attendance for course : )').should('be.visible')
        cy.get('a').contains(Cypress.env('CourseSelect')).click()
        cy.get('td button.btn-xs').should('exist').find('i.glyphicon-calendar').should('exist').parent().next().should('have.attr', 'name', 'selDate')
        cy.get('thead tr th').should('contain', 'Id').next().should('contain', 'Roll number').next().should('contain', 'Name').next().should('contain', 'Attendance');
    })
    it('when user click on calender add link ,should navigate to Calendar Events Add add  page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/calendar/events"]').click()
        cy.url().should('contain', '/calendar/events')
        cy.get('a:contains(Add New Event)').should('be.visible')
        cy.get('a:contains(Generate calendar)').should('be.visible')
    })
    it('when user click on Add New Event link ,new row should display in table', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/calendar/events"]').click( {force: true})
        cy.wait(5000)
        cy.get('a:contains(Add New Event)').click( {force: true})
        cy.wait(5000)
        cy.get('a:contains(Cancel)').should('be.visible').parents('td').prev().find('input[type="number"]').should('exist').parent().prev().find('select').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').children('span:contains(Any)').should('be.visible').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').children('span').find('span:contains( Every )').should('be.visible').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('input[type="text"]').should('exist')
    })
    it('when user click on Generate calendar link ,should navigate to Calendar Manage page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/calendar/events"]').click()
        cy.get('a:contains(Generate calendar)').click()
        cy.url().should('contain', '/calendar/manage')
        cy.get('a:contains(Manage events)').should('be.visible')
        cy.contains('Events on').should('be.visible')
        cy.get('table').should('be.visible')
        cy.get('button:contains(today)').should('exist')
    })
    it('when user click on calender manage link ,should navigate to Calendar Manage page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/calendar/manage"]').click( {force: true})
        cy.url().should('contain', '/calendar/manage')
        cy.get('a:contains(Manage events)').should('be.visible')
        cy.contains('Events on').should('be.visible')
        cy.get('table').should('be.visible')
        cy.get('button:contains(today)').should('exist')
        cy.get('td span').should('have.text', '2023-24Jul 2023')
        cy.get('td button:first-of-type').should('have.class', 'btn-default').and('have.attr', 'type', 'button').and('have.descendants', 'i.fa.fa-angle-left')
        cy.get('td button:last-of-type').should('have.class', 'btn-default').and('have.attr', 'type', 'button').and('have.descendants', 'i.fa.fa-angle-right')
    })
    it('when user click on Exam manage link ,should navigate to Exams Manage page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/exam"]').click()
        cy.url().should('contain', 'academics/exam')
        cy.get('h3').should('have.text', 'AcademicsExamsManage').and('contain', 'Academics').and('contain', 'Exams').and('contain', 'Manage')
        cy.get('input[placeholder="Search"]').should('exist')
        cy.get('a:contains(Add New Exam)').should('exist')
        cy.get('a:contains(Set Grading System)').should('be.visible')
        cy.get('thead.bg-info').should('contain', 'Name').should('contain', 'Start Date').should('contain', 'Course').should('contain', 'Status').should('contain', 'Actions')
    })
    it('when user click on TimTable manage link ,should navigate to Timetable Manage page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/timetable"]').click()
        cy.url().should('contain', 'academics/timetable')
        cy.get('h3').should('have.text', 'AcademicsTimetableManage').and('contain', 'Academics').and('contain', 'Timetable').and('contain', 'Manage')
        cy.get('thead').find('th').should('have.length', 2).first().should('have.text', 'Course')
        cy.get('thead').find('th').last().should('have.text', 'Manage');
    })

    it('when user click on Manage events link ,should navigate to Calendar Events add page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/calendar/manage"]').click()
        cy.get('a:contains(Manage events)').click()
        cy.url().should('contain', '/academics/calendar/events')
        cy.get('h3').should('have.text', 'AcademicsCalendarEventsAdd').and('contain', 'Academics').and('contain', 'Calendar').and('contain', 'Events Add')
        cy.get('a:contains(Add New Event)').should('be.visible')
        cy.get('a:contains(Generate calendar)').should('be.visible')
        cy.get('thead').find('th').should('have.length', 8).each(($th, index) => expect($th).to.contain(['Title', 'Month', 'Date', 'Day of week', 'Category', 'Priority', 'Action', 'Cron expression'][index]))
    })/*
    it('when user click on Remove link ,Selected Event should be removed from table', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/calendar/events"]').click()
        cy.get('a:contains(Add New Event)').click()
        cy.get('a:contains(Cancel)').should('be.visible').parents('td').prev().find('input[type="number"]').type('1').parent().prev().find('select').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').children('span:contains(Any)').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('input[type="text"]').type('Test')
        cy.get('a:contains(Cancel)').prev().find('a:contains(Save)').click()
        cy.contains('tr', 'Test').within(() => { cy.contains('a', 'Remove').click() })
    })
    it('when user try to craete a event with name which is already name of another event then Event already exists error message should display', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/calendar/events"]').click()
        cy.get('a:contains(Add New Event)').click()
        cy.get('a:contains(Cancel)').should('be.visible').parents('td').prev().find('input[type="number"]').type('1').parent().prev().find('select').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').children('span:contains(Any)').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('a[class="dropdown-toggle"]').should('exist').parents('td').prev().find('input[type="text"]').type(Cypress.env('title'))
        cy.get('a:contains(Cancel)').prev().find('a:contains(Save)').click()
        cy.get('span:contains(Event already exists)').should('be.visible').next().find('a:contains(x)').should('exist')
    })*/
    it('when user click on Exam manage link ,should navigate to Exams Manage page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/exam"]').click({ force: true })
        cy.url().should('contain', 'academics/exam')
        cy.get('h3').should('have.text', 'AcademicsExamsManage').and('contain', 'Academics').and('contain', 'Exams').and('contain', 'Manage')
        cy.get('a:contains(Add New Exam)').should('exist')
        cy.get('input[placeholder="Search"]').should('exist')
        cy.get('thead tr th').should('have.length', 4).each((th, index) => cy.wrap(th).should('have.text', ['NameStart Date', 'Course', 'Status', 'Actions'][index]))
        cy.get('label:contains(Use Grading)').should('be.visible').prev('input[type="checkbox"]').should('exist').should('be.checked')
        cy.get('a:contains(Set Grading System)').should('exist')
    })
    it('when user click on Add New Exam link ,Requried text field should display ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/exam"]').click({ force: true })
        cy.get('a:contains(Add New Exam)').click({ force: true })
        cy.url().should('contain', 'academics/exam')
        cy.get('h3').should('have.text', 'AcademicsExamsManage').and('contain', 'Academics').and('contain', 'Exams').and('contain', 'Manage')
        cy.get('input[placeholder="Exam Name"]').should('exist')
        cy.get('input[placeholder="Start Date"]').should('exist')
        cy.get('input[name="SplitExam"]').should('be.visible').should('not.be.checked')
        cy.contains('Split Exam').should('be.visible');
        cy.contains('Select All').should('not.be.checked')
        cy.get('input[name="selectAll"]').should('be.visible').should('not.be.checked')
        cy.get('button:contains(Save)').should('exist').should('be.disabled')
        cy.get('a:contains(Cancel)').should('exist')
    })
    it('when user click on Set Grading System, should navigate to grading system page  ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/exam"]').click({ force: true })
        cy.get('a:contains(Set Grading System)').click()
        cy.wait(5000)
        cy.url().should('contain', '/exam/grading')
        cy.get('h3').should('have.text', 'Grading System')
        cy.contains('.panel-heading', 'Grading Rules').within(() => {
            cy.get('.btn-warning').should('be.visible').and('contain', 'Reset')
            cy.get('.btn-success').should('be.visible').and('contain', 'Update')
        })
        cy.contains('div', 'Test Grade').should('be.visible')
        cy.get('input[name="marks"]').should('be.visible').and('have.attr', 'placeholder', '% Marks')
        cy.get('button:contains(Grade)').should('be.visible').and('be.disabled')
    })/*
    it('when user click on Evalute link ,should navigate to /evaluation page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/exam"]').click()
        cy.contains('tr', 'I B').find('td.text-center').first().find('a').click()
        //cy.contains('td', '01-Jul-2023').parent().find('td.text-center:first').contains('Evaluate').click()
        //cy.get('h3').contains('Academics').next('i.fa-angle-right').next('a').contains('Exams').next('i.fa-angle-right').next('a').contains('PUC II PCMB A').next('i.fa-angle-right').next('a').contains('dsxSqvkeubya').next('i.fa-angle-right').next('strong').contains('Evaluation')
        cy.get('label:contains("Studentwise")').siblings('input[type="radio"]').should('be.checked')
        cy.get('label:contains("Subjectwise")').siblings('input[type="radio"]').should('not.be.checked')
        cy.contains('Attendance').prev('input[type="checkbox"]').should('exist').should('not.be.checked')
    })*/
    it('when user click on Marks card generate link ,Marks card should be generated ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/exam"]').click()
        cy.contains('tr', 'I A').find('td.text-center').first().next().last().find('a:contains(Generate Markscard)').click()
    })
    it('when user click on exam title ,should navigate to edit page', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/exam"]').click()
        //cy.contains('tr', '01-Sep-2020').contains('a', 'September Monthly Test').click()
        cy.contains('tr', '11-Oct-2023').within(() => { cy.get('span:contains(11-Oct-2023)').prev().children('a:contains(Mid Term Exam)').click({ force: true }) })
        cy.url().should('contain', '/academics/exam/edit')
        cy.get('h3').should('contain', 'Academics').and('contain', 'Exams').and('contain', 'IV  A').and('contain', 'Mid Term Exam').and('contain', 'Edit')
        cy.contains('div.panel-heading', 'Exam Details').find('button:contains(Update)').should('exist')
        cy.contains('label', 'Name').next('div').find('input[name="Name"]').should('exist')
        cy.contains('div.panel-heading', 'Total Max Marks').find('button.btn-success').should('exist')
        cy.contains('label', 'Total Max Marks').next('div').find('input[name="TotalMaxMarks"]').should('exist')
        cy.contains('div.panel-heading', 'Days Worked').find('button:contains(Update)').should('exist')
        cy.contains('label', 'Days Worked').next('div').find('input[name="Name"]').should('exist')
        cy.get('thead.bg-info').find('th').should('have.length', 7).should('contain', 'Subjects').should('contain', 'Grading Only').should('contain', 'Max Marks').should('contain', 'Min Marks').should('contain', 'Scheduled On').should('contain', 'Conducted On').should('contain', 'Results')
    })/*
    it('when user changes exam details,and click on update button exam details should get updated', () => {
        function getRandomItem(arr) {
            const randomIndex = Math.floor(Math.random() * arr.length)
            const item = arr[randomIndex]
            return item
        }
        const array = ['I Semester I Unit Test']
        cy.visit('/academics')
        cy.get('a[href="/academics/exam"]').click()
        cy.contains('tr', 'Mid Term Exam').within(() => { cy.get('span:contains(Mid Term Exam)').prev().children('a').click() })
        cy.contains('label', 'Name').next('div').find('input[name="Name"]').clear().type(getRandomItem(array))
        cy.contains('div.panel-heading', 'Exam Details').find('button:contains(Update)').click()
    })*/
    it('when user click on TimTable manage link ,should navigate to Timetable Manage page successfully ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/timetable"]').click( {force: true})
        cy.contains('tr', 'I B (Annual)').within(() => { cy.contains('Timetable').click() })
        cy.url().should('contain', 'academics/timetable/manage')
        cy.get('a:contains(Add New Period)').should('exist')
        cy.get('a:contains(Save)').should('exist')
        cy.get('td').children('span').find('span:contains(Show sunday)').prev('input[type="checkbox"]').should('not.be.checked').should('exist')
        cy.get('thead tr').within(() => { cy.get('th:contains(Period )').next('th:contains(Monday)').next('th:contains(Tuesday)').next('th:contains(Wednesday)').next('th:contains(Thursday)').next('th:contains(Friday)').next('th:contains(Saturday)').next('th:contains(Actions)').should('be.visible') })
        //next('contain', 'Monday').and('contain', 'Tuesday').and('contain', 'Wednesday').and('contain', 'Thursday').and('contain', 'Friday').and('contain', 'Saturday').and('contain', 'Actions') });
    })
    it('when user click on Add New Period link ,new empty row should get display in Timetable ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/timetable"]').click()
        cy.contains('tr', 'I B (Annual)').within(() => { cy.contains('Timetable').click() })
        cy.wait(5000)
        cy.url().should('contain', 'academics/timetable/manage')
        cy.get('a:contains(Add New Period)').click({ force: true })
        cy.wait(5000)
        cy.get('th:contains(Period )').parents('thead').next('tbody').within(() => { cy.get('td:contains(1)').siblings('td').children('a:contains(Delete period)').should('be.visible', 'exist') })
        // cy.get('table[class="table"]').children('tbody').within(() => { cy.get('td:contains(1)').siblings('td').children('a:contains(Delete period)').should('be.visible', 'exist') })
    })
    it('when user click absent report link should navigate to absent report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/absenteesReport"]').click({ force: true })
        cy.url().should('contain', '/academics/absenteesReport')
        cy.get('input[name="reportFromDate"]').should('exist')
        cy.get('i[class="fa fa-file-pdf-o"]').click( {force: true})
        cy.verifyDownload('Absentees Report.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click Consolidated Marks link should navigate to Consolidated Marks report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/consolidatedMarksReport"]').click()
        cy.url().should('contain', '/academics/consolidatedMarksReport')
        //cy.get('button[class="dropdown-toggle"]').click()
        cy.get('span:contains(Course : )').next().children('button[class="dropdown-toggle"]').click()
        cy.wait(1500)
        cy.get('span:contains(I )').parent().prev('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click Holiday List link should navigate to holidayListReport page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/holidayListReport"]').click({ force: true })
        cy.url().should('contain', 'academics/holidayListReport')
        cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click todays Events link should navigate to todaysEventsReportt page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/todaysEventsReport"]').click({ force: true })
        cy.url().should('contain', '/academics/todaysEventsReport')
        cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click upcoming Events link should navigate to upcomingEvents Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/upcomingEventsReport"]').click({ force: true })
        cy.url().should('contain', 'academics/upcomingEventsReport')
        cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click rank List link should navigate to rank List Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/rankListReport"]').click()
        cy.url().should('contain', '/academics/rankListRepor')
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('Rank list.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click firstTenToppersReport link should navigate to firstTenToppersReportt page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/firstTenToppersReport"]').click( {force: true})
        cy.url().should('contain', '/academics/firstTenToppersReport')
        cy.wait(5000)
        // cy.get('button[class="dropdown-toggle"]').click()
        cy.get('span:contains(Course : )').next().children('button[class="dropdown-toggle"]').click( {force: true})
        cy.get('span:contains(I )').parent().prev('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('First Ten Toppers.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click Top Scorers In Each Subject  link should navigate to Consolidated Marks report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/topScorersReport"]').click( {force: true})
        cy.url().should('contain', '/academics/topScorersReport')
        // cy.get('button[class="dropdown-toggle"]').click()
        cy.get('span:contains(Course : )').next().children('button[class="dropdown-toggle"]').click( {force: true})
        cy.wait(1500)
        cy.get('span:contains(I )').parent().prev('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').click( {force: true})
        cy.verifyDownload('Subject Top scorers.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click A+ In All Subjects link should navigate to A+ In AllSubjects Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/aPlusInAllSubjectsReport"]').click()
        cy.url().should('contain', '/academics/aPlusInAllSubjectsReport')
        // cy.get('button[class="dropdown-toggle"]').click()
        cy.get('span:contains(Course : )').next().children('button[class="dropdown-toggle"]').click()
        cy.get('span:contains(I )').parent().prev('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('A+ in all subjects.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Student performance link, should navigate to Students Performance Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/studentPerformanceReport"]').click()
        cy.url().should('contain', '/academics/studentPerformanceReport')
        cy.get('span:contains(Exams : )').next('select').select(1)
        cy.get('span:contains(Course : )').next('select').select(1)
        cy.get('span:contains(Section : )').next('select').select(1)
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('Student Performance.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Subject Average link, should navigate to subject Average Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/subjectAverageReport"]').click( {force: true})
        cy.url().should('contain', '/academics/subjectAverageReport')
        cy.get('h4').should('contain.text', 'Academics Subject Average')
        cy.get('span:contains(Exams : )').next('select').select('I Semester I Unit Test')
        cy.get('span:contains(Course : )').next('div').find('button[class="dropdown-toggle"]').click().next('ul').find('span:contains(I)').parent().prev('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('Calendar Report.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Result At A Glance link, should navigate to result At A Glance Repor page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/resultAtAGlanceReport"]').click()
        cy.url().should('contain', '/academics/resultAtAGlanceReport')
        cy.get('h4').should('contain.text', 'Academics Result At A Glance')
        cy.get('span:contains(Exams : )').next('select').select('I Semester I Unit Test')
        cy.get('span:contains(Course : )').next('div').find('button[class="dropdown-toggle"]').click().next('ul').find('span:contains(I)').parent().prev('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('Result at a glance.pdf', { contains: true })
        cy.get('span:contains(Comprehensive Report)').parent().prev('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('Result at a glance.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Result Analysis link, should navigate to result Analysis Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/resultAnalysisReport"]').click({ force: true })
        cy.url().should('contain', '/academics/resultAnalysisReport')
        cy.get('h4').should('contain.text', 'Academics Result Analysis')
        cy.get('span:contains(Exams : )').next('select').select('I Semester I Unit Test')
        cy.get('span:contains(Course : )').next('div').find('button[class="dropdown-toggle"]').click().next('ul').find('span:contains(I)').parent().prev('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').click( {force: true})
        cy.verifyDownload('Result analysis.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on No Due Certificate link, should navigate to no Due Certificate page and able to download certificate ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/noDueCertificate"]').click({ force: true })
        cy.url().should('contain', '/academics/noDueCertificate')
        cy.get('h4').should('contain.text', 'Academics No Due Certificate')
        cy.get('span:contains(Courses)').parent().parent().prev().prev().children('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
        cy.get('span:contains(Courses)').parent().parent().prev().find('span[class="toggle-children"]').click( {force: true})
        cy.get('span:contains(I)').parent().parent().prev().prev().children('input[type="checkbox"]').check({ multiple: true })
        cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
        cy.get('span:contains(I)').parent().parent().prev().find('span[class="toggle-children"]').click({ multiple: true })
        cy.get('span:contains(A)').parent().parent().prev().prev().children('input[type="checkbox"]').check({ multiple: true })
        cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Hall Ticket link, should navigate to hallTicket page and able to download hallticket ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/hallTicket"]').click({ force: true })
        cy.url().should('contain', '/academics/hallTicket')
        cy.get('h4').should('contain.text', 'Academics Hall Ticket')
        cy.get('label:contains(Hall Ticket)').prev('input[type="radio"]').should('be.checked').parent().siblings().children('label:contains(Instructions)').prev('input[type="radio"]').should('not.be.checked')
        cy.get('span:contains(Mid Term Exam)').parent().parent().prev().prev().children('input[type="checkbox"]').check()
        cy.get('i[class="fa fa-file-pdf-o"]').should('exist')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Exams list link, should navigate to result Analysis Report page and able to download Schedule', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/examListReport"]').click({ force: true })
        cy.url().should('contain', '/academics/examListRepor')
        cy.get('h4').should('contain.text', 'AcademicsExam Schedule')
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('Exam List.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Consolidated Report link, should navigate to consolidated Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/consolidatedReport"]').click({ force: true })
        cy.url().should('contain', '/academics/consolidatedReport')
        cy.get('h4').should('contain.text', 'Academics Consolidated Report')
        cy.get('span:contains(Course : )').next('select').select('I A')
        cy.get('span:contains(SortBy : )').next('select').find('option').should('have.length', 2).then((options) => {
            const optionValues = ['Roll No', 'Total']
            options.each((i, option) => { expect(option.text).to.equal(optionValues[i]) })
        })
        cy.get('span:contains(Show Top Ten )').parent().prev('input[type="checkbox"]').check().should('be.checked')
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('Consolidated Report.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Coursewise Result Analysis link, should navigate to coursewise Result Analysis Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/coursewiseResultAnalysisReport"]').click()
        cy.url().should('contain', '/academics/coursewiseResultAnalysisReport')
        cy.get('h4').should('contain.text', 'Academics Result Analysis')
        cy.get('span:contains(Exams : )').next('select').select('I Semester I Unit Test')
        cy.get('span:contains(Course : )').next().children('select').select('I')
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('Coursewise result analysis.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Result At A Glance link in management report, should navigate to Result At A Glance Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/resultAtAGlanceManagementReport"]').click()
        cy.url().should('contain', '/resultAtAGlanceManagementReport')
        cy.get('h4').should('contain.text', 'Academics Result At A Glance')
        cy.get('i[class="fa fa-file-pdf-o"]').click()
        cy.verifyDownload('Result at a glance.pdf', { contains: true })
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Attendance report link, should navigate to Attendance report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/examAttendanceReport"]').click()
        cy.url().should('contain', '/examAttendanceReport')
        cy.get('h4').should('contain.text', 'Academics Exam Attendance')
        cy.get('button[title="Download As PDF"]').should('be.enabled')
        cy.get('button[title="Print"]').should('be.enabled')
        cy.contains('Report Header').should('be.visible')
        cy.contains('Page Header').should('be.visible')
        cy.contains('Page Header On Each Page').should('be.visible')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Full Marks link, should navigate to full Marks Report page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/fullMarksReport"]').click({ force: true })
        cy.url().should('contain', '/fullMarksReport')
        cy.get('h4').should('contain.text', 'AcademicsFull Marks')
        cy.get('span:contains(Exams : )').next('select').select('I Semester I Unit Test')
        cy.get('span:contains(Course : )').next('div').find('button[class="dropdown-toggle"]').click().next('ul').find('span:contains(I)').parent().prev('input[type="checkbox"]').check()
        cy.get('button[title="Download As PDF"]').should('be.enabled')
        cy.get('button[title="Print"]').should('be.enabled')
        cy.contains('Report Header').should('be.visible')
        cy.contains('Page Header').should('be.visible')
        cy.contains('Page Header On Each Page').should('be.visible')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Examwise Failures link, should navigate to Examwise Failures  page and able to download report ', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/examwiseFailuresReport"]').click({ force: true })
        cy.url().should('contain', '/examwiseFailuresReport')
        cy.get('h4').should('contain.text', 'Academics Failures Report')
        cy.get('span:contains(Exams : )').next('select').select('I Semester I Unit Test')
        cy.get('span:contains(Course : )').next('div').find('button[class="dropdown-toggle"]').click().next('ul').find('span:contains(I)').parent().prev('input[type="checkbox"]').check()
        cy.get('button[title="Download As PDF"]').should('be.enabled')
        cy.get('button[title="Print"]').should('be.enabled')
        cy.contains('Report Header').should('be.visible')
        cy.contains('Page Header').should('be.visible')
        cy.contains('Page Header On Each Page').should('be.visible')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
    })
    it('when user click on Classwise / Gradewise Statistics link, should navigate to Classwise / Gradewise Statistics page and able to download report ', () => {
        let url
        cy.visit('/academics')
        cy.get('a[href="/academics/gradewiseStatisticsReport"]').click({ force: true })
        cy.url().should('contain', '/gradewiseStatisticsReport')
        cy.get('h4').should('contain.text', 'Academics Classwise / Gradewise Statistics')
        cy.get('span:contains(Exams : )').next('select').select('I Semester I Unit Test')
        cy.get('span:contains(Course : )').next('div').find('button[class="dropdown-toggle"]').click().next('ul').find('span:contains(I)').parent().prev('input[type="checkbox"]').check()
        cy.get('button[title="Download As PDF"]').should('be.enabled')
        cy.get('button[title="Print"]').should('be.enabled')
        cy.contains('Report Header').should('be.visible')
        cy.contains('Page Header').should('be.visible')
        cy.contains('Page Header On Each Page').should('be.visible')
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
        /*cy.get('button[title="Print"]') .invoke('removeAttr', 'target') .invoke('attr', 'target', '_blank') .then((link) => {
    url = link.prop('href')
    console.log(link)
   // cy.visit(url)
    //cy.get('h3').invoke('text').should('contain', 'Grade-Wise Statistics')
  })*/
    })
    it('Verify back button in Attendance feature', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/attendance"]').click()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics/attendance')  
        cy.click_Back_Button()     
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
      })
      it('Verify back button in Calender feature', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/calendar/events"]').click()          // click on Add event link in academics page
        cy.url().should('eq', Cypress.config().baseUrl + '/academics/calendar/events')   // verify we are in events add page
        cy.get('a:contains(Generate calendar)').click()   // clcik on Generate calendar 
        cy.url().should('eq', Cypress.config().baseUrl + '/academics/calendar/manage') // verify we are in calender manage page
        cy.click_Back_Button()    
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')                        
        cy.get('a[href="/academics/calendar/events"]').click()          // click on Add event link in academics page
        cy.url().should('eq', Cypress.config().baseUrl + '/academics/calendar/events') 
        cy.click_Back_Button()   
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
        cy.get('a[href="/academics/calendar/manage"]').click() 
        cy.url().should('eq', Cypress.config().baseUrl + '/academics/calendar/manage') 
        cy.click_Back_Button()   
        cy.url().should('eq', Cypress.config().baseUrl + '/academics') 
      })  
      it('Verify back button in Exam feature', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/exam"]').click()          
        cy.url().should('eq', Cypress.config().baseUrl + '/academics/exam')  
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
      }) 
      it('Verify back button in timetable feature', () => {
        cy.visit('/academics')
        cy.get('a[href="/academics/timetable"]').click()          
        cy.url().should('eq', Cypress.config().baseUrl + '/academics/timetable')  
        cy.get('th:contains(Manage)').parents('thead').next('tbody').children('tr').first().find('a:contains(Timetable)').click()   // click on timetable link
        cy.url().should('eq', Cypress.config().baseUrl + '/academics/timetable/manage')     // verify timetable manage page
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics/timetable') 
        cy.click_Back_Button()  
        cy.url().should('eq', Cypress.config().baseUrl + '/academics')  
      }) 
})

