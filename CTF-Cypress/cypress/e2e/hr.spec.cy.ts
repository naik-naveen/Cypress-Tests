describe('Hr feature Test', () => {
  const un = Cypress.env('USERNAME')
  const pwd = Cypress.env('PASSWORD')
  beforeEach(() => {
    cy.hr_login(un, pwd)
  })
  it('should navigate to Hr page successfully ', () => {
    cy.visit('/hr')
    cy.url().should('include', '/hr')
    cy.contains('Year Wise Students /Staff').should('be.visible')
    cy.contains('Section-Classwise Gender Breakup').should('be.visible')
    cy.contains('Institutewise staff breakup').should('be.visible')
    cy.get('i[title="Add HR"]').should('exist')
  })
  it('When user click on hr/add link,should navigate to staff/add page ', () => {
    cy.visit('/hr')
    cy.get('a[href="/hr/staff/add"]').click()
    cy.url().should('include', 'staff/add')
    cy.get('input[placeholder="first  middle  last"]').should('exist')
    cy.get('select[name="gender"]').should('exist')
    cy.get('input[placeholder="Datepicker"]').should('exist')
    cy.get('select[name="staffType"]').should('exist')
    cy.get('input[type="email"]').should('exist')
    cy.get('input[type="text"]').should('exist')
  })
  it('When user click on hr/manage link,should navigate to staff/manage page ', () => {
    cy.visit('/hr')
    cy.get('a[href="/hr/staff/manage"]').click()
    cy.url().should('include', '/hr/staff/manage')
    cy.get('a:contains(Add New Person)').should('exist')
    cy.get('thead').within(() => {
      cy.get('th').eq(0).should('have.text', '#')
      cy.get('th').eq(1).should('have.text', 'Profile')
      cy.get('th').eq(2).should('have.text', 'Gender')
      cy.get('th').eq(3).within(() => {
        cy.get('span').eq(0).within(() => { cy.get('a').should('have.text', 'Name') })
        cy.get('span').eq(1).should('have.text', 'Alias')
      })
      cy.get('th').eq(4).within(() => { cy.get('a').should('have.text', 'DOJ') })
      cy.get('th').eq(5).should('have.text', 'Staff Id')
      cy.get('th').eq(6).should('have.text', 'Designation')
      cy.get('th').eq(7).should('have.text', 'Role')
      cy.get('th').eq(9).should('have.text', 'Contact')
      cy.get('th').eq(10).should('have.text', 'Actions')
    })
  })
  it('When user click on Add New Person link in staff manage page,should navigate to staff/add  page ', () => {
    cy.visit('/hr')
    cy.get('a[href="/hr/staff/manage"]').click()
    cy.get('a:contains(Add New Person)').click()
    cy.url().should('include', 'staff/add')
    cy.get('input[placeholder="first  middle  last"]').should('exist')
    cy.get('select[name="gender"]').should('exist')
    cy.get('input[placeholder="Datepicker"]').should('exist')
    cy.get('select[name="staffType"]').should('exist')
    cy.get('input[type="email"]').should('exist')
    cy.get('input[type="text"]').should('exist')
  })
  it('when user enter all valid details in all field in staff add page, and click on save button staff should get added', () => {
    cy.visit('/hr')
    cy.get('a[href="/hr/staff/manage"]').click()
    cy.get('a:contains(Add New Person)').click()
    cy.get('input[placeholder="first  middle  last"]').type(Cypress.env('Name'))
    cy.get('select[name="gender"]').select(Cypress.env('Gender'))
    cy.get('input[placeholder="Datepicker"]').type(Cypress.env('DateFrom'))
    cy.get('select[name="staffType"]').select('NonTeaching')
    cy.get('input[type="email"]').type(Cypress.env('USERNAME'))
    cy.get('input[name="mobile"]').type(Cypress.env('Number'))
    cy.get('button:contains(Save)').click()
  })
  it('when user click on name of staff, should navigate to staff edit page', () => {
    cy.visit('/hr')
    cy.get('a[href="/hr/staff/manage"]').click()
   // cy.contains('table tr', 'vinay vinay').click()
    cy.contains('a', 'vinay vinay').click()
    cy.url().should('include', '/hr/staff/edit')
    cy.get('div:contains(Identity )').children().children('button:contains(Update)').should('be.enabled').should('exist')
  })
  it('when user make changes, and click on update staff details should get updated', () => {
    cy.visit('/hr')
    cy.get('a[href="/hr/staff/manage"]').click()
   // cy.contains('table tr', 'vinay vinay').click()
    cy.contains('a', 'vinay vinay').click()
    function randomIntFromInterval(min, max) { // min and max included 
      return Math.floor(Math.random() * (max - min + 1) + min)
    }
    const rndInt = randomIntFromInterval(0, 99)
    const id = rndInt.toString()
   cy.get('input[name="staffId"]').type(id)
   cy.get('div:contains(Staff Id )').children().children('button:contains(Update)').should('be.enabled').should('exist').click()
  })
  it('when user click on edit icon ,user should navigate to profile page', () => {
    cy.visit('/hr')
    cy.get('a[href="/hr/staff/manage"]').click()
   // cy.contains('table tr', 'vinay vinay').click()
   cy.contains('table tr', 'vinay vinay').find('i[class="fa fa-pencil-square-o"]').click()
   cy.url().should('include','/hr/staff/manage/profile')
  })
  it('when user click on disable link ,selected staff should get deleted', () => {
    cy.visit('/hr')
    cy.get('a[href="/hr/staff/manage"]').click()
    cy.contains('table tr', 'vinay vinay').find('td:last-child a').click()
    cy.get('a:contains(Add New Person)').click()
    cy.get('input[placeholder="first  middle  last"]').type(Cypress.env('Name'))
    cy.get('select[name="gender"]').select(Cypress.env('Gender'))
    cy.get('input[placeholder="Datepicker"]').type(Cypress.env('DateFrom'))
    cy.get('select[name="staffType"]').select('NonTeaching')
    cy.get('input[type="email"]').type(Cypress.env('USERNAME'))
    cy.get('input[name="mobile"]').type(Cypress.env('Number'))
    cy.get('button:contains(Save)').click()
  })
  it('Verify back button in HR feature', () => {
    cy.visit('/hr')
    cy.get('a[href="/hr/staff/add"]').click()    
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/add') 
    cy.click_Back_Button()  
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/manage')
    cy.click_Back_Button()  
    cy.url().should('eq', Cypress.config().baseUrl + '/hr')
    cy.get('a[href="/hr/staff/manage"]').click()    
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/manage') 
    cy.get('a:contains(Add New Person)').click() 
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/add')  
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/manage') 
    cy.get('a:contains(Name)').parents('thead').next('tbody').children('tr').first().next().find('a:contains(vinay vinay)').click() 
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/edit')  
    cy.click_Back_Button()
    cy.url().should('eq', Cypress.config().baseUrl + '/hr/staff/manage') 
    cy.click_Back_Button()  
    cy.url().should('eq', Cypress.config().baseUrl + '/hr')              
  })
  
})